(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    456727,       9624]
NotebookOptionsPosition[    442960,       9282]
NotebookOutlinePosition[    444399,       9328]
CellTagsIndexPosition[    444319,       9323]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[1, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAKiEGSLED8//9/gvjRo0fsN27cELp69arY+fPnpZExPn137tzhBqrRBGJ/
ID4CxMfRMTZ9L168YL5w4YIaUD4AiC8C8Qcg/gvE/9AxFreC7PQD4gtA/BGq
7j8ujKz3+fPnLFC9b6H24dSHTf/FixfVofYSpRdZPzSsAqBuJkovsn5oOF8k
5F9s+h88eMBBjt0w/devXxcGso+S4m9k/ZcuXRKHpgeS3A7TD0wrkpToPw9J
ywOmn1L3Uxp+lMYfpemH0vRLjfwDjQey8y9a+fGOWDPwlF+gsPhEKDywlZ8g
d0D9EniexPITGd++fZv3PBnlN6764zxa3QHCAIDESDs=
         "], {{0, 26}, {16, 
         0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2V1vVFUUBuBGTfTSSygthYYKNHyVinrrpbcYfwBEJN5gUkyMfw9KKaVw
KCkQKCW1RNIQKg1gEE3QtdN10pMRZCaBzNQ+kzxt5nzstfeZfbPOu/vkD8e/
e6+vr+/sR/Hn+ImfvpyYOPHz1x/Hl2/OnP3+9JlT33515sdTp09NfHHy/TjY
H6592Nf3QfyvqmpHBwbCYNr5GoMNAw2d1AEAADa3/obtLba1aJ7rb4xR9x1D
YVfYHYbDnjASPgn7wv4wGg6Eg+FQOByOhLEwnj4Nx8Jn6fM21dcfyzHq8cay
xuGseTDnMJpz2pdzHMk5D+caduWa6v6p+czafU71s6p1+/cGAADYqt52/9va
++6tXt331j3v0TTeoj5e966v6lv3Vv/uWfWr9LJm9tzMpN+UW3eaVV9s00yY
CzfC7bAQFhvuhjt57maYD9er9c+VcDlcCtMd1AQAADafqXQhTabz6VyL+vhk
Xl/uLX1D6UFmw9VwrVrvL0o/cqta7ztKD3Iv/BLuh1/DSngYHoXfwlp4Ep6F
38Pz8Ed4Ef5Mf71Gff5F3vM8x3iWY65ljUdZcyXncD/ndC/neDvnfCPXcC3X
NJtrnG48r3afU/2s6uc11QO/OwAAwFbzLvrfksWVjK30kSV3KxncUlgOD6qN
vnc1PK42+t7iaaq/r+U1q9VG3/ogx1rKse9krfmsrV+l15R9WDLmkjWXzLl8
yvuVsmdLJl3eu5R9XN7BNLPrhTxX3seUvT3TQc2Xbfr7LWq3JgAAwH95m33K
u9Dt5wMAAMDmp2dlK+vGnu/2+yQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPN42aZu
1AQAAAAAAICtrNsZIXRTN/b8xTbNhLlwI9wOC2Gx4W64k+duhvlwvVr/XAmX
w6Uw3UFNAAAAAAAA6EVT6UKaTOfTuRb18cm8vtxbcrOSwc2Gq9V6FlcytlvV
eu5WMrilsBwehJXwMKyGx2EtPElPU/19La9ZzXtWcozlHHMxa9zKmnM5h9mc
03Rjfe2uq15bvb6pHvid2NzKPiwZc8maS+ZcPiWDLnu2ZNIlmy77uGTVzex6
Ic+VbLvs7ZkOau7owEAYTDtfY7BhoKGTOgAAAAAAANDr+hu2t9jWonmuvzFG
nbsNhd1hOOwJI2Fv2B9Gw4FwMBwKR8JYOJrGW9THx/LaQ3nvgRxrf449krWG
s/ZQtZH3NdfY7rrqtdW6/fvw/9LMnpuZ9Jty646y6n8AhCP7tg==
         "], {{0, 26}, {
         2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lktLQkEUxyVdCBIELaxctYq+QduWbcKMPoCSRRsDC6JPp+Lj4vuq+EBc
iBtFfIYrpU7nPzQiN++9vmrgp/dx5j8z55w5c099z56HPYvF8mLnH4/37TIY
9L7fHvDNXeDl6THgv78KvPof/cELn5UfnjBHjI3J5/OudVBV9bhUKjmbzaad
iCxmcB9lAxKMmzmv1+v7JvpfG/DJjJkic8NrOut0OlYdfdoCjPXBqMx1q9Vy
7FhfgvX0MUa73bYZ6edyuTnrvPsZQ4Wv9PTRL5vNroTOGIiJu9FoOLT6UjuT
yVAqlaJkMin+0+m0YPEZbHTGQDwKyKtl+ugHjdFoRIVCgeLxOCUSCQGua7Ua
9Xo9YQNbozXI/aHVZ//RcDik2WxG5XKZwuGwANdo0JfrNIhDvFqtHi7zD+YW
i8VoMBgIvWKxKEDrdrtiHbAxiAF8pHAf5zJ9+Bca0WiUxuMxydbv98U64CvY
wNZgTyioI9r8QR/EEvrQUhRlrh8Kheb6sDHTZ1xG84ePMP/pdPpr/tvoL/of
Mcb9Jv7X+mcxP2X+QCMSiYh5VyoVMQbXMbP81I2vzM/JZCLyX+a+BPmPvbFN
fmr36pr713B/rVp7THy/tD6Y1cjF5zrahvVtB5jW5y21B/kVzpc1kecjfK53
Pu7kfNfO+x+/T/70++ob7NUEtQ==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 TextAlignment->Center,
 CellTags->
  "SlideShowHeader",ExpressionUUID->"74cd32bf-af0a-4dbc-83ba-530c914e1bd6"],

Cell["\<\
CNN
Codes\
\>", "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.7112054682884808`*^9, 
   3.7112054797541*^9}},ExpressionUUID->"a8b44791-5f12-457b-b878-\
50e562ebbcf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ead32e1b-224f-41c6-8635-62727372f84f"],

Cell["Import Data", "Section",
 CellChangeTimes->{{3.711205487831609*^9, 
  3.71120549079748*^9}},ExpressionUUID->"8fe69326-8e22-460f-b117-\
d1befd4b7a65"],

Cell[CellGroupData[{

Cell["NCEP", "Subchapter",
 CellChangeTimes->{{3.7112054934290657`*^9, 
  3.711205494013219*^9}},ExpressionUUID->"9b46d942-155f-4d02-97fd-\
4e35385f52df"],

Cell[CellGroupData[{

Cell["GPH", "Subsubsection",
 CellChangeTimes->{{3.711205502078582*^9, 
  3.7112055032237873`*^9}},ExpressionUUID->"d9165368-2194-4acd-8261-\
c5067d83a5d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GPH", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"file", ",", 
       RowBox[{"minlat", "=", "22.5"}], ",", 
       RowBox[{"maxlat", "=", "55."}], ",", 
       RowBox[{"minlon", "=", "212.5"}], ",", 
       RowBox[{"maxlon", "=", "247.5"}], ",", 
       RowBox[{"height", "=", "850."}], ",", "\n", "\t\t   ", "lat", ",", 
       "lon", ",", "level", ",", "indexlat", ",", "indexlon", ",", 
       "indexlevel"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
      "SetDirectory", "[", 
       "\"\</Users/lambda/Documents/Data/NCEP_Reanalysis/GPH\>\"", "]"}], ";",
       "\n", "\t", 
      RowBox[{"file", "=", 
       RowBox[{"FileNames", "[", "\"\<*.nc\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"lat", ",", "lon", ",", "level"}], "}"}], "=", 
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{"file", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Datasets\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<lat\>\"", ",", "\"\<lon\>\"", ",", "\"\<level\>\""}],
             "}"}]}], "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"indexlat", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"lat", ",", "#"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"minlat", ",", "maxlat"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"indexlon", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"lon", ",", "#"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"minlon", ",", "maxlon"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"indexlevel", "=", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"level", ",", "height"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Datasets\>\"", ",", "\"\<hgt\>\""}], "}"}]}], "]"}],
           "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "indexlevel", ",", 
            RowBox[{
             RowBox[{"indexlat", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ";;", 
             RowBox[{"indexlat", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"indexlon", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ";;", 
             RowBox[{"indexlon", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}], "&"}], ",", 
        "\n", "\t\t\t", "file"}], "]"}]}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.711205506040427*^9, 3.711205520284738*^9}, {
   3.711205615828019*^9, 3.7112056300017853`*^9}, {3.711211337462138*^9, 
   3.711211432711211*^9}, {3.711211562165289*^9, 3.711211626724081*^9}, {
   3.711211663529181*^9, 3.711211939055444*^9}, {3.7112119716476793`*^9, 
   3.7112119721186533`*^9}, {3.711212045198674*^9, 3.711212046726297*^9}, {
   3.711212463477092*^9, 3.711212466137066*^9}, 3.71121251646031*^9, {
   3.711213172984706*^9, 3.7112131748429737`*^9}, {3.711213291081191*^9, 
   3.71121329124219*^9}, 
   3.711214405697592*^9},ExpressionUUID->"3bec1ee7-7d00-4b25-a791-\
8f44b74df74d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/lambda/Documents/Data/NCEP_Reanalysis/GPH/WestCoast/GPH.mx\>\"\
", ",", "GPH"}], "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.7112133600176277`*^9, 3.711213362066201*^9}, {
   3.711213393341188*^9, 3.711213414292327*^9}, {3.711213536127042*^9, 
   3.711213537356668*^9}, {3.711213596734221*^9, 3.7112135974581823`*^9}, {
   3.711213639717445*^9, 3.71121366216442*^9}, 
   3.711213719667221*^9},ExpressionUUID->"a0efea4d-c56a-43ac-8714-\
de74cec712e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GPH", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/lambda/Documents/Data/NCEP_Reanalysis/GPH/WestCoast/GPH.mx\>\"\
", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.711213429522335*^9, 3.7112135110376787`*^9}, {
   3.7112136468347073`*^9, 3.711213664560711*^9}, 3.711213696963661*^9, {
   3.711214969509973*^9, 
   3.711214969892867*^9}},ExpressionUUID->"0a5b5169-8948-4d97-8672-\
06d5b4e7218e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "GPH", "]"}]], "Code",
 CellChangeTimes->{{3.71124194157191*^9, 
  3.711241943731982*^9}},ExpressionUUID->"3fdf031a-41ee-470b-a0fe-\
d47bf07b3b3f"],

Cell[BoxData[
 RowBox[{"{", "70", "}"}]], "Output",
 CellChangeTimes->{
  3.711241944103571*^9},ExpressionUUID->"4fd632d3-6ed4-49a4-bd5b-\
ee7e401b1d97"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Precipitation", "Subsubsection",
 CellChangeTimes->{{3.711205502078582*^9, 3.7112055032237873`*^9}, {
  3.711214989780677*^9, 
  3.7112149926516047`*^9}},ExpressionUUID->"42abc3f9-46f0-4771-911f-\
a9b34674a621"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testpoint", "[", 
   RowBox[{"polygon_", ",", "pt_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Round", "[", 
    FractionBox[
     RowBox[{"Total", "[", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#1", "-", 
            RowBox[{"RotateRight", "[", "#1", "]"}]}], "&"}], ")"}], "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ArcTan", "@@", 
             RowBox[{"(", 
              RowBox[{"pt", "-", "#1"}], ")"}]}], "&"}], ")"}], "/@", 
          "polygon"}], "]"}], ",", 
        RowBox[{"2", " ", "\[Pi]"}], ",", 
        RowBox[{"-", "\[Pi]"}]}], "]"}], "]"}], 
     RowBox[{"2", " ", "\[Pi]"}]], "]"}], "\[NotEqual]", "0"}]}]], "Code",
 CellChangeTimes->{{3.7112870476713457`*^9, 
  3.711287080341469*^9}},ExpressionUUID->"88c3d152-7a4a-4fd8-9b53-\
6abe6c5f1969"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Precip", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"file", ",", "scope", ",", "net", ",", "indexes"}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"scope", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"51", ",", "235"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"51", ",", "241"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"39", ",", "241"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"34", ",", "246"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"31", ",", "246"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"31", ",", "242"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"38", ",", "235"}], "}"}]}], "}"}]}], ";", "\n", "\t", 
      RowBox[{
      "SetDirectory", "[", 
       "\"\</Users/lambda/Documents/Data/NCEP_Reanalysis/Precipitation\>\"", 
       "]"}], ";", "\n", "\t", 
      RowBox[{"file", "=", 
       RowBox[{"FileNames", "[", "\"\<*.nc\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"lat", ",", "lon"}], "}"}], "=", 
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{"file", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Datasets\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<lat\>\"", ",", "\"\<lon\>\""}], "}"}]}], "}"}]}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"net", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"lat", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"lon", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "lon", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "lat", "]"}]}], "}"}]}], "]"}]}], ";", "\n",
       "\t", 
      RowBox[{"net", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"net", ",", "1"}], "]"}], ",", 
         RowBox[{
          RowBox[{"And", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ">", "20"}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ">", "180"}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<", "55"}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "<", "260"}]}], "]"}], "&"}]}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"indexes", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"lat", ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"lon", ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
         RowBox[{"Select", "[", 
          RowBox[{"net", ",", 
           RowBox[{
            RowBox[{"testpoint", "[", 
             RowBox[{"scope", ",", "#"}], "]"}], "&"}]}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"data", "=", 
            RowBox[{"Import", "[", 
             RowBox[{
              RowBox[{"file", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<Datasets\>\"", ",", "\"\<prate\>\""}], "}"}]}], 
             "]"}]}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "&"}], ",", 
            "indexes"}], "]"}]}], "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "file", "]"}]}], "}"}]}], "]"}]}]}], "]"}]}],
   ";"}]], "Code",
 CellChangeTimes->{{3.711205506040427*^9, 3.711205520284738*^9}, {
   3.711205615828019*^9, 3.7112056300017853`*^9}, {3.711211337462138*^9, 
   3.711211432711211*^9}, {3.711211562165289*^9, 3.711211626724081*^9}, {
   3.711211663529181*^9, 3.711211939055444*^9}, {3.7112119716476793`*^9, 
   3.7112119721186533`*^9}, {3.711212045198674*^9, 3.711212046726297*^9}, {
   3.711212463477092*^9, 3.711212466137066*^9}, 3.71121251646031*^9, {
   3.711213172984706*^9, 3.7112131748429737`*^9}, {3.711213291081191*^9, 
   3.71121329124219*^9}, 3.711214405697592*^9, {3.711215058204077*^9, 
   3.711215059320819*^9}, {3.711215093323305*^9, 3.711215117744622*^9}, {
   3.711215175568824*^9, 3.711215179902383*^9}, {3.711216516616527*^9, 
   3.711216528615238*^9}, {3.711216634118462*^9, 3.7112166376696177`*^9}, 
   3.7112254303209753`*^9, {3.71122722723845*^9, 3.711227228493925*^9}, {
   3.711241292226261*^9, 3.711241333383971*^9}, {3.7112414044389553`*^9, 
   3.7112415140252047`*^9}, 3.711241607103092*^9, {3.711241821072364*^9, 
   3.711241853511512*^9}, {3.711287092487811*^9, 
   3.7112870943507032`*^9}},ExpressionUUID->"70559d2f-2472-4039-872e-\
1ab42f396ee1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/lambda/Documents/Data/NCEP_Reanalysis/Precipitation/WestCoast/\
Precip.mx\>\"", ",", "Precip"}], "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.7112133600176277`*^9, 3.711213362066201*^9}, {
   3.711213393341188*^9, 3.711213414292327*^9}, {3.711213536127042*^9, 
   3.711213537356668*^9}, {3.711213596734221*^9, 3.7112135974581823`*^9}, {
   3.711213639717445*^9, 3.71121366216442*^9}, 3.711213719667221*^9, {
   3.7112416604361258`*^9, 3.7112416638326483`*^9}, {3.7112416982131643`*^9, 
   3.711241727859405*^9}},ExpressionUUID->"4b071636-49a7-42a9-93e7-\
9c276654ab37"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Precip", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/lambda/Documents/Data/NCEP_Reanalysis/Precipitation/WestCoast/\
Precip.mx\>\"", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.711286707831141*^9, 
  3.711286716688293*^9}},ExpressionUUID->"07409753-0b67-4b34-bfaf-\
58f400ab0120"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "Precip", "]"}]], "Code",
 CellChangeTimes->{{3.711241732706761*^9, 3.711241768829832*^9}, {
  3.71124180351368*^9, 3.7112418162369537`*^9}, {3.711241922205532*^9, 
  3.711241937747799*^9}},ExpressionUUID->"18023f50-0b7d-47f5-b331-\
6fe65514ce26"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"70", ",", "36"}], "}"}]], "Output",
 CellChangeTimes->{{3.7112417355341043`*^9, 3.7112417692570257`*^9}, {
   3.711241803909526*^9, 3.711241816516901*^9}, {3.711241918959807*^9, 
   3.711241938095664*^9}, 
   3.711286720666072*^9},ExpressionUUID->"a30467e8-5d25-48d5-8c92-\
f310335cbb9c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"c0fd6aab-b7d7-4f4c-abeb-ada720782470"],

Cell[CellGroupData[{

Cell["ECMWF", "Subchapter",
 CellChangeTimes->{{3.7112054934290657`*^9, 3.711205494013219*^9}, {
  3.711242136887186*^9, 
  3.711242138100107*^9}},ExpressionUUID->"81cc478f-bc7e-4fff-8af7-\
ba39aec1440f"],

Cell[CellGroupData[{

Cell["GPH", "Subsubsection",
 CellChangeTimes->{{3.711205502078582*^9, 
  3.7112055032237873`*^9}},ExpressionUUID->"cf97fd09-d548-4722-9bce-\
e94d2b3bcd9b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GPH", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"file", ",", 
       RowBox[{"minlat", "=", "22.5"}], ",", 
       RowBox[{"maxlat", "=", "55."}], ",", 
       RowBox[{"minlon", "=", "212.5"}], ",", 
       RowBox[{"maxlon", "=", "247.5"}], ",", 
       RowBox[{"height", "=", "850."}], ",", "\n", "\t\t   ", "lat", ",", 
       "lon", ",", "level", ",", "indexlat", ",", "indexlon", ",", 
       "indexlevel"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
      "SetDirectory", "[", 
       "\"\</Users/lambda/Documents/Data/NCEP_Reanalysis/GPH\>\"", "]"}], ";",
       "\n", "\t", 
      RowBox[{"file", "=", 
       RowBox[{"FileNames", "[", "\"\<*.nc\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"lat", ",", "lon", ",", "level"}], "}"}], "=", 
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{"file", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Datasets\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<lat\>\"", ",", "\"\<lon\>\"", ",", "\"\<level\>\""}],
             "}"}]}], "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"indexlat", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"lat", ",", "#"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"minlat", ",", "maxlat"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"indexlon", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"lon", ",", "#"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"minlon", ",", "maxlon"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"indexlevel", "=", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"level", ",", "height"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Datasets\>\"", ",", "\"\<hgt\>\""}], "}"}]}], "]"}],
           "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "indexlevel", ",", 
            RowBox[{
             RowBox[{"indexlat", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ";;", 
             RowBox[{"indexlat", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"indexlon", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ";;", 
             RowBox[{"indexlon", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}], "&"}], ",", 
        "\n", "\t\t\t", "file"}], "]"}]}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.711205506040427*^9, 3.711205520284738*^9}, {
   3.711205615828019*^9, 3.7112056300017853`*^9}, {3.711211337462138*^9, 
   3.711211432711211*^9}, {3.711211562165289*^9, 3.711211626724081*^9}, {
   3.711211663529181*^9, 3.711211939055444*^9}, {3.7112119716476793`*^9, 
   3.7112119721186533`*^9}, {3.711212045198674*^9, 3.711212046726297*^9}, {
   3.711212463477092*^9, 3.711212466137066*^9}, 3.71121251646031*^9, {
   3.711213172984706*^9, 3.7112131748429737`*^9}, {3.711213291081191*^9, 
   3.71121329124219*^9}, 
   3.711214405697592*^9},ExpressionUUID->"eb745b59-4632-4109-87d6-\
1b62febe0989"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/lambda/Documents/Data/NCEP_Reanalysis/GPH/WestCoast/GPH.mx\>\"\
", ",", "GPH"}], "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.7112133600176277`*^9, 3.711213362066201*^9}, {
   3.711213393341188*^9, 3.711213414292327*^9}, {3.711213536127042*^9, 
   3.711213537356668*^9}, {3.711213596734221*^9, 3.7112135974581823`*^9}, {
   3.711213639717445*^9, 3.71121366216442*^9}, 
   3.711213719667221*^9},ExpressionUUID->"c5f52da3-f78c-4ca4-8fa3-\
0b3b51539bb9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GPH", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/lambda/Documents/Data/NCEP_Reanalysis/GPH/WestCoast/GPH.mx\>\"\
", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.711213429522335*^9, 3.7112135110376787`*^9}, {
   3.7112136468347073`*^9, 3.711213664560711*^9}, 3.711213696963661*^9, {
   3.711214969509973*^9, 
   3.711214969892867*^9}},ExpressionUUID->"23805bcc-8be5-4138-bf8c-\
e4a3086ab543"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "GPH", "]"}]], "Code",
 CellChangeTimes->{{3.71124194157191*^9, 
  3.711241943731982*^9}},ExpressionUUID->"5f767a5e-4eee-436c-adeb-\
c2ce1b09bb7b"],

Cell[BoxData[
 RowBox[{"{", "70", "}"}]], "Output",
 CellChangeTimes->{
  3.711241944103571*^9},ExpressionUUID->"356281e1-c1d3-40ee-9282-\
5749593a1c7a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Precipitation", "Subsubsection",
 CellChangeTimes->{{3.711205502078582*^9, 3.7112055032237873`*^9}, {
  3.711214989780677*^9, 
  3.7112149926516047`*^9}},ExpressionUUID->"3b5550a4-8522-497e-b86e-\
07d442699fcc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Precip", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"file", ",", "scope", ",", "net", ",", "indexes"}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"scope", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"51", ",", "235"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"51", ",", "241"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"39", ",", "241"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"34", ",", "246"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"31", ",", "246"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"31", ",", "242"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"38", ",", "235"}], "}"}]}], "}"}]}], ";", "\n", "\t", 
      RowBox[{
      "SetDirectory", "[", 
       "\"\</Users/lambda/Documents/Data/NCEP_Reanalysis/Precipitation\>\"", 
       "]"}], ";", "\n", "\t", 
      RowBox[{"file", "=", 
       RowBox[{"FileNames", "[", "\"\<*.nc\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"lat", ",", "lon"}], "}"}], "=", 
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{"file", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Datasets\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<lat\>\"", ",", "\"\<lon\>\""}], "}"}]}], "}"}]}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"net", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"lat", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"lon", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "lon", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "lat", "]"}]}], "}"}]}], "]"}]}], ";", "\n",
       "\t", 
      RowBox[{"net", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"net", ",", "1"}], "]"}], ",", 
         RowBox[{
          RowBox[{"And", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ">", "20"}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ">", "180"}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<", "55"}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "<", "260"}]}], "]"}], "&"}]}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"indexes", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"lat", ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"lon", ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
         RowBox[{"Select", "[", 
          RowBox[{"net", ",", 
           RowBox[{
            RowBox[{"testpoint", "[", 
             RowBox[{"scope", ",", "#"}], "]"}], "&"}]}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"data", "=", 
            RowBox[{"Import", "[", 
             RowBox[{
              RowBox[{"file", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<Datasets\>\"", ",", "\"\<prate\>\""}], "}"}]}], 
             "]"}]}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "&"}], ",", 
            "indexes"}], "]"}]}], "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "file", "]"}]}], "}"}]}], "]"}]}]}], "]"}]}],
   ";"}]], "Code",
 CellChangeTimes->{{3.711205506040427*^9, 3.711205520284738*^9}, {
   3.711205615828019*^9, 3.7112056300017853`*^9}, {3.711211337462138*^9, 
   3.711211432711211*^9}, {3.711211562165289*^9, 3.711211626724081*^9}, {
   3.711211663529181*^9, 3.711211939055444*^9}, {3.7112119716476793`*^9, 
   3.7112119721186533`*^9}, {3.711212045198674*^9, 3.711212046726297*^9}, {
   3.711212463477092*^9, 3.711212466137066*^9}, 3.71121251646031*^9, {
   3.711213172984706*^9, 3.7112131748429737`*^9}, {3.711213291081191*^9, 
   3.71121329124219*^9}, 3.711214405697592*^9, {3.711215058204077*^9, 
   3.711215059320819*^9}, {3.711215093323305*^9, 3.711215117744622*^9}, {
   3.711215175568824*^9, 3.711215179902383*^9}, {3.711216516616527*^9, 
   3.711216528615238*^9}, {3.711216634118462*^9, 3.7112166376696177`*^9}, 
   3.7112254303209753`*^9, {3.71122722723845*^9, 3.711227228493925*^9}, {
   3.711241292226261*^9, 3.711241333383971*^9}, {3.7112414044389553`*^9, 
   3.7112415140252047`*^9}, 3.711241607103092*^9, {3.711241821072364*^9, 
   3.711241853511512*^9}},ExpressionUUID->"c609c961-bec9-42c8-ad39-\
bcf4c9237489"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "Precip", "]"}]], "Code",
 CellChangeTimes->{{3.711241732706761*^9, 3.711241768829832*^9}, {
  3.71124180351368*^9, 3.7112418162369537`*^9}, {3.711241922205532*^9, 
  3.711241937747799*^9}},ExpressionUUID->"5acb09e0-da3b-491f-b760-\
19ff227d3375"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"70", ",", "36"}], "}"}]], "Output",
 CellChangeTimes->{{3.7112417355341043`*^9, 3.7112417692570257`*^9}, {
  3.711241803909526*^9, 3.711241816516901*^9}, {3.711241918959807*^9, 
  3.711241938095664*^9}},ExpressionUUID->"77ccddf3-cc7b-4b2b-80a1-\
e80678fc3499"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0002cdf4-340c-4265-ae3f-9d00e9a70a02"],

Cell[CellGroupData[{

Cell["CPC Gauge", "Subchapter",
 CellChangeTimes->{{3.7112054934290657`*^9, 3.711205494013219*^9}, {
  3.711242136887186*^9, 
  3.7112421592996407`*^9}},ExpressionUUID->"52084d9b-b9f7-4d41-9496-\
ed24c0b5de6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Precip", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"file", ",", "scope", ",", "net", ",", "indexes"}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{
      "SetDirectory", "[", 
       "\"\</Users/lambda/Documents/Data/CPC_Precipitation\>\"", "]"}], ";", 
      "\n", "\t", 
      RowBox[{"file", "=", 
       RowBox[{
        RowBox[{"FileNames", "[", "\"\<*.nc\>\"", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"lat", ",", "lon"}], "}"}], "=", 
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{"file", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Datasets\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<lat\>\"", ",", "\"\<lon\>\""}], "}"}]}], "}"}]}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"scope", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"50", ",", "235"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"50", ",", "240"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"38", ",", "240"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"34", ",", "246"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"32", ",", "246"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"32", ",", "242"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"38", ",", "235"}], "}"}]}], "}"}]}], ";", "\n", "\t", 
      RowBox[{"net", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"lat", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"lon", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "lon", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "lat", "]"}]}], "}"}]}], "]"}]}], ";", "\n",
       "\t", 
      RowBox[{"net", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"net", ",", "1"}], "]"}], ",", 
         RowBox[{
          RowBox[{"And", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ">", "20"}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ">", "180"}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<", "55"}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "<", "260"}]}], "]"}], "&"}]}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"indexes", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"lat", ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"lon", ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
         RowBox[{"Select", "[", 
          RowBox[{"net", ",", 
           RowBox[{
            RowBox[{"testpoint", "[", 
             RowBox[{"scope", ",", "#"}], "]"}], "&"}]}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"data", "=", 
            RowBox[{"Import", "[", 
             RowBox[{
              RowBox[{"file", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<Datasets\>\"", ",", "\"\<precip\>\""}], "}"}]}], 
             "]"}]}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "&"}], ",", 
            "indexes"}], "]"}]}], "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "file", "]"}]}], "}"}]}], "]"}]}]}], "]"}]}],
   ";"}]], "Code",
 CellChangeTimes->{
  3.7112867402921247`*^9, {3.711286909918229*^9, 3.711286911316546*^9}, {
   3.7112871873884487`*^9, 3.711287196298561*^9}, {3.7112872316036987`*^9, 
   3.7112872502427177`*^9}, {3.711287447261672*^9, 
   3.711287488385982*^9}},ExpressionUUID->"0d8451a9-f444-4d36-903a-\
2ecc7fbe6a73"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/lambda/Documents/Data/CPC_Precipitation/Precip.mx\>\"", ",", 
    "Precip"}], "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.7112133600176277`*^9, 3.711213362066201*^9}, {
   3.711213393341188*^9, 3.711213414292327*^9}, {3.711213536127042*^9, 
   3.711213537356668*^9}, {3.711213596734221*^9, 3.7112135974581823`*^9}, {
   3.711213639717445*^9, 3.71121366216442*^9}, 3.711213719667221*^9, {
   3.7112901485342827`*^9, 
   3.7112901578136377`*^9}},ExpressionUUID->"73c58722-1877-41c2-b612-\
1dd502e14d9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Precip", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/lambda/Documents/Data/CPC_Precipitation/Precip.mx\>\"", 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.711286707831141*^9, 3.711286716688293*^9}, {
  3.711290176522011*^9, 
  3.711290176872889*^9}},ExpressionUUID->"40ff5552-738d-41ba-a70f-\
8fa722265371"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "Precip", "]"}]], "Code",
 CellChangeTimes->{{3.711290178954419*^9, 
  3.7112901815685167`*^9}},ExpressionUUID->"737788cf-d367-4c21-a227-\
eae36df9419a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"59", ",", "1488"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7112901818760777`*^9},ExpressionUUID->"282f9950-4de8-428a-8891-\
249f47e04232"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "indexes", "]"}]], "Code",
 CellChangeTimes->{{3.711286944490426*^9, 3.711286960672267*^9}, {
  3.711287111837905*^9, 3.7112871181157722`*^9}, {3.71128715682731*^9, 
  3.711287162260193*^9}},ExpressionUUID->"879dbd55-a507-4ff3-93ae-\
ef288b37c50c"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {
      {RGBColor[0.65, 0., 0.], PointSize[0.008333333333333333], 
       AbsoluteThickness[1.6], 
       StyleBox[PointBox[CompressedData["
1:eJx12UmOLGdyBOCENjqHDlFzZaZ1N6meW1JrHhcCtNYV7Gh+NE31O5AfVdwE
rJwg3/sswmOoP/v3//zjf/zJ5XJ5/dPL5X+O//tP/zz/d/xVHvLl14+55Mtv
mJMvv2VOvvyOOfnye+bkyx+Yky9/wZx8+cuv4y+/jr96zCUfj52Tj8fOycdj
5+TjsXPy8dg5+XjsnHw8dk4+Hv3l/388PsWn+BSf4lN8ik/xKT7Fp/gUn+JT
fIpP8Sk+nie67Jxj/fmvmZP3fDpz8p5PZ07e8+nMyXs+nTl5z6czJ+/5dObk
PZ/YK15Xnkc69Zvjnm/4Fb/iV/yKX/ErfsWv+BW/4lf8il/x2/Pkm73sXvI6
9DzTbecc689/w5y85+OZk/d8PHPyno9nTt7z8czJez6eOXnPxzP/8TFfvrnP
uefda163noc69pvjnq/4Ft/iW3yLb/EtvsW3+Bbf4lt89zz5kb8X+fLNc4T3
Ue8b7kWvc89TXXfOsf78t8zJez6fOXnP5zMn7/l85uQ9n8+cvOfzmf/A3+NH
5uTLN89tPrd4n/Y+5F51L3ge69xvjnu+41/8i3/xL/7Fv/gX/+Jf/Pc8+YE/
N3mvhzMnX755bva50ecknwO8r7mX3SOe57rvnGP9+e+Yk/d6OHPyXg9nTt7r
4czJez2c+S/4c/7AnLzXC/2UfnyP8Tne51afy3zO8D7pXnfveB3YQ7857vVC
P6Wf0k/pp/RT+in9lH72PPkFfy7yXk9nTt7r6czJl2/eM33P8r3C52afA32O
8b7rfcE95XViLzvnWH/+e+bkvZ7OnLzX05mT93o685/z5/gFc/Jeb/RX+iv9
lf78LuB7se+Bvuf43O5zp89J3se9r7jXvI7sqd8c93qjv9Jf6a/0V/s758HP
+f+Q9/o7c/Jef2dO3uvvzMmXb77j+B3D93bfS33P8j3B51qfu3wO8D7k3vO6
sqedc6w//wNz8vZ35j/jv/Nz5uS9/uiv9Ff6K/2V/kp/fnfzu5PfWfyO4Hux
73W+h/ic7HObzw3ep9yDXlf21G+Oe/3Z3zn+jH+PvNffmZP3+jtz8l5/Z07e
6+/MyZdvvpP6ndDvYn738TuG7+G+N/pe43O2z3k+V3jfcg96XdnThZ52b+Yx
n/5Kf6W/0l/pr/RX+iv9lf5Kf6U/v2v7XdfvmH6n87uT3018z/c91Pcin8t9
DvQ5w/uWe7D2d+5jecwl7/V35uS9/s6cvNffmZP3+jtz8l5/Z06+fPN7CL/D
+93Z76p+J/Q7l99l/G7ge6zvUT63+1zoc8aF54x97riT85hL3uuP/kp/pb/S
X+mv9Ff6K/2V/kp//t7I35v4ewK/g/td1++SfkfzO4/fHXzv9T3L5/ja33kP
u5Hv5Dzmkvf6O3PyXn9nTt7r78zJe/2dOXmvvzMnX/g937e/9+P3Xj/5PQ+/
x/jJd3m+K//kOyjf6X7y3YjvFr4n5+Qr+Ua+k/OYSz79hf5Cf6G/0F/oL/QX
+gv9hf5Cf6G/0F/oL/QX+gv9hf5Cf6G/0F/or2f+Sb6Sb+Q7OY+55N2f9Ff6
K/2V/kp/pb/SX+mv9Ff6K/2V/kp/pb/SX+mv9Ff6K/2V/ubkD/In+Uq+ke/k
POaST39Df0N/Q39Df0N/Q39Df0N/Q39Df0N/Q39Df0N/Q39Df0N/Q39Df5e/
+jq+kz/In+Qr+Ua+k/OYS97735mT9/535uS9/505ee9/Z07e+9+Zk/f+d+bk
vf+dOXnvf2dO3vvfmZN3f578Rn4nf5A/yVfyjXwn5zGXvPc/+gv9hf5Cf6G/
0F/oL/QX+gv9hf5Cf6G/0F/oL/QX+uuZv5LfyO/kD/In+Uq+ke/kPOaS9/5H
f6W/0l/pr/RX+iv9lf5Kf6W/0l/pr/RX+iv9lf7m5BfyK/mN/E7+IH+Sr+Qb
+U7OYy5573/0N/Q39Df0N/Q39Df0N/Q39Df0N/Q39Df0N/Q39Hf549fxmfxC
fiW/kd/JH+RP8pV8I9/Jecwl7/3vzMl7/ztz8t7/zpy8978zJ+/978zJe/87
c/Le/86cvPvz5CfyM/mF/Ep+I7+TP8if5Cv5Rr6T85hL3vsf/YX+Qn+hv9Bf
6C/0F/oL/YX+Qn+hv9Bf6av0VfoqfZW+Sl+lr9JX6av0VfoqfZW+Sl+lr9JX
6av0VfoqfZW+Sl+lr9JX6av0NfQz9DP0M/Qz9DP0M/Qz9DP0M/Qz9DP0M/Qz
9DP0M/Qz9DP0M/Qz9DP0M/Qz9DP0M/Rz+euv4xP5mfxCfiW/kd/JH+RP8pV8
I9/Jecwl7/3pzMl7fzpz8t6fzpy896czJ+/96czJu9/wD/7BP/gH/+Af/IN/
8A/+wT/4B//gH/yDf/AP/sE/+Af/4B/8g3/xL/7Fv/gX/+Jf/It/8S/+xb/4
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
         "]],
        FontFamily->"Baskerville"]}}, {}}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{43.82812500000001, 0},
  BaseStyle->{FontFamily -> "Baskerville"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Baskerville"},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{45., 120.}, {0, 64.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.711286947118518*^9, 3.711286960951844*^9}, {
   3.711287112387353*^9, 3.711287118391965*^9}, 3.71128716259444*^9, 
   3.711287604251278*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsfQmYnFd1ZRljlphsE0iYmUAMISFhBjKBMGEIM0km20AmZAIDJEASCFnM
ZF8IBLPa2AZbu2RbwrJbbVlbL+qWetG+7/u+7/u+S90tqbvv3HP/e17d/+/q
VksW2BjX9yF8br3qrq76/3fPufe8937v0/9y71/87af/5bOf+fQ9v/NPn/6H
ez/7mX++57f//p80dOcdpdId95ZKpUP3lPDfov/p/9jjs/jHQYX//hn7vzvl
ypXL0pm9ovQyj1272i4d1yzq414hbVfapFvio1tf28Yf093VJd3d3Y6yf6+2
t8m161nsLR673tEubR3Xcr+u81qHtF+9nhvXee2qtLVfzY3zX2norSnWlWIv
qxB7W3gvV7O/s/Sz9u9dcuXiOWm/3uV/zXW50tbh77300/Z/PyBXL56UmjEj
pa6xUaqrq2XX0fM2+sCWZTJp4nh5ZlyNrNt1jMOvt52TlrpnpKauXsaOnSRn
269LZ/s5aa4dK7X19VLTvEjfRfdP+5s6s2eNVE+aLFe7+eZfLttXzpGJNTVS
/Wyd7Dx6/s3+k6W7U9YvbJGxk+qlvmasTJ6x0r6OY/s2yxj9TXUTqmXV9v18
I/vWLZVRo57UX1ojc1Zts/fcdfWSNE6uk7pJE6WhdYb+6d332PAftk9s3dJZ
MnjAQJm3ZocNv67vu762VoePl6kz58pV/aA6U2yCNM2ch1jpjfYzfkgunjoo
VU8Ml6cnNMiZy/YNy4VTB+Tpx4dJ1cRGjV23b3DT6oUydlytTJowVvYcP//G
9BauyqKZU2Tw4KH6hxyyl89ueFa+NWCoPPHYCHngW4Nk14k2ab90TMZPmCT1
E5+VmYtX4Not3RG/tLvl/OGdMrV1juCb3bK4Sb41bIxeD2dlxIihsufMVbl4
aKMMfOzbcv5qd4mf74pZE2X05Pn2a1ueHS5jW1bKmvn1Ut28zD6dmqeHyNyN
B/j5XtN38cjXvyE7T162l3Sc2ScDho2Q0x1dcmTzQhn81AR8OG/yd3Tl1E75
ty/cL0cuXpeutlPyrS/9m2w+eFSqhw2WLccu6cv3ysBvDtfrpSu9oxN798iR
kxfww2XM6JGy7dhF2TS3QcZMnmOfY8NTI2Tm8p1v8o+/7dR+efQr98vx9uwu
XdY8QcY1L7YLZ+LIYbJk8xFZPb1GxrcssdiEJ4bKwvX7f8ovxaZRg6Rx3upw
H71amkYOlCnz19iPu3x6vwwZOFzO6F91aNNCGfr4RNHvOH37p3atlUcfHCCX
fY44vmejDB8wRFZt2SGHjhyTq9c7Zdq4J6V5yRZcRvLkoEGyYd8Z/+ayO/JV
0nZ0uwweMUy2blwlAwYNkQv4CrvOyoCHB8r2wxf40Ux+8mFpXnfAftGa+VPk
sdFNMvGxB2XuloMWWzGrVp4YO/st/ncsbNI7ctZae2rP8mky8ImnBddi1+VD
8sD9g+X4xWul9E2d3Cn3feEbchx/SIf+5q98WZasXSZfe2CYXMR01NUh1YPv
l5UHzqVJ4uCuLbJi5TqZOGqENM5aLOOeHiGti7fb79s6p0ZGTmrGvXqPf1Tt
pw/K0AcellMdYlf9qGEDZO7qfTZ8bctYGTu1RZ7Um2bemiy2prlanpoyh9/U
tKeGS8uidblvatroYfob19vw3WtnyjcGj7f/vnbmkAx55CE5dLnLv6k75fSe
DTL0kaFyJbz+5J71UvXkGDndrrdT9wV55OFvyYY9p+1nzNG7oXbBWt5kb+Hl
eWC3XLjcIbtWztQbbLTs2rRSHhs2UmzKlosy7JuDZduhc/xccQ+NH/IVeXRU
nRw6dECqHh8gM5ZvkfGDH5S1+05kf+i8KTKqekaJ39ulY9tl1FPjcZ3JjsUt
MurpCTauq/24fOv+IXLswtX0vWkCklXTn5WBI78tT418REZPWSrnj26Srw0Z
Lfij8L1NeOJhWbLnlN9hd8tm/ZnDRj4jmzZtkCEPfF5G6Sz1dNUTep8fsd+z
a3GDPDapCd9dqfKX1yYjRw6WZdtP2vjNcyZJ1eRGGfXkY7J8RxbbNHuCfLtx
Vn+/vO2rWuSR6hb7787zR2X4kG/KvgudFb+8O/2m2aRpYehTk6W9/bQMGDpE
dhy7Yq9fVDdSJsxdVZgcMXUsqHlcnnpmnP6x1bJx/xk5tWOVPDpwiFzC7dZ9
XgY8NEi2HjyfpqKWsUPkSf0gZs+YJsvX77Sf8cyjX5UFW7N5esXsyfJY9Sx+
b3h6Ws0E2Xu2Q/Yuny6DR1bZ/dZ55Yg88PXBue+tu7NDplSPkOkrt8iONbNl
4KhaOXlos9z3wPB0v40d9nVZtu+Mv+Y1uK5l9IhHpGXZnuwPrXlaxtQ06hWs
993SXRbbNr9GHp80tff7rkOewH23NptF1s8YK9WNU2TkY3rfrctmkXXTq+XJ
xpn9/ep2rp4mDwydlN13Zw/J0IHfkAMXu9IMGb46eyxrrpGZKzTXdl/RmfNh
WbtpqwzU/Ltx31l7ft7EYTJx3uoKX9/mtYtl8+5DcvpsRkauXTgigwcNkyM6
Z109vUseHfKYnGrrTF/fthWz5KmJM23slfMn5fSldlkwZYxMmJW986axI6Rp
xU7eFp1XL8pGfTOnz5yTTfr1TV20UTr0xz4yeKRN72f3rpJHHhsjbZ3d6Wvs
6rggw7/6r7LjnH7Rlw/Kl744UE6ePSUjv/Wo7Dt/TbovH5NBDw6UY5fLU61e
EDJe0w6n5uaqUTJz2VZZOW2iTGxeYrFpY0fJ1HnrSsxyV07uk4Ffe1BOdmR5
Zq5+9fWzsxTV+NTjOo/ulAWTn5HJc7JYw+jH9Gdu43fYNGqwNC/Mf4dNIwfp
95p9Ehc0/wx65DG5oj/91O7VMmjw09IWOM7JXWtk0MOD/TvslsYnn5R1+/Rb
6G6TAV/VrLD1gEzVGWTO2r24dGXMkEGyYvuR3NT5atmiU+agQUPl8SdGy94T
2Xe4YclcGVszVRomVsmS9dtTbum+3i5zWydJ8/Tpes0PkzX7T0jH+eMydsw4
aWmZKhNq6uXytU5+1d2dVzQNDZQhI56Q4UMHyrjGGfZGl81skYkNrVI77ilZ
v/NwmVV2yfIZdfLsxAZprBsnE6cukC792/duXCDjJ9VIQ12N3lFb+WZOK9l8
8oknZcb0Fhmtk+U5Ja6dl08o+ayS1mmtepE1ybn2zjKr7JSVC5vlkUeGKW/I
vrD2c4elZrwOb22RqpppAqLYEWO1GrtazlbnT+yV4Y88rCR2a/rGzmlsmGa1
uaszYgs6s3LuZKmf0iTPjhsvq3ceKyVa2d0hc5onytAR+k36nbdn4wqZVN8q
TTXPyONPT9J5psu++Qnjn5GW5ikyrmk+tAIz3g/6W7l06ZJcvmx8r/Ra+/fl
0tV5Xefddmlva5fOrm4qkDMnjsqxU+cMUdHgejh66KCcOnsxKZXrHZfkwMFD
xqPf4j+y/Yr+mjYluu0dqp46OfTE0UNy6tyl3I/Erzly4nS4nO+Uc6eOy9Hj
p3PjOq5ckIMHD8u1riC6Oq7IwQMHpeM6SXD2Fi9fuoxLoPwW2y/puEOicrCs
D9vKsXs8drVD33JB2FWKnThS/jt4W3brF3j58hVLtBx36fxpI46dIdaugu3g
oaMg9h5LX8769etly5YthuxL/qP88xs3bpStW7fe8vN4bufOnT2ev9u/tYsX
L8ratWtlypQp0tzc/Eq8oZfJhg0bbv6/XnFrr9U3qf9pHwTQK55D7K7b/PMY
w4f8nYrd9V34Hd+L79lujTtwbd6BGeyO/GWL+QyXdmtrq8yYMeOVsn37dn0J
ruJp06YZeoXHGhsbZbpmoRjDuFmzZuViDQ0NMnPmzFxs8uTJPcbV1dXJnDlz
DN1VIcZx9fX1Mn/+/Fystra2R6ympkYWLFiQi02aNEkWLlyYi02cOFEWLVrU
47VLlizJxSZMmCBLly7tNcb3PH78eFm2bFlu3Lhx42T58uU9Xrty5cpc7Omn
n5ZVq1blYk899VS/YqNHj5bVq1fnYlVVVbJmzZoe4zAzxfeM2Lp163LjngSX
qRDDhVR8z7i5i+Nw0cXYt7/9bVVWm24phr938+bNufeMcZjhi6+tFMMlXYxt
27atx+fC2J349w687A65cuVKIfHjN+zYYVUxfXUWO3DggBw9ejQX279/f48Y
Pqk9e/bkYnv37pUTJ07cMLZ79245deqUobtC7PTp07lxuAoOHz6ci+3atUvO
nj2biyF/nTt3LhfD33X+/PlcTD8LuXDhQi6GK5zvhTF8eiBFxRhJEt8zvg39
VHPj8JkWY4sXL+7xe3FFgmDFGK7mSrGOjo5cDHfC1atXczHMYG1tbT3GXbt2
LfeeEbt+/XqPcZ2dnT1iXV1duRhmzkqvZX08fm/+uOkYJmzG7rrJ12Im6U+s
paWlEKtIl14ffhVvk5/3GC4b3BZALMVjQuZtwnHz5s1LlzXHNTU1Ga2K46ZO
nZq+eo5DEuLHzXFIVvmPu8+3jrvqyJEjuR+BP+XkyZO5X4WrlncVx2Hu4tvk
OHyavMp+PsR4NXIc8gGvKI5bsWJFX2+9Egn9wfBWkH71z+n1edwAhw4d6pUE
8xvs7fnnQqL78/yN/j5QCZ3cen1eWQy+yuft78PE29f7B53Rv7HX50Gd9O54
wb5/UDR9D70+D5p37Nixm3r/2QxmPcQuvfJxR3QHCXrx3Fm5kjXvSneGH1Xp
T0FRQx+nj+6W4Y88JE/XtMiFji5r7y2a3SzjJk6WCc9Wye7jF270k1htqB36
TZm3Lqsqnt6/SQYP/rZVpPeumSPDR9Whspne6Y1+Vv3wR2W+/6x1CyfLo6Om
2H9fObpDBg18VE525H9WpS+j0s9as6BWhtXMs/9uP7FbBg8dKCfa+bPuShce
5hbyUhv8sd5/5vqFDfLIyOz9XT66XQYOegSl09zPnDt3ruzbt8/Yy/Hjx3M/
M9MYmhyvy7iBD8q8tXZfy5n9G2WofoQo4O3Wj/Cxb9flNL7TyN6+2FOHt8vw
gQNk1fasSIvaz6r5U6S+YbJUj6uVXccu9u+LvdNqN9c7s9SdqienT8mV9mv9
utRu5q6BwFBq1Ovz+CCV/vX68yt9It/NWflGfx+Elv6MXp9Hftdk+rz9fc/1
/UNsKv39nvx+IKQgepW89Pr3gZOdOXPmpv4+vSMvnTko8+fOs6+3taGGHWQ5
eWSPTG+ZJguXrpT2LunHpH3lzH4Z9PX7ZNjIsUr8psqyDbvl6qUTMvLxx2Xr
3iMyf2q11E5fecOflE06V04fkdpnnpaDZ7JK/fZVM2TA8In23+d1Dh/46DC5
0Nn/ufb0/vUyaMBIOXmxQ+fFOhkyfrYNy+baAXI8zLX4uHE5Qc3gY1VcnBev
XTkry5YuE7TqFzVVy8hJ82X94gYZ9MxM/7G7ZNDQR3M/Ft8SfqTmVmPPSkNL
X/bnujP2mx6KSy/v4zl+iuG59Htu9mfd6nMvvYfn+B46O/PPdXbe8nPpPZSf
K7+H2/h7Xl7h92TiFXfFiW0r5LHHxlureN/GefLQN6tk5+bFMmBIZmY4s2et
DBwwQi53VmYLX7F/Xyv7xo6Vlne+U7YNGiTgkXuJBw82jMfe6mqLbR8yJBsD
/Iu/KNuHDs3wmDEZHjYs+1WvlD1VVRbaMXy4Ddnz9NPEJY7Z/dRTFtv52GM2
Zvfo0cRpDJ5DDGMxhnjPU0/5mLH2OyymvxNjiPc61reVYX2b2afbbW8dfxL+
FMP6pxl+5hkf0m0fgcX0I8EYfETA+559tjxm4MAsNm5cNmbAgDKWjKVve/RR
i+2fMMHGbH3kEcMHNM0Y/ta3sucnTuSXL1u++U2LHVQqhDFbHn44ew0wxzz0
kLS8611yUEUG3svmBx9M2MboDbH5G9/IYioE8V4i5phN998vrRo7hDKAjtn0
9a8bPjxlSoa/9jVp/aVfMoxH17VrsvGrX81iTU32XjZ+5SsJc8yGL3/ZYkda
WmzMhi99KcPNzdkY1fcb7rtPWt/9bjk6bZqNWf/FLyZsYzo0h/zbv2UxFatd
+n7Xf+ELGVbxl/B//a/2PB6d7e2y7l//1WLHZ8+297Luc58zfEwFF8es/Zd/
kWkYo3QSYwz/8i/L8TlzsjFtbbL2n/7JYieU0uD9rvnHf8yw5nCOWfMP/yDT
3vMeObFgAWsQmqMvn9wr1dW1VuMb+/gAGdO4RP+a8zKh6jFZtXmLTKkdJ62L
t1XK0Vmm2mJvqvnnf16qSiWZ/OM/Lh2nTknzf/pPCV+/eFF5eac0/ezPZrHX
v97GNL31rYYb/v2/z3B4vvPyZftDpv70T2dj/uN/lI7Tp2XqW96S4f/wH6Tz
yhXp1A9+ypveZLHGN7zBxkx585sz/JM/aR8g/vhGfT1iU/U5jMFzwHgtfgZ+
Fn6mjdHfgTHETT/zM/b+Etbn8Tdfv3RJJv/ET1is+ed+zsbgvdsY/dtwoVy7
cEHqX/e6bIx+JjZGPxPD+pnZmPPnpf7HfsxiLe94h3ScPCn1r31thv/zf7Yb
6+rZs1L3oz9qsdb/8l+UTZxIeJpOGhG3/sIv2JeO31X7wz9ssel6QbcfPy51
jvEaPPC62h/8QYvN0IusXZlIjWO8xsYg9prXWGzmf/tv0qZMhRivwaPtyBGp
+YEfkDEam/W+9+Xw7P/+3zP86lcbnvkrv2KvuXLggEx61assNufXf12uHDqU
8Kz/8T9szGUVohNf+UqLzf3N35QrBw/KxFe8Ivu5v/ZrNubSnj0y8a67LDbv
d35HLuvPnaAY72/Ob/yGjbm4c6dMePnLLTb/Ax+wnzvhzjsz/Lu/K5dU7I5/
2csM42fgcUFvifF33GGxBR/8oP0eYvwMPM5v2SLjFSO28EMfkotKOMc5XvB7
v5eN0XuGsUUf+Yhc3LEj4YV/8Ac25tz69eXYhz4UblA8zp44LIvmz5NV67fJ
tS43XVw4KUvmzZHVm3ajd17pBv2i/fv6POXwbFCrFyFmH1yACX/+8zaT4rFV
swFimLUwJmGd5QxrdjD8xS++DD9UkyCSAUKYLPFjEv7Sl0ocs1mTAWIbddK1
iV6TgeGvfCWNwXOIYSzGEGty8TFjbZK2mP4OjMHvBEaS4gRNjD8ZY/DWEUOi
szH6p9kYTYZMgvhIbIx+JBiTMHiHJ7R1OgEjhmQMvDZgjsGEjNgOTeDAa4B1
rtihSd6wTtCGQTw8Ea35+7+3GMgDxqz+u79LmGNW/+3fZrEnnsjG/M3fJMxk
teqv/9piu779bUs8q/7f/5NanZd2jRqVxqz87GctBjKDMSvvvVfqFCthyfBf
/VXC9hqdR1f8xV9kMSUoeC8Jg8B4slr+538udTqfg6Dg9yz/zGcyDALjiWj5
pz9tMRAUjFn2qU9lGARGH9d1Ll72p38qdTrf7h8/3ubnZX/yJxlWcgK89I//
OD1vr9F8sfSTn7QYyAfey5JPfELqdN4/MCkz8GG+XvLxj0u9xkA+8F6W/NEf
Zbi21sZc01y1+A//0GKHlHwgLyz+2MeyMfX12Rid0xfrfVyvOeRQQ0NfvYh/
s3+zP61Zp1zwLu8DWGzyG99oMVJaw3rpRUqL2HanuQk7xcVX4ThxUXBYxHCp
kdM6LnNa/dotNmJE4rTAO0eMKHNavTQRw3PGV3UscI7T6u+wmP4OG6OXu2Fy
Wn2fCfvsg78FscRp9dYy7JyWM5TFyGn1MwImpzU+qrexxXAJOF9N2G9n3P4N
GiOnxXTR8FM/lTgt+Crwfr9EOCUhRk4LLmqv8UsEt93mBx7Ixuglge8T3JSY
Y8BPEdNLJBuj/LThnnsMcwz4qcWcw4KfAh+eOjVNfQ1KUYDtNXprYqpDDPzU
pj6d6og5TWCqQ+xoa2ua6og5BrN9g9Kho9Onp6mu0TGnCfDRRqVgx5TDcqoz
rPwU72XtP/9zwvYavTUxtSEGfoox4J2NSpnIVzFmtU51UzRmfFXHYKozTL6q
ty+muilKvU4uXGjvd5VOdcDKX9MYTG1TlDaeXLSo0m3I8s8X7N+d9qta3vY2
YwpgWGBe+LNalImNCey1RZmaYZ1FyV6bldFZzNkqGN8YZ6KGw/Nkr2CKNkZn
CjBKMMkxzmbJXsFIEWvUy9QYrn50Y5zNJvaqr0cMzxl71efGOJtN7FV/5hiy
VbBXx8368ZC98vnEXnX2HuNMlOzVcGSv+pkg1hLYq+HIXvWzRKw1sNcxRfb6
7/6dxaaRvRKTvRIH9lr3Iz9iscReHU9TiYmHsdcf+iGLzVC5A6ZKPF2ll41x
RmvM873vzdirY7wGD2Ond98t1WCeZKuOZysTJZutLrJXZbTVkb06juwVjLY6
sNdJymari+xVGW11YK9kuJG9kuGSvSbs7BXslgwYD7BXMFzEFvz+79vvIcZr
8AB7naCsF7GFH/6wsVcw3DHOeG2M3keMLfroR429gvGOKbDXFPvQhwp3Ioqn
MFShaPqvFvtJuwL5QEIAXyEdtZgmBYs5Jd1GDDrqFBVJATGjpBgDnFHSbPIn
Zb3vPlJL5AOnpCk/GP7ylxP9RE5wSprRWFLWr361TFH1Oaekad52OlqmqE5b
jZJinnbKijxldJSUVXGiqKCt+icZTyBlBQYn8PyEj8Ri+pFEbBzB8wrmbYs5
/VwbMMdg7s5RUsfI+znKCo6AedvncqOWjz+e0U9SVsXMK0ZbQTdHjszGgLI6
Zl7BXG7088knLUcYZQVWysoxK3VuB71ETQ1jQFmNbirX6CZl1cnWuIc4Rf3L
v8zoZqSojpkzVjhF3ecUdYVT1H3OP4yi/tmfZbFx4zIaq5S13ikrHqCoy5W2
1gdKCspqWLkFKSuft9eAoiptRQx0E+8FlBXUkvUyo6hKW0k3jcYGyooHKOoS
UNSMftr7NYoK7PUyo6h6s1qssbGYG9l3OHfuXOlzFntDRlF17uXliD8VdMou
V1JW/YgspneW0VFip7B4kKKmSi0oquYrVmpBBR3nKavGWKmF6nBcpqx6qSDG
Um3AaQyeQyxRVsd7Ro9OlBW/w2JOWY2iBoz3aThQ1m2kqLiMIj11VWP00ymq
0dhIT13VdEeK6mXYLTo1JOy3NygqYvud1m7WKQb4gFNYqGJ7nmVYL5ciliir
0lN7TSjDgqJOBkX1MizoKTHHbFSKihguI4wBPZ0MehrKsKSoLMMaRQVlJYXV
aY6YrzHKihjKsKSsjjltkLKyDEvKesQNa0ZZNUPkKCvoKTDLsKCsoKgaS5QV
FJUYlFWnNVJau91BWUFRI2XVac3w7NlpjFFUxJSiUokbZZ07N00tqwNFNcqq
01oPyqrTmMUWLqxEWdn4+Bf7d29GWZ2OokgIetX69rdn+HWvSxS2uR8UtqlA
YZv6QWGnFijs1AoUdkqBwk55jhR26m2gsE39oLDNL3QKGwuw3+8U1guwicKG
AmyisF6ArUhhnZ7eGoWNNZ1/tH/fZHdHenivLtFYneQSBoUlrXWqu95p7DZi
p7B4WDVWYxucxrI6y7LqVqe5sazKaizLqgmHsirLsZjULdE4z930ta+lMZv0
uVhW3eh4a+C15LrksSzPIuHleK6ThFSedR7LBFDktVaORUw/k4hzvBblWMTA
WVmudZzGoBzrpdXIc3cqj02l2SKv9XLsLi+rkuemsirLs15GTeXZQlmVXBcE
BIlkdeC5HIOkYLzWeewq57kgHIbBcyOv1dnRyrFeRsV7WRl4LhMLuS4Ih3Hf
wHNtDHgtuK6XTY3XKs8FHyUBMV4LrosyqhIMlmcNT5pU5rk6M5OAGK8F1/Uy
qvFa8FzwWq+ZYaYm10VPl+VZ8NNUVgWvRTk246xZeTbw3DRGuS4I2qEpU/oq
vf6D/ftmKyE26aTOSxoPctst3h1gKTZyXfLYvrguy68s2SZu69yXvFYv6egm
MGrrFVyrvBaoLgr3Rm29gptwpLqovILq4soC1S3jHlSXroREdR0nqutXWl9U
d49fad2B2hapbnQlbCW1hWKKVJeuBJ+BjMo6HU7UltT3wQcz7AoqUl0r6oPG
kuqyghuoLq6+SHVjBZdUl44Do7qxggvaCmrLCq7PbMCHnfomWqvYXgMaG6gt
FTwrupxJ1pHaooKLGQuV2EIFF9TWYu44sMorKriB6pLawlGQqC2wU11WYpPj
IFJdpbY2QznVPVagujbGHQeY1ayCG6guZrFGVnAxq+ksRszZJlHdsuOgUnX2
7+3fQ1kl1n0DoFKgXPgIE/1VSgZq1kL6Gyq4RfrbTPob/Qekt/QfkP6SDofn
e9Bf+g9Ifwv+A9Jd+g8MF/wHpLv0HwAX/Qc2JvgPjMr2RX81SfWX/jb3g/62
9IP+tt6A/rb2h/5G/wHpr/sP+qS/wX/A1+CR8x8E+jumQH9vxX8wqeA/mNQP
/wFxjv46vU30l5j016ltjv46tU3+A8c5/4HT3UR/ncYW/QdGf4P/oEh/U6zs
PyiWcDdt2pQSK7JJvc6GmIUiv7WYzlbGgTWbAGM24xjUNi3mPBkZxnDBfYAY
ebFhneVTaVcTteNIbxFiaTfgnPsAMZZ2kWAc59wHiEX3AfCWhx7KuQ8sFtwH
wCz14m0SR/cB/qRtTpNBb4GNX0i5tGtjnCbjIyJm4sJHidh2p8n4qIk5Bl8J
kll0HxgO7gNiJhwkBsRIk5EYbAxpspd2bQzdB5oYDLP866VdxIwme2kXNaRU
/tXZDskCsVT+1USBJLnHafOqe+81bHU8TzigwDZGORYpsGEnL5hlQYGRNI0m
o7SrFNgwabKXdhEzmuwU2MY4eSEFRgzExCivUmDDdCMoBUYdaj9pM+itUmDE
jCY7BbYxpMlOgREzmqzvZalS4AZNtKzTYbZGuRexQyj/6nsBJQZO5V+MUQqM
BK3kpVJpF6vez58/X/pbi92VV6qYmE+cSJbejmx98nN/7vjxZDnW/2Y4WY5D
LI1/+XfguT7fw+36W2/wXHoP5eeev/eQrXbNv4dyLBt/8mT5Z/X3OZ3W8Fz2
e15BXHw+bd8J6EvNX+Yv6S7HslfobKaYP9HhLT2d7V16Nbe2Pcc9YXcF+hv7
9z0mkpuUV6LZR0WIbggbfHhgVrGYz+rEnPVtjM5OsYuyh9hVJB6YsRBLqlHl
WMSY9Qy7isQDMyViNAIl7DISD8y4FvMuCmZcYM0C2UdeZwkBIatZeM0KmH03
qkSLubLEr4wYb8uwT85UiYilJorm+ISlrBot5t4gfETAnJzZj7WYK8stEUtZ
NSK2z71BSNTNSkmpNJHUExb366hqRMyUJbziqhoNU1m6v9xiOmHTX06cxqhq
RMyUpXvO4eviBG6ecyUXiFmjBUpTCQR8/ZjQDSt5AKbSNA+6EggbA2UJD7oS
CMNe98AMDgKBmDVa4CcPmGNAIOC/PwxlqWNAIAx7owXJCwQCMTRWUPtKuLU1
+cvhvT/iXiHzoCuBQOwYvO0gC0oggOkVMn+5xuDHhxfIPOhKKOCjZ6MFiRUE
AjE0WswHpATCxrj6tDFKIOCb1zF9lHf+2v49lolGF4QQIBAUECDEFJHNhR4K
hE0PEemCcPLrXpeJSLcKFU3sORHpojGa2HuISO+HRBP7d11E0sSu75PPF0Vk
E03sxPq3RBO7iUb9TGwMsb4mmthNNOr3YSLSMT77aGKnSKRpPSciw/N40MSe
E5GOWwsmdhsTTOw9RCRFYx8iclLBxD6pYGKfRBP7e99rr4GInEgRqYIQIpIY
QhSPWzaxu0DMmdhD/4Mm9igiKRCLJvaciHRcNLFHEUkxSBF5ri8R+X/+Tzam
som90u17r/37NpsE4gNeZxTDKQ6Ba4ldQKKwbzFvohDHJgoSncVcMG4n1olW
fIw1YzRGxcjmzAZvotBztOErX6E4pOWIPZSEQw/Fei8aQ/5IHiPg++8v91n0
OcTYQyFWcVjus2huiV4g68XEHgr6MOyhgAIghl6M/kkUh9aLccz8aR4jxCAO
A95BbxB7L4hBDEKIBsyciq8EX5XZ1SFENY8AmzfIhak9zx6K+0Wt9+E9FAjT
uthD8dyCvoWJQ+/FEHMMxCl7JOzFGKZdHUJUc4vFlF+YqNS8wh4KhSl6IeQf
1mdB7wX9EIhDeowwhj0UF6LWQ4E3iL0YvMb5RurFeI+EvRjrmTjfMLH6mc8k
70/qxXjPBO/F+jDRG+S2eLOmK3foYi8m9FBSL4Y9FPZiQg/FhCh6L5ppUJW2
Pgs8RsDOJa57L2ZyNqav6u1f2b+/lPVZNKnCe8I7NfVZlJKRVePXACfGrB+t
xZTWkVUbRm2FvRiljIixnoKv1LCzbDxwKSC2zZk2LgX82bTXg64aDvZ6XFKI
bXemDRpsuNyvwZVpISfaINXAO0K/ZgcqYRpLrNqx/rhyLwaVMcTIqlEZC9iq
YMCRVaNSFq1JqIKFfg37LBbzfg3x3tCvwUdrMbLqiP2Ox1eCbzuxaO+zpN6M
91mSVYl9lmBNsj5L7NdgDPos3p9JlqLYr3FLkdmXwJi95Ga9GPZr3ELE/kyy
ENGqBIw+i/dqOEuYhQgxMGZYitBnAfZ+TbIUsV/j5bVcv8b7LMmaxD5LtCbp
nbgWvRbvz9ApaVgZchctRcFdn/osbk1KfRbHnEkwayFmjNktRTlrkvdZGt2K
ZM5JnbVy/Rodg1nLHfeVirvY3BDF3b+02Gn7KBKN/pEfkavZPl7JelSn1A60
axrHKO6tX9Paj35Nyy30a5q/k/2a/tiVSLVpV3Lcp13pJvo1Lyi70nPt17wY
7Eq30K+ZUKFfM+EG/Zpz0a7kVPvm7EooAmNL0wsXLpT+3GLvMHs0H6BkxrJD
WwY1fMTWexsGuJaYzFvpX2TaCTvLtjHOtGlXgjWHLDsxb02QiNGuZBg02vsy
tEVpskjM211RyCfJFZWx7DLzhuE/Y9plF5RizV3lFpA+Z8zb2zCbHEfmndi4
M+1NZOLuuE9MnAU6rgAAq8aiULqiHDPHmgsKMXcvEbMNkxz/iDmrTjgwb3wl
xqydaZOJm3sJ2Jl4jnk7GwfFYYvIXkPHPSo/YONg2mjDeJuImGPIxsm81wQm
zny5usC8UdGpD8x7teYwOIpon2ZLqN5ZdJe3hOqdiTNfIq/V070E5q05rd6Z
OPMlVgDUR+atTDy6lYx5Oxs3pu2LVHMYTFwTQHIvgXnDBeUO+76Y92SMUb7B
RarmVIrM+5OfzFi18g26oJxlpzFg4+BDOqav2vVn7N9ft49oquYKXMrGsvXj
wI9EkTM5nuBw0hhonbFsZ+KbIxN35r3Za+B7nWVbDZxM3Fk22Dnr24admeNh
zDuwczJx1sDJxKOTisw71cCJQw2c1Js1cFzuTs1LLHCTZlu30YvXiZrb/ZMV
sJ2e56m3U3G8r4T9NVtJvd06ZQ1oYnGajY4zVw4EvNdXEtgYdKAR88WvmyOW
YHF6wxtSgXsTsVNzszwR+5Rg1FtjLHCbvQk4UHFSbyx25aIlYhvjliej517g
xqxt1ikWuFF4LlDx9aTeTsUT7fZVA2mxqVNvFg+KVHxtoN60PFWk4ho74gVu
FBCIOZVg2uJiV1LxBlJzLx40BCsVF5siRioO2o1O7bGwWYtRb8R8sxazPIGK
c7MW0GxQcVqnSMV9ZUEao1MUqPjxefP6qJD9mf173j5RMDgycTCw6e98Z4Z/
9EdfYubELzHzFycz/w45qW47Mw9F8P4tJPiU/ftOu7L5QJ4CdWL9O4edhSPv
IcZFBKB5xsJ9qxY8WDcnU99ZiamTmTtTZx09x9SdzZOZJ+buBXDW0CNTR9lc
Q6x/G1PPcJ6pI+YUhTjH1PU5xLZ6/XuT420DBuSZOmLOzI2pg2FHph7q35Gp
7/D6d2Lqof7NurmtIYhM3bdriXXznQWmzu1auIgtx8zB3PWrs7WxZO6OmYKN
vYN1g6mzjh7r36yjI4a1sb6mgZjplOzd1hWwjq4THxc2GlNH3dyZuDFzTYPG
up95pszcHTO9rnL2bmtjff1Cfax/ex2d9W5j6mDuwL43h9XRnamjEhiZOiuD
iamDZTszT7iurszcHeOR1i94vbvLzVugWKQjYOpg75O93s21uoadjhhTB3tX
KnTEmbox94yVl8c4U1f60Ve360/t30v2MU5929uSiE1MXS9jY+6olwO7gMXD
1tyClevlz3UI+PPAEhNzB1NHzOvsxFvcw4iH1ccR8zp7ws7k8UjM3Nl8ws7k
WS+PbhYWyFlnTzjU2Xc6Uyebh3BNTN6u+3JB3ERrYOm8NSJTZ6F9G5m6M3lj
6cT+GmPqGtvja4KtQI4xReaOMV5otwI5MJl7V7YNAGKJucM7SiyBuWtsnxfa
E1Mnk0fBnFhCgRxMHSKWCxHI5H1MYupuTdnoLD1aU4yp+5pfTllxDbAxd52y
LObWFGPuKLy7NYXMPVpTElPHIggWyGOhHawcTB0LI7zQbizdMceQqdOaYiw9
rgH2xQlWaCdzd6ZOawqmK2JOI5iijLm7NQXTU0MstPs2Mcbc3ZpiBfNYaAcr
D0zdmPtf/VWeuevUslKnqClZYb2vltif2L+X7WuAWR79cHgYQNumvetdOSo/
jVS+UpG9P34WLoroy8/CRREvRj9LeL5XPwupfPSzkLrTz1KJyhf9LE7lK/pZ
wqaMOSp/E36W4qaMNuY5+ln6vSlj8LNMKvhZbuemjEUqP+EGVH78bVoU8Vz8
LF5476Vtpne+J/h3WbKCWdvWP+hVRGyFdtB5TW6GQed9V0bwRcRS4Z040Hnw
Toux8E5cKLwjlgrvxJHOa8JFLBXeiVl416RrOOx1gySLWKq8l3HO82KxUHkH
3hw8L6i8IxYr78C5yjv2SEOMnJ/YK/G2X5rjLGv4nmkao+fFNqQALlTeLeac
nzjneUEyRMw9LwmT8zNBaoyc38paineFSrw9zwURXnm3Mb4fTsLB82IJU2cw
el7A54F3Bc+LJUyN7XHOb8kSrwmeF+soY4yvJSbey0o8Osw6c0bPi5W1NEbP
C3HO84IEijH0vCCBAgfPiyVMjZHzoxKP1X+J8+tsbjGdhY3zg88joQLDA6Pv
Bfyez+MBro5qPGLG+eGLAdYslTg/+LxyfsRsPxx9L+D8hrkfjmY7cHzEjPNj
8YXyexvjnB9jwPGnaNY4XHltMY5ZuXjxYukTHuts4/GzfZvrb8qM//2wKOH5
eg83+13cysKIfjx3y+8hrHew506duvnnslUXabf9SiszQiy+Ji29APeJSy+A
T5+OKzNIZe3pDOdWZuROO6zY3fq4/fvrmWZWUmauTE+Ze11Hswq1t6CrockM
owTlKRRTImKbPUUVsY3RqdRirq0TDl0yTNGImbZ2TUwcNbHF3MOWMFaKuImM
OGpkxCw9ukZ2nFIoUhNi3EY24YEDc+kaMWsgu0YG9uMKLM3id1gMZSnXyMC7
HON9EfP7x9+CmFk3XSPbGNfa3d7NsjFIY97tMuwNZGpkxKyBHDH1OGL6nSCG
zhmpgmGkMbfLEttrvLuFmJWunBbYGJrcYDTTawidUqStbrfLEnMM6BJiSGO2
FEOpgmFPY9yrqgkxdNKcFgAfiFgFGdOYLc1QaoCYpTEv8xn2JrOZyJQaIGZN
ZqcONoZ6HGOUGmClEtIWaUEzsOtxpD9QA8TQOWPT3rBqbaMJqqub3/GO1FlD
HgM1QMyWhWCM6mrD3llD+gY1QAyds06nDliKw21lkYqhrRGDHmfT3sZ4Jw1j
QBWwjEb1d9jp/Hr7BVk4e4Y0tzTLnIUrpb0zuzOO7t8uTVOaZM6CRXL5enel
nc6zo32u2oXK5hiaH0wAWCkwpi8V7s9HFf7SqpIXwaqSgip/vlaV3FYVXmlV
iSrqnAr/1V+1MTetwt///v6vKimq8O/wqhJX4WHCOLJjqYwe0yDnz5+T2pED
5dkZa+x8sceGPy57jp6Wpa3jZHzTkkoTRnZu12/axc0HKsRohphYd6aBzBX7
ccQU68h0qRfH/pz37Da4WE8YYp39Oe/hUayb+w7Y16LYGM3uiFGsI6Mb1sxG
1gBxihiZD3p6daH5BsFLzNdAGNdlzTbL0hDOjqPbzkIgPl54B97y4IPl/cT0
uTr23rwgXpf13hLRwK+ooysOYzSRJ+yJvC703qxIrn8K/iT23rAnGXE2pNs+
Aou5DsdHBJx6b97Ds5j33vBRE9sYX2dp/TeQGtf8sfdm/Ts8T5LjayqtrwaX
XOjhpYYCxqBn57221MMLvbdu1/yp98YeXlyPQrcdYqrN6bZjr82w6nv0zEhg
6L5LvTf28ELvLfXw2HtjDw+YLjm67dwFl9x2wN5QSD08d8GlHh4wCAz7dZp7
kksO/Tn07LzXltx26M+x9wa3ner55JLzHp713uiSg+ZHzw69NyUsXOfivbhs
DDdc+KmfQsMgzRt36zfSKd1+0+9c1SoPDa2X7Wtny4AR2V924cBmGfjoUDl/
vfJpgh+1fz9o3wqqBbxp2c6LUsWMd/qJsMK2lxjSxdt5hnED++RgW+ZqzG5i
LncBjlLF23ebvC1IHNuCe7x9x7Yg23mbg1Sh0Y5tQMN6JVCaWDsvYJvg0M7T
GNuARWyfq96JiLENiMnMcTY51GXdOw3xYDXr7ine5cWz1NFDzLuC1s0Ddn8f
3lbC/hp289gVZDePDXQqlbTcJnTzcipEP8rUBfRuXrEraB09dAGhTDAxwYfn
XUHD6O4BU4Wwm4cuYVAhxJxArJuHTqHetKmb55hjrJuHTqF3BTF5xa4gtxpL
XUHfasyW2sDf5z48Yk4gmKwsBj+fFywne5eQY9b4DjPWFXQf3uRCV5A7ypif
z7cai11BLoGhf49LYAxDhdCHF/x97OYhRj+f4ejnow8PMfj56MOLfj5083Ty
Sl1BFB918iLmRIQJzLdHK88feJw5dVBWb9wkk6tHyLjW5bJ+SYMMmZC1Cns7
QRQ7KC1YsMAOBkbX4MP2XFemWlyRQLWAVYI9UrFQxUSVAsbK14Dd3owtsLrU
0xZYXcpvsEYcbYHVpfwGa8TRFlhdytsCq0v5Ddb4fLQFVpfytsDqCiqmuqBi
qosqRv8bsWgLrC71tAVaLNgCq0v5DdaqSz1tgdWlvC3QxhRsgdWl/AZrfE20
BSIWN1gz/ELdYI22wKhiboct0C2AxQ3WcrZAtwB+z9oCt2+/kS0wsBG9BeX8
2eMydfxouX/A09LeqZxyQa0MrM6mqrbj2cHB8ex3sBGc+35Wrxr879KlSyX7
PaX35yQNHkhXSdagqKlMwXDoQe6hzKGs0TQYLYZJ9vjpb3jsjrImyhyXNHjQ
qkiGlLBLGjx2BlnDwqdhZUhJ5rgUIiMy2QNZA0bU3V2WPb4EAg9KH2NE3d1l
2fONb5SiV9FiXswlLm/2FnQO+otOHeoyT2FZ5+jvoI6xMa57djje5LqHK32M
TkD7QI+g3xh1D1f6dGerZW0M+otB97C/SPoQPYXUPclTGLRP0jWue6xQG3UP
KZJTBa6pjzpnT9Q58Cr2V+egMBt1Dlf/eBEzp2uUOnBlT9I90DC+0qdPneNL
HpLOgWaJOscxx5hXkZ5C9ypOds8hHuxtTnYPIdf8c2UP+5iTg8eQ3kV6DOlV
NA3DNfbQQqp9LKb0ptPX/NNzaGPoVcw0TNbbhO4B9tXHNgabzSE2bVqYWdpP
7pJnqsaZ1mkYOUBmrN4lR7YtkwGDM6J5atdqGTRwpLR15XUOWzC21LD0AfvG
0WnGN8eDe27LrFKheNLrrBKcDrc0qxDHWSUWT+Kswlmm0qxSLJ6UZ5Uek0qx
eFJpUikWTypNKiye9DapxOIJJxUUT3qbVDiJeIeo4qQSJpFeJxVOIr0VT4qT
CiaMF+Cksq8/k8rNFk96mVQOFCcVLil0w0TCYVI5GCYVm0TipOITSI/iSZhU
KhZPOKmweFKcVNwAXSye/IBcu3xCnh31tKxevUYe/+bXZMaaXSLXLkn92Cdk
4YqVMmncMzJn9d5KRddsPhGZ8e53Z9rmNa8x7olH0j/o0Lykf17SPy9W/fP9
sCyqd/1Tsp90R1gZVXp19jmcOylrVq6QzTv2S6cfcX2t7bysW7VCtu0+7FaW
/Hxip7uUPmoTGh+YuK0GCxXCGqxO3qkuq/f7/r7qtG4psaUYrMtiaUZfdVpX
IXtvV53WF0zn6rS+9OKm6rRYMH2zddoyTnVar8saP7hRndbrsr3WacM67FSn
9XXXfdZpfd31d7VOi5UYoU4b67Y2huulfbUGeVKPOq3Xbg/4umuuwoh12vWF
Ou36Qp12fbFO60dExDrtugp1Wu4EbuuufeuiG9Vp17BOS3cIVmbcoE7LVRjk
D1wvHddd91WnPdaPOi22PLpRnbbvTUN/z6cNEzQ6Gn85PjlcFWCP+HS6KXAo
aHwre7ymR3fYBUyv3WG9SXt0h/WOSKUUiBfFtcCxO4y9Vwrd4doK3eHaQne4
ttgdxgpPxEJ3OC7NTKs7Y3fYV3RyaWbAub1YKHC6uiIuu731powrM4ljd5gr
OlM3GHuxFLrDcQ8V8Ru1NnSHbYVn7A53+c6Ihe5wbYXucG2hO0zMCYBVEoqg
JGgoePrTHeZqTlrgYnfYLXAUM2lfN+7FErvDWM15O7rDQdB0cS+WuDKTe7G4
oEl7sUSBA/Fyo+6wb3TwQu8OT84LnErLubJZQ5IkgcEHFBFU0SSKUsWXZMxL
MuYlGfMikzHl3R1KOj/0b4MH9HmfUqqwatWq0vt94sAFGB+YR01/eE0z4aBZ
9rtmYXpPGPXMuL0qYqhpBv8Jin64GLnpU7TB27F2WE7uNU3b9AlaI2wWZZs6
uUYxzUIcbPDc1Im2d2oWLi/HIy0X53JyYl9Ovsu9J3EbV27ylJaTFzAeXD7e
Yzk5sCXQPpaTB0s7l4+n5eS+fJyYS8ejaEnLx7lZFEUM83sUMi5auHQ85feu
rrKQ8X1bk4gJpyHYnqthyXlaPs7l5b7p096wnDwtH+dycogWvCbs27qRogUW
9yBa4mkIGwqiZQOXjrNz4icQpM2iuDqO+7iG/Va5UqvP5eTcLCouJ6do4XJy
bhYF0RKWj3dzk6ewWZSJFggZihRfDWeYy8l906eKogX7tnI5uWOOsdVwEC2+
nHxlpeXk2fJxVEyTboGOiUftQbdAy/SqW9DivXz5cul/WewDSbfgD+GhPtaI
0cyMD8S0TMBs1rDxYkd1UcsAQ9sUtYw3dHpoG9cy8TjbpGW8oWNahrvORC0T
dp7hzjSxTbwz7DxjOsV3q4G65tJVahcWaLjPJLVN2pnma1+jBknSxesx27kz
TViVaju4s0vc1RVxTy3jq1ADLmsZahdfhZq0C1elcmeaqGV8d5odvh9k2pkm
7AfJHd25KpU70+xkQ6ervDsN94NMO9OwoeNbPdhONNx5htrFtUzamcbnutxO
NN4l7msnmqRluBMN94MMO9FY8YX7SsadaLije2jo4BLn/o88aizuB2mNGN+d
hlom7kzDOWBlQcvEnWnS/Qztwp3YvRHTYycaahffeSbtRANt09tONL6PpC3V
gU7BzjRxP0jfV5L7P/JoMTZ4bAz2lQzapdedaLCPZKZ3+lpVl80kYrt9YVsK
HG8BzodHUd/MoL6p1KZxm9p06pvvxmIbXzjz0mKblxbbPK9HuDwfi21u3xEu
cIZEidPP9TaV6qnZbPJJm1yxJhGJiJwDEyzWLjKnJxybLjpRI5aaLhGHxgxi
rFnynAkmdSSMhENjJp1FgTGKpwLHposmKIt504U4t2eWknqLuagBjzIc98zC
+l+NJZGjPAnrRZPIwdpf4LhnFtb/aiyKnIjxsPW/iFHkKG8CVhLDxgz4DEKp
MeO4qHEs5o2YIralwMBR42A5sP5JSeNgOTCxuMbBcmDEqHGwHFhxbMzY8l/E
vDGDjzphKTdv8FWlpb36lRlG3dNrwsT2Gt/sFjHjBs6tDIfGDC4hi3ljBtyK
mGNwKSJGAz0uVVzGyUHmJ7MhxsYMdBCW0rIxg0VexPYanNSm3Mpi3FZLuZVh
6iBfDoyltDTQg2sZpg7y5cAWg9nDuZZh10E8mQ3La21pL5cDA3ujxpb++vP2
Giz1xfJfX7bLXUOwHDdtq+XLgVs0ZjrI68aGvXlz3ZcD4wQ6a9543ZjYxvhy
YIvNmtXHRPJb9u9dlqLj47ZswPBC3Ijipffw3N/DC2FDjpvcrCN3WmrPDTZu
554cXXb+6e3Zk4OdkN+0fz9okz6KIhBgmLyQO4t1CSQL7MOHIgwmwYjJEZB0
LOa1i4SD0RQFPMR4zHjC3pdF8kuYW2qpOEaMtQuI58nE3FJLRbbFeIrc0KGG
4ylyEO8W4ylyKt6JWZdA0kWMPMewfjbpFLmBA4nj7rcIkfYEXDaIas5FjLQH
+dZx+RQ5mBY0tsUPoLV6oGLN3+VT5FAPRMx33bJ6oGLusGUGBsdGPVgP1D+J
u+haLVDxNq+vJhPDm9+cerURpzEwNWiM9Y11AdsYbgSvsZ1e37BN4IF5qhxq
gY7xYB5EbJcfQ267ZWEMz7vgblkY4+ddWH0QOJ40h/qgxtJ5F8B6Gaf6hhtC
EbP6hhtCUbDbyx22/DymVMvwPGhjcAw5aoi+KTw5DPun2JnLdt3y/imxjUHN
AQVDjVl9ww2hNobHjtP4oDGrb2DMZz6TYRxD7rtl2a5cPIYcO2p9+tMWs2PI
vX8KnE6aU0GJOoSNUT5C13mj78KFh+2W9cd/bDE7aQ47an3ykxn2+oaN+cQn
bPcuHVPp3Cm2SrKZRWTme96T1SC8LjHrV34lw3ff3WudYmY/6hQzKtQpUh3i
Vrbm9D5spTpFcZf9lkq77H8fbc3ZVKFO0VzcmrPCLvt9bs3JXfWLu+zHOkWx
D9uPrTnrbmJrztSH7aNOMfOlrTl71ikq92FLpR++9X1BKp82u3LlSuuf2N9d
+oRdXdTXeECgwQDC/J4w6hjOJTAporDK/J5wqGNgckWMCT3hYBZlA9d24kCt
g/h2n9rD8zPjqT08pac/p/YUzs/cWjg/s+KpPYXzM7dlJi+xAzR5ag8P0Oxx
as8rez21Z/eoUekAzdt6ak84QHMLD9AsntrTxwGa6dSecIDmZh6geaNTe+IB
mt/pU3tYlKh0ak/hAM14io+95jtxao8foNnnqT3hAM2IVztZ63FqTzxA8xZP
7VnV26k98QDN8qk9fTVYftX+/XAmiSCR9NfxkGv09tEHw9s22UQc27nemqVs
Slg/jtTO9das2VVdWhFHaYV+H2UTMe2s1rp9fS9HAPLw7b6OAOzH4dv0t2wP
B430egQgj/wLOxE7LuV8p/EMQD99u7gTccUzAAs7Ed/wDECe+cczAAunb2/k
6dvxDMBw5p+N4enbfZ0ByNO3K50ByJ2IK5y+fUtnABZO305nAMadiMOZfy+4
MwDpO73RGYDhzL/c6dvxDMC+Tt8G9lNEbvkMwHD6dq9nAPL07eIZgDx9u/cz
AFk4zaYbMY5omkg5I3ghHuCe1UE7gWdWUzcVtZRy2BeCp5X4e+bEMmqnl84S
zvBLJ5Z9t88SLpVeW0lO3cbjhOOE8z77909zUgpzG2ghchllE6UUbV4JQ0Zx
jM6tJpOcAyQMDkD5pTQXMa7RTzh4Wm3NH2IupYh5ZJJJL+DQ/jXvrMa2ePsX
2CRRaP/aUUsupXLSyrd1tjF+SCrbv3uIg6d1jx+auo3SytcAsuZK72w8Mole
2e2UVsTZBgGZtPKjlpK0cqml/CuN2aHPRU/rdscqo5K0SnLLpRS9s9wcLUkt
5wDJO0spRe8sZZRksinJLfe4bnWplXq5UW65tEpSi55W7yNHKWVSCxIIOd+9
s8A5aQWvLCQRpBS9svHIJB69xEV37seLRyZZH9nllnlaneOZjHJekDZrQ8yl
1AZKK/R2gSmtuOjOF/zFI5PolT3EI5PolYVMgseVXtl4ZBK9su5hJadrDJ5W
bhndGKWVcrpGelxdajXGI5N8Y7a0OZp7Zc28So8rpJXXwu3IJPfKGqbBFdIK
cksT6Yl588pe2ewIpTQGHA7S6sT8+X1xHZu5Sx/LXLD6MYAK4tficgLVxK8v
umJTh4pY/4zUocJqPc2Z+FNNahHHDhVcrxpjh2p3wGmMS6kktYgptfy09VyH
CtuRQH5RasEVq/k816GCtEKMUgsySjGll43xk9NThwrSy3E89AUxVrC2u7SK
HSrHeVtsdgJ7NsaPVo8tKtzOfgR7JrXKuNyi8qPUMRUkW2yGcy0qk1LekkrS
ii0qYk6PtMFqjPbaiDltmA0WMT/0hTh36AukFWK+nHBdwJwmTFppLLWkKK1c
evFo9dyhL5RWfugLKh5FqWXSCnLMD30xWYUx4dAXs8VqjIe+2IGN8aBHnGam
13g66NFtsMlu6/uTEHNKwG2IGA99wb1kY8KhLyv0tqxzaUVbbF086NGllo3B
fimQTZBajnl7L+9NavmhL2aLdYwH9ydB7BDstX5AY85e67bY+ii1VFZRntkY
t8XWR6n18Y9nmPZaSq1sTF/N72z6EZNR4Emgi1cOHzb7n8kqpZi3XXopDf6+
kV6Kbyi9FPcqvbz1BXxT0outrpuRXi61XpJeL1Lp5bGC9CqVXt+/FYUftK1J
8tLrox+9BemFHvlo5SUrV64svcdiH89uPs/tmPvAhZj/QR+B41JC0NIGSi/I
LOLQwcK8CgrL8mvCyP/OR6zzpTFuj2ZSjJhjvPOVpBexd7CSNAtSzLZjgRTz
DhY7YVGKsRPGDhZPxd3qJ+rgYduxBOnFpY7ReYsciRilF+SLYecWyLOGzWVr
Cgo0ESGjFq7EDIcGFmiixUAt3PQLrJStrMRgMNLYLm9gbXesP6+sxGAwQsyV
lxmQoKCoxGAuYkMLD1dntgrQG1j40yZXUGKTqbyKmGPgMAoNrC0RS16JJeVF
JYYGVlBi8fBaW8UIVQXlxVWMxBIaYWhYuRIzZRYaWKkRFhpYpszC6kI2wmzF
IZUXzvljA4vKTG8PNrC6/TCf2MAyZQYclRjUmTesUiPMlZmNiUqstTWvxNxV
a2OgxFxp8RBcwzi8NioxNrCgxJQC2vYnVGJQZlBibGBBibk6swaWb5udO7yW
h+BWUGLANsYPwcWZfScWLKhEhVatWiVXrlwp2eRf+oSxUHwFYIZRieFHd0dl
Fptg2FfF1Rq9g1Rq0TuIhgcbZbgdal2pxQYXYtzDJeI0RpUXYmyU7ST2dZBs
cBkO3sFaNsbcO2gqLDTKqMS4sWXCQZlRdbExtj0otegdNOXlRbKkxOgldBWm
uBTNg7FRxgZXbJTh1rWYN8qIY6OMDS6aBzc61hm1rMxceUXzoDfKknmQSi0p
MzS4oLqCeTA1yiQ0uDCG5sGAOQafbU6ZEUfzoH4niCXzoN6CtvCRSk2/V2K7
BX0HpNqozPQWJObtjmvIYjQP6i1IzDG4FhHDPcCjNWtjowzKzJVYUmZBiXV7
g8twMA9GJcYGV503zngrRyXGjVXqCo0yNL1yygwqzBtnNoYLFLmTJZtersRo
DIwLIbmxCmKYdjGGKowFMVNmVGJ+HKepMGA2ypRCRyVmykxVWNzoBebBJX/4
h1wM2VfPPZuOMmWGRY0wQFGZgVZNpFJTdpmUG5WaGw4nFQyHk/owHHJhZM1N
LoycdqOFkc/1LPCXFkam55/XhZEv0LPAb+vCyOdqOHQVljMcciGkK7WbWBhZ
Kv3kDddGVpXyayOB2SQ774ZDxKLh0F5TMBxWVVRqsVKdTUh/bnNZq97kprT0
QkrYN3HB/AiMvErOAnrbohMBK68Ja37uCo0zxFh5TRiml9A4Q4xKK4dD4wyL
s8w72NWVMJUYcoVheAlD4wyxrVRiipuBnUfYGM1DFnMlBrVm2HkDHsiBiJE7
IL8ZDk0w5E3E2AQzrDcXpRi4Y8R4IP9azKVYwFGtIWRUoru7jIcPL6s1fQ6x
Xd4TI86pNf0VFqNaU/oCTLsh3lbCeHhvDX8S1RpxVGv4SGyMq7UcFkm0DzGq
tRzmGP1K8FWxbwYaCEz1hq/Vno9qTb96xEydua3RXhPUGi4hXEqm1rqyfWqI
bYxegrgUEWPfDJeq4WBJxCVtMe+b4ZJvVcy+GW4L3B6xb4ZbyWLeNwNVNhz2
hoHVEbHD3jcD5TYcLImgnK06f9KSCNVnmAcNac5BTw4x9s2g+hL2DThb3/3u
nCURFBQxWhJBQQ1T0WmuQzPAYrAk+l42hoMlERS0VeduWhKhAg1T0Wk+BAWd
lo3pq2/2Lo9dPXeOd1+fC+y+1xYFatpMPwsp9HY9x/cQnkvv4Xb+nhfSe+go
PPe9eD3072f5isq4gDPDvT3dneHcGs3s6bRGE3dX7iUZvrOvp/NrNDsKSzjT
03faTOYrPCvd7TuVQAG90/79VFbJfOMbzeiICQUPK2WiXqN6EZPTnkL9hs9D
c3Z6vcZKmYh5tz1h1a6s6ZinX3+X1Xl0okw4dORtY2mNWU0HtZiAyX2QZC3m
HXlof2Caofm81Xyc55h5RWNrvUNvBhcVGqz54GEGFsS8Q58wOvIc4wYW1n22
usGFHXo8aGDh/r4Je92HZhZNLqkU434WeqG3+NIBxbn9pSzmZZ+A0xg8F5d+
EJdPZB1rvyMt/fBqZ8TIeXEZCBvg9CsZ1j8t+Zf8IsRHYjFvyBMbdRNJ1c76
rHDeA6cx+pXUZ5XzVHrBV2cHmngDHJinwbLMgpgdaMJ9ofAab9DT9m9jUPbR
MasCtjFeikEMZZ50aIdextwrg6UXXNrggyy9AKMcWcR4sAGOGG4leo2JbQwP
7dAYKG86tANjnPPZGOxpe889WdlHx9i+UMDO+dKhHRoDn+v0prhh5XPJa+zP
22voNdYY+BzGmNdYNTUb9FZm+fjHrXJtZR8vxRj2sg80MkoxWFphZR/lHos/
9rEMO5+DRl780Y9msfr6Sms92cfKZihJ5Rk09i7v328/Bk1Ei6nMtJKNSshi
s91KL4Vmu8VCsz2Va17yOVdutt+sz7k/JZxis534JZ/z7Wu2s4QTmu1WagnN
dvsZsdnOEk44grFYwplUKOFM6kcJ5zns3Vsqvemml43eqNl+Pq4Z7V+zvRKP
Wr16tbS1tZXs+y19JrtDnSNAHGJiRCIlZ4HITB13vZMT9mQO0Qm8MXTb2bVn
DyfhsO8VXEzWXXfjc8Kh284uPQ8jMwM1MTvy3qXnPlfs4rPGYx17x6kjjy69
xljjoYEaONV4vGufajxuqLYaj9dirEuvsVTjQRcfONR4rEuPpO81HnbxU43H
O/ax3c6u/Q6v8bBrH9vtbNsbUQht+50jRqQxIBWx3b7Dsf68VOSxfUKC0Zlt
fGK27JnMU9te/yYWcPC3JexjrE2PmBdwiFMBh216GpuLWLzIgzZ9aMGD7Fnr
3I3P1rJXnAo4XtSx1jkKNmzbe/vdxrBt7+11njaXa7eHtr0VbNi2R3vdHXg0
ULPlTgM12+tcJBfb7dx82GJot4e2fTI+s20fjM/Wto/GZxqo2W73fmE0OttG
XKoBuHlvatu78ZknpkTjM9eqsr3OzYfN1MzijLftfb1oIrJTYrsd61eVqHq7
PRmoiTkGRNViCxf21QN7h/3752mtAfgk/jzcgmgfgqfix+FhZmhNoqltT6z8
1mShY5N8LvFolrbWvrfkDUPyucSzFrwma7b2YZY2HFr71oLXGCXeroDTlj9u
hmZrP2GXeDu9JW/Yp0u24CnxihgPtuDXeiufLfpoumYLnq19tuhja3+rt+XZ
2reWvBIOmrCsJZ/huJ0PQswK1pHPcFkG6p2KGLNCwGmMdeA1RkkXcFkGwguN
mFfkiVmhR3nUsM/csQNPzzXxVkq80IHnkS4Rc0ZgR54Sb23AHGNdee/k0xud
Ov3syAcPNo0x1umH5xoyEB15x7zbrSOvMXb2rSOPMezsu1caMTuj0r3Suc6+
G2PqQmffOvLwYPsWQNaRd0+2vYYdeY2ZxGNHHmMo8diRh+faJR4qM7nOPmSg
SkMbA8+1d+QNU9Kha6/SkJ19bhlsGBLPZWFd8GCzI48YZnx6petiZx8deXTp
0dmvr8+kIjr03unHgx351NnX9wsZGD3X4OKQgT4mnBuZff0dsmTBDBk3boJs
P5QVwvZuWyuTJtZKU+s0Od/RWencyGxuk7IYRH9fSSqIZ7WLxSggq6Ng1NcY
hmB8Lm5tJeE5AekLbvt0a/trcgIy9PhNQPprvmMC8nWvSwKypTcBqTcEBWR0
Y5tgpIDUi6c3t3YTBaR+6RB1TRXc2lMpGJWqmMh8jm7tJgpIx7fi1m7uh4Bs
eT4F5DutVJIXkHpN5QTku9+djYkCUq/NF41bO8Ol0s/I/P/9vzMN6ZqyomH7
938/M2wH6wAeJiBdVC788IczARn2VLYxcGt77CYFZCYWXi2HNy+Vhx94RC6r
tmk/fUBGDHtcjpy5KKtn18qY2nk4iTt30jZnuLfZv/fK1TNnEhPBA97RRhec
uMuPEmOlLQWokmTESC3gSW0MGxAedhxX1dImTpNBwmHDIq7qpd37kNvG40bL
SBWImakAAlRTRcIcoykHMa60hae3IQpQTUGGg8kA4qUhClC3jUe79/6CAE04
2L33UXC6AN1XSYC6SKXgTILUV9WaIM1w0p/QpChCu4HA9GiG8/oTMWza4T4E
4Jz+xL6UGtvthoEdjnvoT8TcMGD6E7qRBgLoT2Bf3RX1576i/vTVXck2Tr0Z
9aczDdOb2JgyaEvqz2Tv7s4W9TaEhbZgtvjqaPfG12qY+xWB/eql0MBFtG4j
T1jK+rOBdu/u7hzmGFyKDVF/6qVqWtMNA7SNW4x6U2+DRtq9XY/i9qA5gAt6
zbpN/amMmRgP0596C9oiWti9nTETcwwYMu3ctI330J/QpG7n5v5JCftKwmj3
zunPuXMr6s+uoD9PzJ+fDr8xHRn1pzJkxE4uXJhs46410xjTn5pcTy5alNjc
3XJ012pZsXKVzGycJF/+8tdl6cp1snxOowx8LOOKFw9ukYEDBsvZa/kJj13K
n7d/P5vkKjgs0rvdkL4tEtom+IToIgd/ThIWrnFIVnYyiV3SEsdOJl3l7GQm
HDuZOMEGkpWdzCBpk4SFaxySlZ3MgJOEpURl57Igabm2N3Yyd/jaXXYubS2v
0pDYyTTJiph3LhMO7nRzjWuMstYkLbBLWjySZPWTSRP2k3uChM27yqFZvdJZ
UcPqnWwxTz7EOQ0L17jGNnvFcYNjTQg9NaxXHDdQsyIBuKWHOKdhNWbudK8I
2RgkBJ958JnYGGzj5HckMWcMc5FrLGlYYq4t9lYmYql1Sc1KTet6lW51bjdb
y3XE3sok5pikWX1r29WuV9M2Tt7KNJ2LNqW3Mmvj2mJf32vudM061rqkhvU2
ZdKw7lZPa3lds7KVSd3LMcuDZmUrM64tZiuTmpWtTK41xsO2UqJm1UxS1Kx0
ldcFtzpbmYjZ1rbeyiTmGNOs0LloU9JVDg3LNqXKHNOsWFuMrW3RyoRedd1r
Y6BhP/KRHhr2btm6cKxU1TbJygXT5RsPPCxLdAZsrR0jw2uyObX9xG4ZPHSA
HG8vu1PQ+XxaP8FWzQtNSsXQAX2rPSdGqMEkQYTBWvFIghUd0O8nkauiKidy
VUD1ELk0tsPEfiORq3fIi1bkhud7Fbluhu9T5HpntU+R62b4WxK5+jweOZGr
gvUlkXtXqfS2Sjq3p8j9X3bIzvMmchclo7vOf3ojyJyWRlm+YJGMHJplpPUL
amXA05kBtu34Thk05BE5EeY/sL41a9ZgH165pNdpe3t76S323N/YvU/2A04M
boysTRYFY21j2H+feEPYn/dIUf4SOwMhjvI39WRd/h7uTf5qLMlf4qL81ViS
v8QwaXFMUe4SY1MpyVZVG4bUpfxV7WTyF+xGyvsLx02lUk/W2Q1xPEOIPVmy
m4S5aaU+2JNlhT7JYTdhJTlc9s/vcUXMAn2Sw8E/v9vthzuc3BAr2SnLX33O
5K8TjB2OlXCU5S9asog5waAcJuHYTjkcWquUxPtc7qZ2rBMQk7suiSl3kxz2
1mqUxCykJznsmJK4IaxmRtMlyt0kh9ladQ9gRfkbWqu4pHApmTee8tcxx5j8
ZWs1yl+ubob81Uu6IcpdveQbuacU5TCkrbdWc/IXrdUof9lahV8e8te3403y
N2zPyz2ucvLX5TC98DwHKcrfJIdnzy7LYU29PDQ1raKGtKX8hRwOe0qZRFYC
bvIXrVWMgRyGtFU5jAf3uIryN8phGwOJrGR7KuTv4sWBCOLRdu6ojBxwvzz0
yEjBtHJ4yxIZODi74k7uWCmDBz8p7V15+ctu7c/Yv/+adoID3cW7xhVq0lcp
NE27tkuwJndQbZPDxNHYi12CIX+VstPYG+Uxn8cmxsnY693Zld71TTh0fZMc
hkSGHI7yOBh7Tf76VlsJR2Mv5K6SD+v66hhbVK04GnsTprEX3VpI22DsrSH2
MbiLLUZjL3HB2IsYF3CjpVlDeUw5rHcxYtzpOGGXx7ira1we2yTthS3EzNmL
McT33ReNvTXs+vpNDbwx7LQF/wNizBkbHOeMvXoD1rDr25kdQlZDddyZHe5K
HI29Nd7ltTH6pxFzIsJHYjF0ff3mAy4aey2GnbYiZtcXNSqo36CYTf1Gdey4
aOxFzNZuc/00XuObHNPYm7q+7NbGri/UMNQv1LCqX24azC4wJwNc0hYLRl7s
6JXUsXdvc8beoH5NDUP5RjXMbi27vuzWOuaYqH5NDUP5hp22uKYaMZSwk/oF
hjpmtzYcbMtubU4Nq/JlFziNgfqFGsZBL+jWonsbdtoypUs1jK5vVMPs+mLM
//2/WWzy5HzH41Wyd+0MGTDoCcE81H31kkyd+KTMWbRYxj/7jCzaeLBSOzeb
/MQYsalfpb5gynN/+7eNOWM56YtSDUP9RjXsS7qjh7iHGlY19j2nhvVKu21q
WMfcVjXMJd1Qw1S/RTX8treV1bCr3z7VsC8F76F+9XvvVQ37UvA+1bAvBX9R
qGGVsUENl0rvkDm/aYc+9dX1fQGrYWoYneTl+NHjwp5t59UrsmX9OtlzkIvQ
8pPfm+zff7SLgBIWD3Bi8N51zjhgNwSOVuMkkfuSw8rRc/KX2E1lxNFqbHIY
MdUKuKgTDlZjWpS5x3LCwWpsG4u5/MWYhIO1mB1i7ql8gBjURR9JHkP6Ug57
h5jUZb9bmmOnN1mWnbqYHFYcO73WIUbMqcs+4rB83DrEGqMcZsc4yWHK49Dq
3VvQwwmHVi9bxCz2c3meUpkeepgUg3hvVVVZD3uLmBSD+pj6dzv1cdTD0Mj6
N7EAb/oYOLR68RlYzCmG6WPYhr0An1rGiFEPQx8HazFbxjn9C30c9G/Sx1EP
e4vYKEd3drxOrtXrjSTTv2jtumU5YXE97BrZ9lB2yzKu45wehkZGuxd6tzvb
8zm1doGph73Vy13FuJMXDZW5nb38eJ20s1dXV1kfs9VLPexWYqPbAXOMaWTf
Qzm1jGk1dkNlrtXrx+twJy8er9MYWr1sGSersbeMTevSakw9nLV6y3rYsY1x
y3JBD1dac36P/XtfJnA1Py9Vdgqma7cH+rman8GETfTCogysTJk9YFqQaWOm
RRmMO65mpRA20UvsIpjPR+sz+7nsEycc+sS0KJsQ9tWshiGCXfRyVzDrC0P0
EgerM0UtdzHLiWCIXu/vUhTbren9XPaJgWuIKXr1NrSY94WJo9WZopdCeCux
r26129dFLfvEhpXfrHMRjCnZsF6mSfTqrYkY+8QJF5azImZ9YndyGI7LWaFo
NUajUMBJ9eIWQsxWplDlArsKxvsipupdR5XrfWL8bcScSvCZ1HhfmCWmGu8b
c5pAiYkqlx7loupNqtaVsXmSgwqOmLd3UrnwOkOtQuE65u2cVK5O/6m/i15y
WM66Mqhc7t8c+8S4lnFNpz4x92+G6nUVzH5vVL3LqXLRJ/Zdw+iFtjF9qN7k
dWZ/F2PgdWZ/FzguZ3WVy+WspnLd+8xdw3LeZ+/vIpaWs6rCjV5n6+9C5UIZ
+3JWU7ihT5w8yvQ66/vFnj+5PrFy/0VKGn1MXwvus6lOjAZjayDw0EvZntEm
Vy0WJK7tUFZo+KZdy1ziAheXxVaV8stiq0r5ZbHAxeN/xpTCUapcFlvY2ayq
lD9KFTh3lKrKVYthZzOVKnxNcWczxHiUKiStYd/ZDA1f4uhqrirlXc1VpZ5H
qSIWj1IljstiEUtHqfpristiLRaWxQKnnc3C83FZbFUpvyy2ymUxJS6WxVaV
8stiDRd2Nqsq5Xc2M8ydzSBx9WdaLOxsBtwUXM1VRYmrt3JVKe9qtjGFhq+N
Ca5mviY2fBGLR6lWFSWufidVpdDwVflaVcrvbGa4cJQqYnFnM74GD+5shpgt
i9UxNY6LO5shFo9SrSpK3OKyWMVVUeLqfVFVlLh6L1WV8stiq0o9dzarKuV3
NqsqSlw0c7PLPZ6maj+6cJpqVSm/uVlVKb+5GX8GHtzcrKpUyu1sxtfg0efO
ZoVlsVVB4qZdzILEDTubVVq8/6QmCVhXstnun0yvztBP07Yuc8KDPs90xHzT
aGIsC4wt3envfW9axpqwcnWOgUZFbLMfhZqwb2UGbm4YJfOgYafrFUKtmTDI
Qlh2O01jNJXlMHWualbErGzurmfDThbwgE6Z9p73pFYrkohh15pIIsTJ0azJ
CDEuc03YD7DAAzrKYu48Thhl9ND2RYzW44R9mSseSKCI7XTrMRLoNL1bTHu6
C9pxkrCapy0E/gDTcxmXYtsXMZ7SinxvOJ3Smp32ihiP/CHWvJ8kLH6HxfzI
H1TzgfcR69s0HNq1+FPwJ3HrMuK0ErY726LNxrhbOWGepupS2GLuTsZHnbBk
/BBfCWIHfHUsOB8w27X4Wu15upV9p17EbIdTl8H2muBWxiWFS4luZXBSYo7B
pWgxdytHbGP0UsYljkv7sLdwcRsA062M2wS3R5KwelvhVrKYS1gcgWk4rJbd
5DFr6frqXmKOwa2NW5otXdz+MxzbGJ0KGKODGfLZMCStt5dnKBlhSxdJEPwf
MbZ0wf2B0zFBmkzB/20MHM0up2fohB8dzeD/iFlL19vLNoYtXU226HLNxJiy
oznyurVr10pHR0fpDRZ7heVEzkx4IE/pR8hdmxzmntavNz7N+zK9OjwNkhWf
zjB7xuRgErf9Ksf4kvLWXrfxubT1WH/ew9Gj5Z+lOfp2PZfeQ/m58nu4jb/n
Bf0ebva7uN3Xg16eeC5ufObPp43PQiy+Jm6lltt1LsNx47P4tOMbPM33E54u
b8SmU1PuJcAnTtwZno47wznu9WmdkNLTdxLyb+utBPaT9u83s6UIyt+xdBZT
lB2+rpoA0pUlMStVIaaSF9Oh+TVQNlN83UtidhSZ/hx6RXY7hrRm2Qyp1WIo
ren0t4v4U58yzOfNX+IlMZSyzHMCf4nOcwnDX8IxKFX5Egwbg9KW7ypAr4iV
rrD5P/wk+hHlsDNEW4qA2L332sdoq+ux+T92FUApC0sX/MCAbp9zbSkCTsnG
rgJcmoDDANxvgoctReCBAZ5GeWAAWRsWHdkBAe45seX1PEDAy1tInfHAgIS9
tIYKczxAQNx1VcuTtT1tpgMEMLV7VbmWx7152jT8+c9n1a66bCUCDsR28kyM
g6etuqX/s9X1iDl5Xuf73dOTyP3u2aSxapfvd89K21rf754nsiR/BmJeaeN+
9+ZZ9PuD+91v8cqaVbKAvXHDQ54Ro+fEKln61XFFhlWyFNOzyJUJiNl5Aaxk
4TVeabNqFypZGKNsDZcWKlnENgbVLr0UEQMR5uoFw74Cw6pbvloBlTSMIQYD
NYxKlt4ebNKYf8NXKlilDf4NX6lAfwluPa5WsMoaK1nAvqsAbmGrZuktjcoa
bnGurud5AcmvoTFUu6265X4NVNpSJQs/wyttVu3yShbYMsYs8pUL9JegDLAI
/g2NgRnjvVhlSzEraygDQD/agdfKhDEtQRvaa5w9Y/dY7ISN1VrKlm848YkV
u5K/QxXvPFW+xKlApsKaKyCsQKbqd0yp4AHxVRLJA+KvyXlA4tb+cd+44AFh
Meym9o27WQ8ICmQ36wFRgnlDD4iO6ZcHxF+T84Bwq396QPw1LzQPSNPz6QHR
z+SGHpBf+IW8B+Ttb6/sAdExOQ9IxM/FA6JjnosHJFcg68++cX4cQPSA2M/Q
ewkPekAQm/tbv5U8IObv+GW7bfGgDYT+jdyiiEoekN/93e+IB2RRPzwgi/vj
Afnwh/uifa+3f//W7nzSHjzQsIUhmd014rjeAYrZTB9u8CCOp7kddaMI1zvQ
OBJPczvixhBwCQlGETN4oICGbQQUx73kDvveduQOCQeDB40h5A4Jh/UOZgzR
GLtytm4COOwdd8iNIVy9SaMIDR5cRxENHraOQmP0ph7wve6iwYN73ZE7cG+7
eD4AjSLkDgmnQ7PvTsYQcoeEvUtn6yiAg8HDjCEaI3dIOBg8bOEEYt6ls4UT
2HB25MhyBU2fs81h3eCx03G5gna38RWLeY43o0gweJhJJMPlAw1gFIFZwytm
tpACY8aP9zEDk1GEOZ9GkWjw2O5GEXbTaBShoYMVsrieH0YRM2u4p9RMIgFz
L+UG7h3HfQTiWn4aRWjo8G60YVbHQNlhFAkGDzOKxPX9NIog5qYP3AdpgUN3
to8d7g8aPGwfOxhFgsHDjCJhwUMyisDQgeoYjSKOOcaMIVzg4AsnpjjGg5Wt
Kb6ggQsncli1AcwbacEDTCCqDWjwYFc77iVnBw2oPjDTx6JFyShiBg+vjqWF
E5rtTy1ZknF6LJxQfFIxx0ALTMWYpUv76oz+hF9WVMCYXUE47PZwEwhoMIgA
TSCmeF0V4/aAnKDiJY6KF0oZTW6aSfYQw0ziRhGubKCZhPvScUUFn18RFK+Z
QH78x5PiTRhmEhpF9DaDKWClm0lwGxqG4vUxuM0Q4wqKHPb0YCsblFRw3zzc
hsCmcGkCIfZUYaYPxFzh5rCnATN9aIxmkoR9RYWNcZMHFe8WN4FEhWsrGxBz
hUvTB1dU4Jaz52ku8dsumkloAkmbEPhtF80kAZcoi2n6oMQl3hwkrpk+gpmk
B4YJBNh9ickEEswkESdZDNMHYi551zpOZhKXzhbzJRQJ00ziW28gxk0HIJ2B
t7u5BN+rPU/J61tBImZLKNwEYq/hEgoYRfQaqnHzCE0gNdFMgqUPei0iRomL
a9UwJS6lM2KQuJTOim1JhS99iEsquMi/lmYSmED0fiPmGNyTiJmZxE0gxDbG
pXMtzSSUzsFMYpvXQTprDA2itNQBGJKXJpCwpIImkLSEwqUzzSVpjM5HNJNc
dxOIvYZmEphAVDrX+RIKvBewyLjpgI2BVEastraXzumKFSt8NhTjr+CR4LPg
mnj0VypXF6Ryj+USyrnTUgiXysRRKueWR/A1Kgni8glIhCSVVVrE5RFccmGy
uCiVVaK0qSxJUtlPxMMDssVivjFAksqKb1oqwyfSh1SudhylcnVBKhNHqVxd
kMrESSqrfKwOUrnoJWm+VS8JvSPhPPMeXhJ6R8IW6/SW9PCShC3Wq0r5HfKe
i5ekpeAlKW4egFhrf70kLo2TlwS4kpdEr4+cl8RxcfMA+kJMKtNLEqUyvSSQ
ygEXvSRVpefgJdF7qBcvSan0vv7YSW7aSzKR2KXyePeWRKlMfwmlcp9eEpfK
z9VLsqjiKXnr1q2zButrLfaP9mWRCmG3ZDBUpHCqYrBcKmXcyAmHpRGwS8MC
vd73Jjrm2FSy0yEuqeDSCOK4MwCXWHApRFLOSk0ijrsA2JIKxPzM84TDJni2
K7wr5ZxyDksjbBM+V8qGqaQrKWcqZd+VgHSjonLGEgsoZ98F4ACVdFTO2IUA
Md/jyJZcKKYVxWLYlA8xpyBQhYbTUoi7Ld0iRgpi9hT4SHzFpllTCr4S2lNI
L2hPib4S+lG4Ty/kA7BS+fKWA/pc8pVIRvvdV5K8J6A0FvPKN/0pxPSmxKUR
5k+hr0QytR19JeY1oT/FlTL+fvOIBOVMPwqV8vYC7g5+FHpNEvalEfSmxKUR
9KNQOScvSvCVWAw+Et8qwPwpjjmG/hTzlQR/StwZD9eieU/cawK6bN4T3yoA
0iD6SsyvAn8KfSXBnxJ9JZvcn0LlTC9K2ioAY+BHoa+kM9vagD4TGwPviap0
xLhcgl4U7pSHvcfMVxJ2aqcfBb4S7j5vmL4SHAXofhT4SGy5h3tRToad2ulH
4fKJ5EUJyycgRcx70vfyiR+zf7+YDkcHC0Vux61hqlnZLfK23Qq+HwBYsClp
V9ZxyQV+Dpg32HUnlTSwsm/2l+2QdShnZemmpImxNR+VNJZLaN5nP3k3sStr
Pm/LNKiksT0eYr5MI2Fs50eVrLdLjatrG+PK2pZpsL8MVQx17csydkRMJe1K
2frHUNJFZY39AYippLEfAJSzL9MoYjxsPwDEvHdMTGWNB1Uy1TWXT3CZBlc2
JXXtr0tmoTujEyjZO6I7yIcnm8btfO6l9/D99x5eY8/1MQN9Qea9//2ZWsWq
BqWWODC53+oVqxxeaOr16NHK6tXPgb+t6hUrH15o6pXqVGPXLl5c0/sV8CP2
7+fsL+U8jWIy6Tl+I3FsYpHCc8/qE46xaQlXKSP9JnoOSu84HpLE5hePw0g4
rFxmM2wT6TnoO7BXB4njgUhsfrGJlXBoYvGgJ27adcTpe9yjmhSe1cDDTt/j
QdhsfpGek9KziWV0nph0HRReY9u9Gkj6vj1s2kUKzyYW6TsPvbaY03M2sfY7
pS/v0vVyo7CgeLtAz7u7+7gaftj+/XzGJJRdqLSz+h2IMtgGamnGULyOj3ob
GYot5tTrjQ44YyzAwQHHuj0dcJGxJIaCDXudtZgDznHsB9gORWAkdMAVGAuf
jw4427HIWYu55IijAw51e73XkgMOjAU4OuCcbSQHHHFgKNvIQPwcnW0FxsI6
fs4B53V7Ot4M69yQc8Chbo+Y1/+3EjtjsTFgHxojazHGApwxlpzD0x+lCpcE
2zu8JFBBSClCp3JUGJgiLGV88IMZ1vTQI2UgHejUPj+mjN27bUxKGVgIpylj
HlPGq15VOWXodP+8pgzVGTdMGf6aXMooniHpr+kzZfgRIPVMGb/4i1k6iCnj
7W8vpwxNByll6KXda8oIi+euXbhQ2pj/+mM923ZBK91nfyrvEjzQTERTkTkC
8sew72xxwp+P5RvmCBofUs4IO1v0yBkq6XrkDC/7cGPH48gZwNjYsZecQQNF
yhmOcznDyz43zBkaSzmDuJgzNJZyBrGfvmsx5ojecobnlFi+OVTMGV4GisaH
g4WcQbwj5gzmCM8ZyCuQ4b4sqHg5sJp39erV7IQfJYxs0i7UWQBXGR6QpJY0
PvKRLGmojMXEvciThj2v2JKGN4iZABYH23StJ5Fom7aYN5HZDI5NZGvu6tVM
6bubOEhfNndN+oYkwSTC59HkirbpWr2z2FROOEjflDRc+uaSSLBNW5LwJnLC
Bds0Ewlt07kk4pLVmsrBNh2lr2GdHbhjAR4mUZEkXOomXLBNp0Ry/frWnlcA
KQKvAFShMYegmnwhe85yBGIwYzFHJOyyospzSMwRiKG6jbkcsoI45ogqSg+V
DJAVVcwj+nPxwHyPmB0b5TmCOOYIi8FjqvN7eg3yCrAvuM75R/XGqPK8YTni
fe8rL6YOTbEq5g2XFcBF/6jFgn+UOMoKxNKCan+N5QzPEcRRVlgMC6xdVhBH
WVHleYM5gjjmiKqy1OjHFYApf7Z+yrbw069zpIVZiMFzptea4d/4jVRJP0Gs
0y6ve6QBxNjIT1ivydgdmPU//2fyrhNj2k2+Ok0LFvNK+nFinYZ5LxydOVNm
6bdulXXvDhjGNOw+O2A7IY+v0bQw02PsDhj2Rj8eqITO1KuH9D1h3zUCD1RT
LeZTMSqwxDF1IMaFnwl7pR3ywzAWfQb5gRib/TnMtKASxGLuSUPqAN7lK0Et
pqliul7dHuvjCnil/fsKu/5ZNMQDi5r0U+MKG9wucfcrxySgbdloQy8LL0kl
M3+J4jvDL8w9neGbeTos4nOc3k/56fL7qfSS8sK+NiWWseTiuF9P31Xp6VQU
sueyRyoKhVga//I+njPyXJnVZ1Xpz6d8i5kZuRR+RMPK5pnXmX+R65FLmbOx
TgA4Pf8Hf2AtZDwoyExA6hXCfAxjBQUjrkWUdq3srbkU+RgYpzJwDK5z5Ddw
Bowx85XiyA+2e76F0MQ8xPwLvhAx+AKvVuZW8AXMQ8zH4AvM65ZvdYYkX7D8
DAy+4GOYb40f6DyUwz4nUoCBM0DsMf+CL1g+9ucpOvEwY5XGVqrwZHdlErDz
Bzwwp1pMOQTGJJzxh9Ku/NcfWT2//iTaNEFf1GSLr4ciLyb1JPQ0qeNrT3jf
PllYQfjN4wIPCj//GTnh91u/lRaBIKnTMWPCj0ldp++04EMT8lx/TU74+aIP
E356e/K4DRN+ntS5AOR5FX7cCJTCzxN2qh0iYReFn16SFH7EUfiNcaGXS+pI
4OfOFb9+3P3r16+Xa9eu+YRyn00acf4+tXSpTP25n0sL2Ay/9a25Pv3JxYvN
KcpNkw270MPbohA0keeTvxUQNcYzhRIOffskBr0QyALjplAIpJt+o5+WThwd
7iggIrbZ+/QJu6hDxgfeEkQdC4gUdQkHUXfUxeBW79snHAqBdgqBxijq7JA+
YD9vFw9kdIt5n56Yog4Z3nAQdcjoiO1wUUdxGEUdC4oUdSg6oi/p+zjkL4cv
xXRuD0sEeiXhTsUiMDzQYk8TvU62e13Q2URP0ecJBDMHRB9FnmG9tJhgMMlT
9FnC8InexkDQAcM57BM/EwaFoVUBFcdqom3Z5hM9E0itT/RJ9KHKx4leJ+SE
vbpIbNVFvxWYMCgMEw7C0BIGJ3okEFQBfZLnxM+EwYk9h30Mq3zcqo6Y1UUm
FO7fjgcTBt3GSCiTdPYgxsMSBmLYw/3atX3Zt290Qa/vA3vtAjh66gLJz/WO
S7JFQ3sPHXdO0fMawfeOGQcmo/OaTfBIZUBIut4yiErF6lAqxPVUXcgg1cwg
GUEplwFDBqkuZBBkg+pCBqkuZJA5mkGqCxmE20Qzg3DraGaM9BrNDpSJzBbM
ILM0G6SMgQzi5UfLFp5BuPQQEi+XQXwbaTywJ1L0QTKDAN8og9QXMkj9DTJI
dTGDBFmoMV4jPyB7VjfJQ4NGy+rVy2TYwKGyZvcx+Hhl0rNVMn3uUql/dqQs
3Ljvzl6uk9PLl2dp5HOfS9fsqWXL8qkFGGkkpBYsRrCYp5KEvV6IVAMcF0pB
UE5lKsEYx7FeCMsHUslGX2RNvCkcBGN2M8S8XphwsIBBYOZSCVOL272ItwS7
F+uMdJwnHOxetJuxXphSS6gX0m7G+mBKNWH3ocNMN0wljnmkXUo1we6FuqOl
Frd7sQ5JAWoxTTcz9B7xVMLr5G45d2yvHD6ZMf5Nixpk0JNNcnjHShk4JNv/
7+SOVTJIr6O2boqYz/e4WJhkQEVT4vEkYooDiSckIiaepEJUYWCyR7sJCYLY
nnfFcY2Jx5MIjTYxETHxQLlExYHKYlFxwNxCxWFjoGQ8ETHxULkgGVmiIfZE
xOexPyITj5lfguJIGOYcJh4oF8S81ZVLRAXlQjNODjPxILHohEEzTsJIRGwt
ETPxoLWkMZpzcFFPIlZeeTi7MrJ54VWye/1cGTh8sqxd0igDqzIbWPvxXTJ4
yKM4PCpeETtcOOCxRL+d74U0M6lSmvHKYS7NHDhgY9IJBb4Sna9hJXGOpxls
y3jF5TzTTK2nmdmeZmr7SjO+wr2urzTjr4lppseJBf6avtLMtAppxqqPSCln
zvCKsDZSh0zViW791u0ydsQ3pWHBBtmwpEGGTshWt2WnKg4Mpyp+3iTrU0oO
m3Wym6qTWatOSuhdIYmkpMFk440oJppoVrBEgpgnEuoa+ohPeqKJeoSJhD7i
lFiCj9gSCWLuI6auiXok6RhvPJ1gYgmNp2OuY5hIjjPRuB5h4snpEfc100ec
EkvQI9Qx9BFbogH2aice1uTSGPWIJRpiTwBHionEkw+bTJUSC3UM9QgrmdQj
4croviINdVNk3vwFsnLtFsH72rq8Vb41nKcMb5YBjw6Qc+mU4X+2OWPDhg3o
Sdn/dnpPCHUsZpFYy7IsgqyCDBF6VpQeoLZW/3IZZDhkEWSVVNsKtSzLIiGr
pCyCWpbeE+x9xayS6l9ey6LEiVmFmcYMCHovpVoWsWcVYut7MYu4FKHESRgS
hxki1rJQ24pZhbUtlyLcMiiHmUWYJVzibCH2rGK1LmKv91uvCbGs91U67lcC
+gpdMr+uXuYuXCSrNmyTjs5uaTu1X0bpX3nk7HlZNqtBnqlfeGe4CIr6hC2p
mDis5XTHHSlxEFdsW3niSNgTR2pbhcQR21b8GbaWKyQOtqmYOKo8kcTEkVpS
njiImThm+b6/0DBMFFWebNqKbStPHD3aVr63MCteeEBr5NpWmmx6tK1Ua1QV
Klw92lahLUV9UlUK1ga2sQrWhtSmOn06dxHo5bliiTQ2NkjzrAVyvs3bJ7vW
SWN9rTRO11h7Z28XwekVK2Sufhkg6bzikCMs5jUfwx/4gPGZNEZzgsV8qWjC
vm0ocohhdJNYC1u0SOa+//2pBpSwzrddIY/MQcxrQCccxw4T8sgcvThsH3KM
iZi1L80biHGO7Q3zNC48kDfm6IVKMp8w9iXnGM0jszXGbUQjjnnEYr6+I2Gc
Xx3qY7N/+7fT+g6YKQz7edXIKwkzR2heQYfOY7wIsvZS3qFU6Yip1LjRa96/
xnLjphyzR5veW4pTZyaD+aevXUs/MYP5n1iOxZfwJ+Lmjc0u4NALg9M193SG
49Pdhaf1G+L7cZh7PyEWX3LnTTwdGluO09M69eSeznB6P4DZt1M6k31pWWHx
73qweWgsZA1MmCg8WEwzpsX0er2m2dDG6EQwX+8LZm9cR9AWmFiRDXGN5PD/
L+7aYey6qqhNQCAhChoKChqqfPqIhoKChoKGIk4UIRoKRINoaSgBO7GMKBKM
HBPFH4XYxLYSE4fB4zHB39jJ+DN2YhELYeyxZ2wHTzwTMxz2WnetPfu+N/M8
jhTxquxz733xnHv2Omutve99Ph6s37s51uzOABlWs2L3xnpljGqWNCBygWMB
8tgxkQuIueNrZ0ZOcQzVq9gNkVOIWb3SzowddGcAnqtX0GWMYWpG7ONsmZQm
BC5wLFgAdlDsqIzBALR7A392xBirWbFCgT+MZXLiAxzDmKtX4IkZa2eG/70j
QJtaEs/VBB4yxo6v98BmvLAwcBfBvJ8PnnM00BSfZa0/F4KsyaTboLcGNRm3
RWyt8T0ZY2uN7dl6K7dW6yt1bvg7EOfWql+R4zaJrTVWjm2+3Fr1K3Lu5vA1
PU1WugK5tfoaazJptJ4m06/ILavJtLUOajK/dcy/lY5PajJskzH2xghN9ope
n+9r3BFYt9b5GzfqXfwMUnHNj9s9wcrMsWNt78MP94QRNkuOyXFjHEKpdnHf
kKCyw2aBZWHkolEVRnbq2KEXOHFdcXXc3EFox83xmeK4ufPcjpudu9qRZ6fO
rzHMWD+9zCJRxOeK42ZBZcfNzl113Nwx6GJOxnDgqnMXYy7eZFyKNxZUFkuO
7bhBgKGNBgAXc9VLxB+NrtMITi1SxiNRAGE8J4REFUOEXIxJDKGJjrGK+j5O
i81CR7aWxZBFDIr6hlOKmFiMFkMUMYiLGLJIIRRC6MD6Qgwx5CK+rC6LoQuO
ZbH5OGFQcEoRE4lhMUQRg7iIIUJsjFEMQejE3WNcxBAoHcZsqZ2rsYv4sbqw
BbjeQ+sLcSeGbo++a9hIABF4ZLvC51YpCMPn1kH4jDv4acPn3IPCZ0DlEHwa
Ln2N6ugJnxEPwafg0rYYodLwqfo8VIfhc+sgfD7+eDdW4NMxnp3BB0pkq+Bz
vioTQOz16/e5azPHjy8hptHQKFoRM+Jak2D9A2NCTNdDiJhAQyFoDzFlQSVi
Ku4hpkrrtpIc1x5mW1CJmI4rYsqSSoQ0YspKclxL24mYspIyxktffQ4sqRhz
jSLjYiXRkooxW0lETMTFOroiS8oISbkRuhjPocb/q3fXfjiMkEDDQCk8bJCE
EzYPxgI1QTh9DhAzEVJGv1uhSEorYvp4sY+Mdm6Fou2DGBVyI6TQ7pBaoSpi
JkKiwowxVcQrYiZCwsaJdezCRMZCTMe0j4yQMP4xJvuoImYiJEhp5IzJIxET
cWmFYoU5xmwX9WITTlScMYYq+fz83PBdqrLAiLi9IOKhQUSM2XC8akT0d1RE
NLoZEfUdNPCNiCoErAoR1Un0f0VEdSyNRERd00NEtyF3CDhwlwZp/8yJE23v
I490T3EY3YCKGJOZbkRcFgHFEYGSREAgHtBNiOjXYONjk97NPY6rmU7EAyqq
ucfNSGfKSzj85InN9GkjYKnKXhWPNOK5+eis+KARsscHzSPNBx2X5p5/6UkU
m+mJgOWpPhr1RrxWELE08+AcGDXAnJiLepc6Wv/99h/9uZdE5LBgE+4EXYBA
6mudU5t7TOZMGq3JDX88jrh0ghq63AlKgij4S30t6EJiEu4EfyCNbgAimQsY
ch2W8Ie41GH5yBzgTaRxyrHhTzHrstbXgi7WZQF3IHuIQRoNdyB3gDc9gljh
L+FO5M512BrHOWs+rlnzgxXZ3qqwLXDL2DZesO0OsE3fQ/+4Ylvg2BC26TXZ
I7FNT1zjEQsXKxPb9EhdYpuu6WFb6YMhlvmaUdgmnGLX5Cqw7e5qsC2YXP6G
Hc6Znr7fLUkgK8J2RkDmrsQbonu1CkjgijFQtWYgQ6xWkusCuncLTbMgJnDh
HMdF2KYgLkC2x0AmMAHY7RFwMVYFslYBIYg5JuDKWDTNcaVpSe9E01Igl1YS
C2K3kmRchO0VdVL6TUE4B842QWtxsX9Lnh66JQYp6JWFmZluTCoURiAAxeZh
5XLmWDQCAyzYoIEYQCZj0EBWjUGDGc5J3gYuJ7VrEEKWQWGyQQNx4XLmWFa7
FwqQJXBJhdoInHIsIPNxqt9qDMbKNpczkFH92hgU5yKYAbgEZJXLnZFKFZit
+e/wLZiamspbAIBhwWztWr4ZjGOl+GWgclxJmAtid0TCMpYs3SIpW2VpPsMl
WZrPcBVZ6gKZSRjj2mnhH850Q5+uYUt4IWG1QJbXlM4LF8cqCXOBzECVxbEC
VFsMZgFMvsbPdOHj57r0DNfgLTDDOhLAgc/syZNtPFYTktGuHMAKY+f1ttGM
I0HznAArjE2pZMQ4bqd/aQ6sjDF+prawMo7pgSPHWPk+B9r0YNxOlojk9iFm
OagwNY4FHTBTy7gwtYOxlPxTcyvFyNaqXTmmElHGHaB05wQzOxjLy28grXEC
XAAaSnUa69+CroQ0OTkJBpUlJKxIJVEWWMoYP1jZEbtEwrA8Ea04v3Hp8NI3
LnfJ/HzvG6WmfHixHI4MWKyHES+VtBQOHs5/z9LhpX8PxkpJS/FDow/zvz9X
5/SJIXDHbd4RWQHKMK+SL0AXY8g+AKrPQXZ6A8CywxjK4ABULLsa5/HI+o/F
ZLHkd0RGosIEcMeSZ4zqkjYApA7HAlEAugBhxDQEtAEAhDkWyIT7DuMXMTcS
bQCsxgQiYCPBOQBhxrEEEfu4W+bxwZ6+HWNgxHH3IUwYq1MRH3ADjHFjiXsM
XsBYDBmfz46eclxq/zDBvKrjS5dIppN1nj/Pc8bVFkeWOcg6IwUm/B2FdR40
g1SXgr9jZ3lpw5h9SAH1weVYp9vkwCgDiN2Oh3iIdYpljpl1qgXOChugPMQ6
1QJnVU71bDB3a51a4twhUcH8PlM++/bbbe+jj/ak70wAOsfAIgPEzDxp9gno
zDzNIm00uo/MkrpKXzDNvWKRPCeAGbF/PpXniGlS+pa4NiSbadr8y7iUR9xU
bbMPQGwWWeNaCqFkxpikb8bYoMQYzTRt/gG8xyLbKnj3pvx7Q5TFbA8AMC/Q
sFTF6kGi8pxgWGSWYo1kfCoxkzVCuiKOVUmg8XEAgoDFjHBczNKMkIAg0HCp
mMwyknlKpWIyS4EGpsAlZjBL/PmDJWczPjNLS1cDQDJCME0BCxkhysdimqxj
qORsYKErp5LzPQHJF/pTPEhJlgUSg8JqgSS2Ln/PDtluCSQBEh/qhWEJCmJv
CSSw3QQkWdBQIcI9umBzsPzwGRsEEl1TgST7bcXo8hrZbpazFUiytjsKSAor
/EhtUwNTjFWMaV7UIk/gAEgYFAwcqhIwXgk4BBQJHKqhJnAUqQmWxzFJTcdV
aiZwSGq6QlGlpisU9swsYWvD6TVI1hgzUFCyIpbUvKa4VgSuqonWUjPjIjUh
Y/8SS6MCRW+KvzuEzQSFSFbcZTMQSkOMgT1EAvsc9qYITEBidwo84FexhwSx
gMPH6a2ZgSjp3ZvinpLx0pvipHdvSgUOgwl7RgAMkqAJHMVfcw+JywnuITkk
4PDx2qtC/6r0qhg46LfNza3hSd1EugNvYe5WO33ieDt19kJbUB/Q/J3ZdjJW
2Ln3P2hxXx5aYeazkBnYMIQfUHsVPyJO/HAxE3jxCfBj7lPAj5cfAD9MTIAV
Q/gha8vKVFb/4MwvLtxuL255vv3p0NG29+Ut7Xe7/twWFv7dXnphcxv768n2
6rbn2pvHL64087OnTrV9hhClP6AGY+/KegesMC7WOzlKjLkVw5wluYZgp/as
u/DJQmONUWhUirp1ZBSsJEeRg2Xbv1rv04YVwUjG4hqGmWqzu/Dpd11bcMJS
gijszfwX2z/OHGzPPNO9Uvru1Yttw7Pr25FjE23jpu4V0TfeO9k2bHiuzS1a
Pn1nGHIEL9hIUvSIZ2CxEHIKBCXkoG1NMJSQE2lPCJIIYlza4wwf5i9uayN/
segRfNgZqxCUogc8I6DAfSBuW6v8xbzClv4QBOk4LX6LHjhRSzDUTfeXc7rP
jL/Ufv6LFwAj7fYH77b1Gza2Awdeac/+fr9uQfeY0NLTIN10nxdW4HNYzhR7
0grO2IkyzjiuPMXulHEmY+EMY5QQC87k24WEM9nKXXDGbpVxxs5UxZl0piR4
3LqNPjZ8qjtlXKmt23azBm32IVxZmu6pI7vbT376s7bvwJvtxc2/DSw5104d
3tU2butekN09fLO+N93gK5sjWfzwzf6giHhYDSvNLsDs6dPt8JNPdg5SJGvG
+q0anhMANBFjbigGSE2sW9e5RYhxHHGs+hRRAUAcQ4OxAAkxWHvlQhNPPJFu
kWN2CRSQ4hjcIgBZiVNYBShNBDtGkczCqsY+jp6BKqLgePXAZGm6r713tG36
9ZZ2Zfpam56RLXz09fbLTd0vpd2+PNnW/2pDu3XP0/15ru6zsYpBEU0T4Ysi
eWzIKM4MUNw7LN7Pw7F4I7YDpJCRHaAylpcE8/A3YvlXC0zxag9fvNizuxT7
31MOdxP4FU1gMJB7H7U/bNnc3pq83P75/un26utvtbu3rrTNv9nU/n51uo2/
9nLbtudv3f/o20NAjOW3PbIFWYFXY+ADjsax2JEBfj4HO7TBGmYqx2KXBvgB
ZLdHFsKCYBwAihgZamEJ/sWxyEoAMYQb4jG4WgJrAOg2jMHFivsHAGUMHiqw
BmBuCxTgJhB3BHskY7hYAmLsvxyLjQDzjr2XcaATYx13aWRgUuMz/+FMG3tj
f9u1e1c7OdXhzbXL59q+P+5ur40daXcWFleaVFcse7TOFM20LvLElC3hVlXL
naZ1ooeuWE6IGgImE25F0dh7BrgVNUSccKvKpyuW7nOj5DPcqkODrbqAW12D
OOG2+EeEW1+jCqVfJFfhVpP6pRWmCr+Osu+xx3rSbdZj8nzM1WqD16wkoHnX
rCQgpVtbqmJW6UbJhzF5PjOKq+fjdgxLN1cx2f5qHiZuZs/HvKxWDi0B7fHY
O7J0w3ccituLngRf05uqbw1t4pRTwUmQUk7VC+I7uDNIVfMhbIR+fsh8h7wq
0oOSK/gGUwoxjiMujx2cV4u+eRX5kOIFcybxIaQUUtV8qGcUi++QV0Wqmg/1
jGJIriD9NoopuRCDZ+mcr/anZsiHccJFct3S6rIm2inegYLhYMK5TYAJtlzC
+TvAS5xwTh4nnL6jl3DSWiMTTgbuUMJFcmXCFZ1kHWV+49drDEyNN0cbiTff
eSeTaSjB5I1kghUT1b6LvZCMJWLswVQRY8/FIsZxFTFOKIuYTDC9ZpDJoZ4n
eyMWR+wf0t81LfHjhELiHoplULlHb2q+OVx5UfKw8uKEkh/BykssdCZdLFgk
WO598DCQMHF3uD86gZxgPg7h4oRScnDPQkI5wZB02vvoT8TCp3+ChEKCRUz/
REnn5LB/wgRDDP9EyUJBgQQqSfa10VORPTY1gZwMAwmE+LZ8ZldNMoH0PZ8o
gWAyDCaQFrp7dWAoDCUQdiMkkK7pJZAEQE2Y+0zFzYidHJkMSiKrficQzcNq
VMbYGe1AThir/hnHNWG0S50dkTB+GCUTRjETRslgo9Kq33E1D3HdIDnvTcU3
liWHWKQgeZkgWux4shY7AXcgxNiVnCBQ3EoaJogSAnBmsuiEyQTRYveuxIRB
MiCJnCAoO2JMuxISZocSJhMED4UpaZggKDMqYfACb5709dF/dzZyoCutbCd+
ihk1OfA3N2l86GxQQ0ja+pFBGYu/pRQu2ZBPNceq9VPY9ZUZftFv1gd9DaRw
4W8phbWdeOXfuXx52b97cBtFB97hp54i6FmT3pyczDEsm4yLBsUegzG+DhXn
IA4dqxcYLMVFb2LP4VjXt5lx1ZsgddCy0I7egxBX0mS9i2Xdiv7VMl/m7+4/
Gcvj6x7sOF6ncLbj9csevxPrbk7ysR5fs/Z/nG8MGQ==\
\>"],ExpressionUUID->"6966710c-7896-4aaf-92bc-a09bb09fb9a8"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", "\"\</Users/lambda/Downloads\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"lat", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<data.nc\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Datasets\>\"", ",", "\"\<Y\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"lon", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<data.nc\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Datasets\>\"", ",", "\"\<X\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"time", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<data.nc\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Datasets\>\"", ",", "\"\<T\>\""}], "}"}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.711287848038677*^9, 3.711287977335834*^9}, {
  3.711288007770849*^9, 3.711288067983942*^9}, {3.711288110615906*^9, 
  3.7112881233406353`*^9}, {3.7112881815167637`*^9, 3.711288193661066*^9}, {
  3.711288229572618*^9, 3.711288236413919*^9}, {3.71128827566463*^9, 
  3.7112882910642557`*^9}, {3.711289935362924*^9, 3.711289970801318*^9}, {
  3.711290691588037*^9, 
  3.711290706043717*^9}},ExpressionUUID->"93572cc8-2a07-4b76-8252-\
362cca36ce1d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<data.nc\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Datasets\>\"", ",", "\"\<rain\>\""}], "}"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7112882409467773`*^9, 3.711288248898581*^9}, {
  3.711289964711398*^9, 3.711290072585994*^9}, {3.711290709511067*^9, 
  3.711290714425272*^9}},ExpressionUUID->"1e034495-345f-4942-af2a-\
d701be8e46a2"],

Cell[BoxData[
 TemplateBox[{
  "Import","fmterr",
   "\"Cannot import data as \\!\\(\\*RowBox[{\\\"\\\\\\\"NetCDF\\\\\\\"\\\"}]\
\\) format.\"",2,967,339,26595566317263108791,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7112900673119392`*^9, 3.711290072957982*^9}, {
  3.711290714904531*^9, 
  3.711290716352127*^9}},ExpressionUUID->"fa35d9d2-46b7-4102-9dbe-\
9a85b555383f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"1747e78a-63a8-45e5-908e-bdc70cb6ad7f"],

Cell["CNN", "Section",
 CellChangeTimes->{{3.711205487831609*^9, 3.71120549079748*^9}, {
  3.711291282227705*^9, 3.7112912892410603`*^9}, {3.7112919299228287`*^9, 
  3.711291950313897*^9}},ExpressionUUID->"f807477c-3dba-41e1-9e1b-\
c5097e195eac"],

Cell[CellGroupData[{

Cell["Whole Year & 6h", "Subchapter",
 CellChangeTimes->{{3.711326537082911*^9, 3.711326538882299*^9}, {
  3.7113868633875227`*^9, 
  3.7113868654009523`*^9}},ExpressionUUID->"1ff66838-297a-4575-bec9-\
92197ef1cded"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gph", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "#", "}"}], "&"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"GPH", ",", "1"}], "]"}]}], "]"}]}], ",", "mean", ",", 
       "std"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"std", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Variance", "[", "data", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"mean", "=", 
       RowBox[{"Mean", "[", "data", "]"}]}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "-", "mean"}], ")"}], "/", "std"}], "&"}], ",", 
        "data"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"precip", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"Precip", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "Precip", "]"}]}], "}"}]}], "]"}], ",", 
          "1"}], "]"}]}], ",", "mean", ",", "std"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"mean", "=", 
       RowBox[{"Mean", "[", "data", "]"}]}], ";", "\n", "\t", 
      RowBox[{"std", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Variance", "[", "data", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "-", "mean"}], ")"}], "/", "std"}], "&"}], ",", 
        "data"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{"Length", "[", "gph", "]"}], ",", 
     RowBox[{"Length", "[", "precip", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gph", ",", "precip"}], "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"RandomSample", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"gph", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "l"}], "]"}], "]"}], ",", 
        RowBox[{"precip", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "l"}], "]"}], "]"}]}], "}"}], "]"}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Dimensions", "[", "gph", "]"}], "\n", 
 RowBox[{"Dimensions", "[", "precip", "]"}]}], "Code",
 CellChangeTimes->{{3.711291344926475*^9, 3.711291350588716*^9}, {
  3.711291397195365*^9, 3.711291401666648*^9}, {3.711291680924217*^9, 
  3.7112917136450043`*^9}, {3.711291756140502*^9, 3.7112917729222593`*^9}, {
  3.71129269822692*^9, 3.711292704179179*^9}, {3.711293950951332*^9, 
  3.711294067337912*^9}, {3.7112946451446753`*^9, 3.71129470272654*^9}, {
  3.7113280451354847`*^9, 3.711328045958943*^9}, {3.711328103857849*^9, 
  3.7113281256741753`*^9}, {3.711421292748259*^9, 
  3.7114212943948298`*^9}},ExpressionUUID->"b2f67737-6745-4ff1-b275-\
3adabb4d18dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"101512", ",", "1", ",", "14", ",", "15"}], "}"}]], "Output",
 CellChangeTimes->{{3.711294068916809*^9, 3.711294077450624*^9}, 
   3.711294704821087*^9, 3.711301728945181*^9, 3.711311436285632*^9, 
   3.711315863304761*^9, {3.711325162626444*^9, 3.711325185655794*^9}, 
   3.711325294454217*^9, 3.711328086102816*^9, 3.711328127967615*^9, 
   3.71133129885205*^9, 3.7113707831636953`*^9, 3.711371577597603*^9, 
   3.711398133797246*^9, 3.7114203583574057`*^9, 3.7114212999364*^9, 
   3.711425970672215*^9},ExpressionUUID->"8b321386-e211-4db0-a8db-\
3da260225be0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"101512", ",", "36"}], "}"}]], "Output",
 CellChangeTimes->{{3.711294068916809*^9, 3.711294077450624*^9}, 
   3.711294704821087*^9, 3.711301728945181*^9, 3.711311436285632*^9, 
   3.711315863304761*^9, {3.711325162626444*^9, 3.711325185655794*^9}, 
   3.711325294454217*^9, 3.711328086102816*^9, 3.711328127967615*^9, 
   3.71133129885205*^9, 3.7113707831636953`*^9, 3.711371577597603*^9, 
   3.711398133797246*^9, 3.7114203583574057`*^9, 3.7114212999364*^9, 
   3.7114259706924686`*^9},ExpressionUUID->"c18326ee-7cee-42dc-acae-\
de949d835382"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{"\"\<6h_GPH.mx\>\"", ",", "gph"}], "]"}], "\n", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<6h_P.mx\>\"", ",", "precip"}], "]"}]}], "Code",
 CellChangeTimes->{{3.711421302573374*^9, 
  3.7114213284118137`*^9}},ExpressionUUID->"58a79144-75eb-4cf3-9958-\
b13baa4fa83a"],

Cell[BoxData["\<\"6h_GPH.mx\"\>"], "Output",
 CellChangeTimes->{3.711421330012051*^9, 
  3.711425972958228*^9},ExpressionUUID->"12ad0901-f313-4a01-b9ea-\
4c2fe1451350"],

Cell[BoxData["\<\"6h_P.mx\"\>"], "Output",
 CellChangeTimes->{3.711421330012051*^9, 
  3.7114259733556833`*^9},ExpressionUUID->"af9e99c1-5a33-486d-b802-\
a073ef761d34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ann", "=", 
  RowBox[{"NetInitialize", "[", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t\t\t\t ", 
      RowBox[{
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"1", ",", " ", "2"}], "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", 
       RowBox[{"BatchNormalizationLayer", "[", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"1", ",", " ", "2"}], "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", " ", "1"}], "]"}], ",", "\n", "\t\t\t\t\t\t", "\n", 
       "\t\t\t\t\t\t ", 
       RowBox[{"FlattenLayer", "[", "]"}], ",", " ", "\n", "\t\t\t\t\t ", 
       "\n", "\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"BatchNormalizationLayer", "[", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", "240", ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", 
       RowBox[{"BatchNormalizationLayer", "[", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", "144", ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", 
       RowBox[{"BatchNormalizationLayer", "[", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", "36"}], "\n", "\t\t\t\t\t\t ", "}"}], ",", "  ", "\n",
      "\t\t\t\t\t", 
     RowBox[{"\"\<Input\>\"", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "14", ",", "15"}], "}"}]}], ",", "\n", "\t\t\t\t\t", 
     
     RowBox[{"\"\<Output\>\"", " ", "->", " ", 
      RowBox[{"{", "36", "}"}]}]}], "]"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.711291835207334*^9, 3.711291902539351*^9}, {
   3.7112925081343317`*^9, 3.711292533033194*^9}, {3.711297784373797*^9, 
   3.711297795658963*^9}, {3.711297980927434*^9, 3.711297984157221*^9}, {
   3.71129852047994*^9, 3.711298527413066*^9}, {3.7112987267855253`*^9, 
   3.7112987275905247`*^9}, {3.711298932649469*^9, 3.7112989340160713`*^9}, {
   3.711299028439501*^9, 3.711299028731526*^9}, {3.7112991167124643`*^9, 
   3.711299134771428*^9}, 3.711310819445112*^9, 3.711311444602668*^9, {
   3.711311820203637*^9, 3.711311829932809*^9}, 3.711313152324218*^9, {
   3.71131339404988*^9, 3.7113134268539667`*^9}, {3.711313535708776*^9, 
   3.71131357788139*^9}, {3.711313628826557*^9, 3.711313638863739*^9}, {
   3.711313707632298*^9, 3.7113137100133457`*^9}, {3.711322226622748*^9, 
   3.711322242834231*^9}, {3.7113708064250727`*^9, 3.711370813464374*^9}, {
   3.711379389636455*^9, 3.71137939132066*^9}, {3.7113981391150093`*^9, 
   3.7113981393180923`*^9}, 3.7114081704305143`*^9, {3.711408426816083*^9, 
   3.7114084273531103`*^9}, {3.7114085026361427`*^9, 3.711408503347871*^9}, {
   3.711408677309165*^9, 3.7114086907661448`*^9}, {3.7114088051800947`*^9, 
   3.711408805349615*^9}, {3.711408897836673*^9, 3.711408897994001*^9}, {
   3.711408979385708*^9, 3.71140898305529*^9}, {3.711410182226564*^9, 
   3.71141018397367*^9}, {3.711410251649293*^9, 3.7114102663845587`*^9}, {
   3.7114109085623503`*^9, 3.711410919408969*^9}, {3.7114110431063643`*^9, 
   3.711411044466195*^9}, {3.7114110815462713`*^9, 3.711411099919044*^9}, 
   3.7114111476081457`*^9, {3.7114112659332857`*^9, 3.711411272073189*^9}, {
   3.711411488651793*^9, 3.711411488836802*^9}, {3.711411542604645*^9, 
   3.711411544121912*^9}, {3.711411676128313*^9, 3.711411676316194*^9}, {
   3.711411710110578*^9, 3.711411715394272*^9}, {3.71141185809593*^9, 
   3.7114118597797527`*^9}, {3.711411937768044*^9, 3.711411952797367*^9}, {
   3.7114120380204372`*^9, 3.711412040297001*^9}, {3.711412072540319*^9, 
   3.711412085967843*^9}, {3.7114131117542458`*^9, 3.7114131135184402`*^9}, {
   3.711413278799262*^9, 3.7114132854207363`*^9}, {3.7114134731011267`*^9, 
   3.711413478919389*^9}, {3.711413532692734*^9, 3.711413565684147*^9}, {
   3.711413621317869*^9, 3.711413631329687*^9}, {3.711415890881765*^9, 
   3.7114158916300383`*^9}, {3.711416680360265*^9, 3.711416680810602*^9}, {
   3.711418109508852*^9, 3.711418113638689*^9}, {3.7114208765358353`*^9, 
   3.711420881074751*^9}, {3.711421368472261*^9, 3.7114213720992613`*^9}, {
   3.711421506581109*^9, 3.711421511595393*^9}, {3.711421641932818*^9, 
   3.7114216544559927`*^9}, {3.7114219978159637`*^9, 3.711422032468614*^9}, {
   3.711422668573044*^9, 3.711422669681631*^9}, {3.711422813574912*^9, 
   3.711422814713665*^9}, {3.7114229899537697`*^9, 3.711423000196372*^9}, {
   3.71142313807395*^9, 3.7114231432614717`*^9}, {3.71142370130758*^9, 
   3.7114237182623997`*^9}, {3.711424245553363*^9, 3.71142425495632*^9}, {
   3.711425016800527*^9, 3.711425019259699*^9}, 3.7114251843031387`*^9, {
   3.711425237962343*^9, 3.711425243972872*^9}, {3.711425620683381*^9, 
   3.711425622398583*^9}, {3.711425746190486*^9, 3.7114257502012777`*^9}, {
   3.7114257848276167`*^9, 3.711425790822599*^9}, {3.7114264762548723`*^9, 
   3.711426479382435*^9}, {3.711427935311359*^9, 3.711427936130591*^9}, {
   3.7114289037408037`*^9, 3.711428904192212*^9}, {3.711429314883945*^9, 
   3.711429319474081*^9}, {3.711461659479306*^9, 3.711461660807087*^9}, {
   3.7114619590384207`*^9, 3.711461970225195*^9}, {3.711463537600713*^9, 
   3.711463563890808*^9}},ExpressionUUID->"1fd201b6-9068-4cbf-9998-\
c1027d2f8983"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 2, 2}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {2, 2}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {14, 15}, 
               "$OutputSize" -> {13, 14}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 14, 15}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 13, 14}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 13, 14}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 13, 14}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 13, 14}, NeuralNetworks`RealT]]], 
           "3" -> Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 1, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{1, 13, 14}, NeuralNetworks`RealT]], 
             "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 13, 14}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 13, 14}, NeuralNetworks`RealT]]], 
           "4" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 2, 2}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {2, 2}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {13, 14}, 
               "$OutputSize" -> {12, 13}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 13, 14}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 12, 13}, NeuralNetworks`RealT]]], 
           "5" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 12, 13}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 12, 13}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 12, 13}, NeuralNetworks`RealT]]], 
           "6" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {1, 1}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 1, "$InputSize" -> {12, 13}, 
               "$OutputSize" -> {11, 12}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 12, 13}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 11, 12}, NeuralNetworks`RealT]]], 
           "7" -> Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {132}, 
               "$InputSize" -> {1, 11, 12}], "Inputs" -> 
             Association[
              "Input" -> 
               NeuralNetworks`TensorT[{1, 11, 12}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT]]], "8" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 132, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT]], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT]]], "9" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{240, 132}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {240}, "$OutputSize" -> 240, "$InputSize" -> 
               132, "$InputDimensions" -> {132}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]]], "10" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {240}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]]], "11" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 240, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]]], "12" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{144, 240}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {144}, "$OutputSize" -> 144, "$InputSize" -> 
               240, "$InputDimensions" -> {240}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]]], "13" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {144}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]]], "14" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 144, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]]], "15" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{36, 144}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {36}, "$OutputSize" -> 36, "$InputSize" -> 
               144, "$InputDimensions" -> {144}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "12", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "13", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "14", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "15", "Outputs", "Output"]}, 
         "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{1, 14, 15}, 
             NeuralNetworks`RealT]], "Outputs" -> 
         Association[
          "Output" -> NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"14\"", "\"15\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"13\"", "\"14\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"13\"", "\"14\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"13\"", "\"14\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"12\"", "\"13\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"12\"", "\"13\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"11\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"132\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"132\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"240\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"240\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"240\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"144\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"144\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"14\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"144\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"15\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{270., {123.4169921875, 128.5830078125}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{{3.711292523109174*^9, 3.7112925335839777`*^9}, 
   3.711292731685186*^9, 3.7112940822775*^9, 3.7112947222081003`*^9, 
   3.711297796250732*^9, 3.7112979847033377`*^9, {3.711298528067678*^9, 
   3.711298535789217*^9}, 3.711298727942622*^9, 3.711298938498961*^9, 
   3.711299029249032*^9, 3.711299135229631*^9, 3.711301732014203*^9, 
   3.711310820756989*^9, 3.7113109925783367`*^9, 3.7113114550727386`*^9, 
   3.711311830470886*^9, 3.711313153302457*^9, {3.711313404621374*^9, 
   3.7113134277075577`*^9}, 3.7113135784672613`*^9, 3.7113136394660883`*^9, 
   3.7113137105390587`*^9, 3.711315866422512*^9, 3.711322244870166*^9, 
   3.7113252989235888`*^9, 3.711328134405864*^9, 3.711370813944412*^9, 
   3.711371580836411*^9, 3.7113793917305403`*^9, 3.71139813995249*^9, 
   3.71140817197262*^9, 3.7114084278894253`*^9, 3.7114085038140287`*^9, {
   3.7114086828031588`*^9, 3.711408691238336*^9}, 3.711408805833167*^9, 
   3.711408898483636*^9, 3.711408983674918*^9, 3.711410184641431*^9, {
   3.711410241926909*^9, 3.7114102668389*^9}, 3.711410919903221*^9, 
   3.711411045077107*^9, {3.711411089948205*^9, 3.7114111010223303`*^9}, 
   3.711411148253872*^9, 3.711411272775629*^9, 3.7114114893904943`*^9, 
   3.711411544664524*^9, 3.711411676808034*^9, 3.711411715971908*^9, 
   3.711411860175186*^9, 3.7114119533385067`*^9, 3.7114120406962423`*^9, 
   3.711412086503098*^9, 3.711413114522297*^9, 3.7114132862889833`*^9, 
   3.711413479403677*^9, 3.7114135363939047`*^9, 3.711413566400589*^9, 
   3.711413631986555*^9, 3.711415893489915*^9, 3.711416683273093*^9, 
   3.7114181140214853`*^9, 3.711420368554895*^9, 3.7114208815660133`*^9, {
   3.711421343830908*^9, 3.71142137242745*^9}, 3.7114216550179996`*^9, {
   3.7114220060083227`*^9, 3.7114220333807907`*^9}, 3.711422202566019*^9, 
   3.711422670392314*^9, 3.7114228158177156`*^9, 3.7114230009195013`*^9, 
   3.7114231442321463`*^9, 3.711423718655765*^9, 3.711424056795219*^9, 
   3.711424256884685*^9, 3.71142449928867*^9, 3.7114249740237093`*^9, 
   3.711425019744809*^9, 3.711425185758162*^9, 3.711425244710821*^9, 
   3.711425622686692*^9, 3.711425750696848*^9, 3.711425796923156*^9, 
   3.7114259758627663`*^9, 3.711426481321781*^9, 3.7114266479163446`*^9, 
   3.711426869446535*^9, 3.7114279366224422`*^9, 3.7114289045117817`*^9, 
   3.711429319959437*^9, 3.711461661639337*^9, 3.7114619707529078`*^9, 
   3.711463564231738*^9, 3.7114645342462187`*^9, 3.711465815991447*^9, 
   3.7114665888576403`*^9, 3.711466802020261*^9, 
   3.711466845512073*^9},ExpressionUUID->"ea6d5696-467f-46b7-842f-\
91a7f2e2c2e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ann", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ptraining", "=", 
      RowBox[{"Floor", "[", 
       RowBox[{
        RowBox[{"Length", "[", "precip", "]"}], "*", "0.7"}], "]"}]}], "}"}], 
    ",", "\n", "\t", 
    RowBox[{"NetTrain", "[", 
     RowBox[{"ann", ",", "\n", "\t", 
      RowBox[{
       RowBox[{"gph", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "ptraining"}], "]"}], "]"}], "\[Rule]", 
       RowBox[{"precip", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "ptraining"}], "]"}], "]"}]}], ",", "\n", "    ", 
      
      RowBox[{"ValidationSet", "\[Rule]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"gph", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
          RowBox[{"precip", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "ptraining", ",", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"Length", "[", "gph", "]"}], ",", 
             RowBox[{"Length", "[", "precip", "]"}]}], "]"}]}], "}"}]}], 
        "]"}]}], ",", "\n", "\t", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ADAM\>\"", ",", 
         RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "0.006"}], ",", 
         RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", "0.0005"}]}], "}"}]}],
       ",", "\n", "\t", 
      RowBox[{"BatchSize", "\[Rule]", "4700"}], ",", "\n", "\t", 
      RowBox[{"MaxTrainingRounds", " ", "->", " ", "2000"}]}], "]"}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.711292603805943*^9, 3.711292678045878*^9}, {
   3.71129276355096*^9, 3.711292763802294*^9}, {3.711293207901119*^9, 
   3.71129320906818*^9}, {3.711293287131628*^9, 3.7112932876820307`*^9}, {
   3.7112934171685877`*^9, 3.711293426405362*^9}, 3.711293789729445*^9, {
   3.71129460074748*^9, 3.711294605689701*^9}, {3.7112980915888767`*^9, 
   3.711298092401373*^9}, {3.7112987856706038`*^9, 3.711298812075926*^9}, {
   3.7112988514846277`*^9, 3.711298851698675*^9}, {3.711299895701317*^9, 
   3.7112998963628693`*^9}, {3.711300519826535*^9, 3.711300533672222*^9}, {
   3.711304231538226*^9, 3.7113042319292316`*^9}, {3.711307999629352*^9, 
   3.711308000888276*^9}, {3.7113084911031027`*^9, 3.711308493100642*^9}, {
   3.711308529170039*^9, 3.711308531481388*^9}, {3.7113087290080967`*^9, 
   3.711308729204269*^9}, {3.711308867157248*^9, 3.711308867358677*^9}, {
   3.7113089630439577`*^9, 3.7113089641693983`*^9}, {3.711309038946838*^9, 
   3.7113090678013487`*^9}, {3.711309177948999*^9, 3.711309178362568*^9}, {
   3.7113097865335627`*^9, 3.7113097890333233`*^9}, {3.7113100419606237`*^9, 
   3.711310042457862*^9}, {3.711310092203527*^9, 3.711310093096875*^9}, 
   3.711310181816989*^9, {3.711310327181752*^9, 3.711310327394072*^9}, {
   3.7113103766532383`*^9, 3.7113103799071836`*^9}, {3.711310417298316*^9, 
   3.711310434777657*^9}, 3.711310506616356*^9, {3.7113105536470757`*^9, 
   3.711310554167695*^9}, {3.711310585057631*^9, 3.711310588495253*^9}, {
   3.711310825653245*^9, 3.711310826013823*^9}, {3.711311285467628*^9, 
   3.7113112859453583`*^9}, {3.711311462983601*^9, 3.7113114637044897`*^9}, 
   3.711312244518797*^9, {3.711312460108438*^9, 3.7113124637869873`*^9}, {
   3.7113130033283653`*^9, 3.7113130044849977`*^9}, {3.711313143079981*^9, 
   3.711313143475904*^9}, {3.711313373355517*^9, 3.7113133864348087`*^9}, {
   3.711313454791974*^9, 3.71131345500844*^9}, {3.7113137128308973`*^9, 
   3.7113137145097*^9}, {3.7113137702625103`*^9, 3.711313773299375*^9}, {
   3.711313830924246*^9, 3.71131383115492*^9}, {3.711313983423671*^9, 
   3.711313987372488*^9}, 3.711314129646811*^9, 3.7113142176728983`*^9, {
   3.711314701350072*^9, 3.711314703050438*^9}, {3.711315826565199*^9, 
   3.7113158290436993`*^9}, {3.71132399893818*^9, 3.71132400155129*^9}, {
   3.711324512824753*^9, 3.711324513271942*^9}, {3.71132561388034*^9, 
   3.711325614301091*^9}, {3.7113258136566477`*^9, 3.711325814021549*^9}, {
   3.7113280633249397`*^9, 3.7113280672327967`*^9}, 3.711328829003519*^9, {
   3.711329729425281*^9, 3.7113297320218353`*^9}, {3.7113307662798357`*^9, 
   3.711330766604393*^9}, 3.711330901717492*^9, 3.7113309566639233`*^9, {
   3.71137081761884*^9, 3.711370842462306*^9}, 3.711371591972991*^9, {
   3.7113717821017847`*^9, 3.7113717825610237`*^9}, {3.711371845505424*^9, 
   3.711371847837965*^9}, {3.711371954091013*^9, 3.711371992234304*^9}, {
   3.71137542553109*^9, 3.711375426439866*^9}, {3.711375544952793*^9, 
   3.711375554528768*^9}, 3.711378053014304*^9, {3.7113786305279913`*^9, 
   3.711378631298892*^9}, {3.711378764815662*^9, 3.71137876562005*^9}, {
   3.7113790460317173`*^9, 3.7113790500192013`*^9}, {3.7113792103336887`*^9, 
   3.711379210579523*^9}, {3.711379394772397*^9, 3.7113793961058273`*^9}, 
   3.71137973664112*^9, {3.711379799369574*^9, 3.711379802653809*^9}, {
   3.711379918900567*^9, 3.711379922569407*^9}, {3.711380109247238*^9, 
   3.7113801098795853`*^9}, 3.7113802626565027`*^9, {3.71138064238828*^9, 
   3.711380727389267*^9}, {3.711381937244587*^9, 3.711381939709526*^9}, {
   3.711384633018312*^9, 3.71138463338439*^9}, 3.711385193420412*^9, 
   3.711386113158454*^9, {3.7113864736311502`*^9, 3.711386487765305*^9}, {
   3.711398144018591*^9, 3.7113981776369743`*^9}, {3.711398385184544*^9, 
   3.711398385510475*^9}, {3.711398708620615*^9, 3.711398741143157*^9}, {
   3.711398806819248*^9, 3.711398827210525*^9}, {3.711398873333246*^9, 
   3.711398873626423*^9}, 3.71139897591294*^9, {3.711399022032611*^9, 
   3.7113990222820177`*^9}, {3.711399132070181*^9, 3.711399154042219*^9}, {
   3.711407710986003*^9, 3.71140771134277*^9}, 3.711407747092461*^9, {
   3.71140791969051*^9, 3.711407920134984*^9}, {3.7114080015887527`*^9, 
   3.7114080338303967`*^9}, {3.711408111798316*^9, 3.711408112098826*^9}, {
   3.711408175494323*^9, 3.711408184535254*^9}, {3.711408618792796*^9, 
   3.711408621526805*^9}, {3.711408694788294*^9, 3.71140869517365*^9}, {
   3.711408741529208*^9, 3.711408745436688*^9}, {3.711408811547966*^9, 
   3.711408811939332*^9}, {3.711409122929873*^9, 3.711409164841881*^9}, {
   3.711409261896205*^9, 3.711409263845241*^9}, {3.711409295095829*^9, 
   3.7114092954442387`*^9}, 3.711409338873378*^9, {3.7114093947915583`*^9, 
   3.711409397381022*^9}, {3.711409621589284*^9, 3.711409643838863*^9}, {
   3.711409713704268*^9, 3.711409715964753*^9}, {3.711409778852434*^9, 
   3.711409785946884*^9}, {3.711409843763567*^9, 3.711409846095592*^9}, {
   3.7114099416384172`*^9, 3.711409947211342*^9}, {3.7114100600858717`*^9, 
   3.711410060465899*^9}, {3.711410188056182*^9, 3.711410213201708*^9}, {
   3.7114104384614887`*^9, 3.711410468894991*^9}, {3.711410507463511*^9, 
   3.7114105077250767`*^9}, {3.711410588285632*^9, 3.711410589202158*^9}, 
   3.7114106881129932`*^9, {3.711410721711372*^9, 3.71141072234025*^9}, {
   3.711410791178371*^9, 3.711410791445715*^9}, {3.711410838489031*^9, 
   3.7114108390451117`*^9}, {3.711410898637616*^9, 3.711410924255025*^9}, {
   3.711410966687449*^9, 3.711410969182692*^9}, {3.711411234258314*^9, 
   3.711411236399558*^9}, {3.7114112820768967`*^9, 3.711411282554751*^9}, {
   3.711411338817711*^9, 3.711411341182933*^9}, 3.711411379679296*^9, {
   3.711411446378172*^9, 3.711411446649091*^9}, {3.711411482275783*^9, 
   3.7114114854493732`*^9}, {3.711411617794608*^9, 3.711411621089946*^9}, {
   3.711411651720701*^9, 3.711411697886918*^9}, {3.711411769608323*^9, 
   3.71141182288667*^9}, {3.711411863646553*^9, 3.711411865293338*^9}, {
   3.711411908536153*^9, 3.711411934412209*^9}, {3.711412172674938*^9, 
   3.71141217534131*^9}, 3.711412207934819*^9, {3.711412240665412*^9, 
   3.7114122414374943`*^9}, {3.711412274070548*^9, 3.71141230185553*^9}, {
   3.71141237558689*^9, 3.71141237607241*^9}, 3.711412411312725*^9, {
   3.71141246680615*^9, 3.711412488313489*^9}, {3.711412543124181*^9, 
   3.7114125435839767`*^9}, {3.71141262287605*^9, 3.711412623148567*^9}, {
   3.7114126869592257`*^9, 3.71141268975423*^9}, {3.7114127922437973`*^9, 
   3.711412792500186*^9}, {3.711412888761992*^9, 3.711412890181776*^9}, 
   3.711412955617976*^9, {3.711413049501411*^9, 3.711413051279593*^9}, {
   3.711413117737557*^9, 3.71141312280621*^9}, {3.711413225410487*^9, 
   3.71141322755089*^9}, {3.7114132902633266`*^9, 3.711413290722807*^9}, {
   3.711413393470199*^9, 3.711413393731975*^9}, {3.711413922817367*^9, 
   3.711413936413745*^9}, {3.711414147951189*^9, 3.711414150939027*^9}, 
   3.711414292283025*^9, {3.7114143351246767`*^9, 3.7114143353994303`*^9}, {
   3.71141442033501*^9, 3.7114144238921022`*^9}, {3.711414551207163*^9, 
   3.711414555035046*^9}, {3.711414656694021*^9, 3.711414657103941*^9}, {
   3.711414757058268*^9, 3.7114147574140987`*^9}, {3.711414878439385*^9, 
   3.711414878795905*^9}, {3.711415051755974*^9, 3.711415052639097*^9}, 
   3.711415180378003*^9, {3.711415278569128*^9, 3.711415280812698*^9}, {
   3.711415533542264*^9, 3.7114155338182993`*^9}, {3.7114156872223883`*^9, 
   3.711415690027651*^9}, {3.711415896418247*^9, 3.7114159034054613`*^9}, {
   3.71141602948914*^9, 3.711416036527413*^9}, {3.7114161539902554`*^9, 
   3.711416156201383*^9}, 3.711416192554263*^9, {3.71141634138904*^9, 
   3.7114163420810423`*^9}, {3.711416372332553*^9, 3.711416373320088*^9}, {
   3.711416404595916*^9, 3.71141640564797*^9}, {3.7114164725650587`*^9, 
   3.7114164740010033`*^9}, {3.711416584328105*^9, 3.711416585037137*^9}, {
   3.71141665437535*^9, 3.711416654948597*^9}, {3.7114166866338797`*^9, 
   3.711416690426735*^9}, {3.7114168546270447`*^9, 3.711416876659169*^9}, {
   3.711417015394409*^9, 3.711417017774127*^9}, {3.711417056008198*^9, 
   3.711417056363852*^9}, 3.711417239694442*^9, {3.7114173960250998`*^9, 
   3.711417397989861*^9}, {3.711417527377899*^9, 3.711417527852751*^9}, {
   3.711417737775711*^9, 3.711417739572214*^9}, {3.711417842383449*^9, 
   3.7114178430219507`*^9}, {3.7114178753475227`*^9, 3.711417876455027*^9}, {
   3.7114179954812813`*^9, 3.711417996486865*^9}, {3.711418117059292*^9, 
   3.711418122209579*^9}, {3.7114182273616447`*^9, 3.711418229846774*^9}, {
   3.711418362732519*^9, 3.711418363009886*^9}, {3.7114184758661118`*^9, 
   3.711418476518135*^9}, {3.711418624507099*^9, 3.7114186260157633`*^9}, {
   3.71141873492834*^9, 3.7114187351931963`*^9}, {3.711419130679532*^9, 
   3.711419131052658*^9}, {3.711419337412463*^9, 3.711419338880492*^9}, {
   3.7114195578591537`*^9, 3.711419558567834*^9}, {3.7114196970472918`*^9, 
   3.711419697618574*^9}, {3.711419892251708*^9, 3.711419893127975*^9}, {
   3.711420371965567*^9, 3.71142038147405*^9}, {3.711420525938178*^9, 
   3.711420533429265*^9}, {3.711420607908579*^9, 3.711420610895546*^9}, {
   3.711420675025177*^9, 3.711420709988077*^9}, {3.71142077352878*^9, 
   3.71142077377208*^9}, 3.71142080871218*^9, {3.7114208846861763`*^9, 
   3.71142091635046*^9}, 3.7114210097097597`*^9, 3.711421063612838*^9, {
   3.711421093665435*^9, 3.711421093820867*^9}, {3.711421161037942*^9, 
   3.711421161626527*^9}, {3.7114213471771183`*^9, 3.7114213475255947`*^9}, {
   3.711421383532711*^9, 3.7114213935708447`*^9}, {3.711421530052579*^9, 
   3.711421537455243*^9}, {3.7114215910570507`*^9, 3.7114215942287292`*^9}, 
   3.7114216618124228`*^9, {3.71142181989137*^9, 3.711421885760703*^9}, {
   3.711422010007168*^9, 3.71142201186705*^9}, {3.711422137344078*^9, 
   3.7114222045103197`*^9}, 3.711422285066058*^9, {3.711422475039082*^9, 
   3.711422478026389*^9}, {3.711422543378902*^9, 3.711422543869845*^9}, {
   3.711422675773696*^9, 3.7114226788814373`*^9}, {3.7114227566995296`*^9, 
   3.711422761751033*^9}, {3.711422820462693*^9, 3.711422823802032*^9}, 
   3.711422877005834*^9, {3.711422919663534*^9, 3.711422920388001*^9}, 
   3.7114230052240973`*^9, 3.711423045941119*^9, {3.711423091008353*^9, 
   3.711423093403586*^9}, {3.711423148193015*^9, 3.711423152245476*^9}, 
   3.711423215910614*^9, {3.7114232856344023`*^9, 3.711423286845834*^9}, 
   3.711423358615406*^9, {3.7114235056196947`*^9, 3.711423506511271*^9}, {
   3.711423636317124*^9, 3.711423636584201*^9}, {3.71142372360198*^9, 
   3.71142372562249*^9}, {3.7114238754886436`*^9, 3.7114238815877333`*^9}, 
   3.711423933427939*^9, {3.711424023213685*^9, 3.711424054285508*^9}, 
   3.711424119788389*^9, 3.711424168047881*^9, 3.71142420691538*^9, {
   3.7114242607770967`*^9, 3.711424276019607*^9}, {3.711424325772192*^9, 
   3.7114243261115313`*^9}, {3.711424359448072*^9, 3.711424372959793*^9}, {
   3.7114244175073*^9, 3.711424467599567*^9}, {3.711424502701227*^9, 
   3.711424530626745*^9}, {3.711424612215816*^9, 3.71142464144514*^9}, {
   3.711424698807769*^9, 3.711424700954832*^9}, {3.711424854228814*^9, 
   3.711424854891426*^9}, {3.7114249119417152`*^9, 3.711424912681857*^9}, {
   3.7114249998712387`*^9, 3.7114250033780003`*^9}, {3.711425121029755*^9, 
   3.711425121448667*^9}, 3.711425160235848*^9, {3.711425192694869*^9, 
   3.711425215377371*^9}, {3.7114253883970747`*^9, 3.711425391177516*^9}, 
   3.711425441145338*^9, 3.7114255373318033`*^9, {3.711425573459313*^9, 
   3.711425613687018*^9}, {3.711425769029072*^9, 3.711425769192257*^9}, {
   3.711425929438857*^9, 3.7114259326356363`*^9}, {3.711425979160293*^9, 
   3.7114259810605497`*^9}, {3.7114262752690773`*^9, 3.71142627792027*^9}, {
   3.7114263368696012`*^9, 3.711426337169788*^9}, {3.7114264851361103`*^9, 
   3.711426489947166*^9}, 3.711426605850388*^9, 3.711426645495735*^9, {
   3.711426872361054*^9, 3.7114268731279993`*^9}, {3.7114273428056717`*^9, 
   3.711427345456517*^9}, {3.711427584480253*^9, 3.711427584731739*^9}, {
   3.711427941062229*^9, 3.711427948466399*^9}, {3.711428129366403*^9, 
   3.711428133538875*^9}, 3.7114281675303297`*^9, {3.711428231494424*^9, 
   3.7114282579578648`*^9}, {3.711428388067576*^9, 3.7114283938960857`*^9}, 
   3.711428535118908*^9, {3.711428688691743*^9, 3.711428690072097*^9}, 
   3.711428736284395*^9, {3.711428831257491*^9, 3.711428837301907*^9}, {
   3.7114289085878143`*^9, 3.711428910439954*^9}, {3.711429012369196*^9, 
   3.711429084978043*^9}, {3.711429157166798*^9, 3.711429159609561*^9}, {
   3.711429251118108*^9, 3.711429251377349*^9}, {3.711429324214828*^9, 
   3.7114293251144*^9}, 3.711429816023016*^9, 3.711429878879711*^9, {
   3.7114299764255877`*^9, 3.7114299767407827`*^9}, 3.7114301071742783`*^9, {
   3.711430139827537*^9, 3.711430140319738*^9}, {3.7114616649750547`*^9, 
   3.7114616667543697`*^9}, 3.711462160915547*^9, 3.7114622557044563`*^9, {
   3.711462601517709*^9, 3.711462603440785*^9}, {3.7114629819402227`*^9, 
   3.711462982263297*^9}, {3.7114635676875257`*^9, 3.7114635687467737`*^9}, {
   3.711464527535853*^9, 3.7114645463433533`*^9}, 3.711464998494162*^9, {
   3.711465169236498*^9, 3.711465194414661*^9}, 3.711465410972878*^9, {
   3.7114655960398483`*^9, 3.711465596946813*^9}, {3.7114656513414087`*^9, 
   3.711465651784734*^9}, {3.711465756570907*^9, 3.711465758813826*^9}, {
   3.7114658191785603`*^9, 3.711465821070897*^9}, 3.711465953503104*^9, {
   3.711466021568584*^9, 3.711466022404554*^9}, {3.71146608650561*^9, 
   3.7114660866140223`*^9}, {3.711466132542287*^9, 3.711466177443696*^9}, {
   3.71146624306472*^9, 3.7114662963595037`*^9}, {3.711466370569241*^9, 
   3.711466370941729*^9}, 3.7114664132271547`*^9, {3.71146644456917*^9, 
   3.7114664451001997`*^9}, {3.7114665964947653`*^9, 3.7114666000427837`*^9}, 
   3.71146671090421*^9, {3.711466797139263*^9, 3.711466797918342*^9}, {
   3.711466861144785*^9, 3.711466861531975*^9}, 
   3.711466908186633*^9},ExpressionUUID->"733f527f-8916-4997-983c-\
e50ba980d2dd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Training Progress\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12,
          FontWeight->Bold],
         FrameMargins->{{10, 10}, {-5, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.93119, 0.93119, 0.93119],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        FrameBox[
         DynamicBox[ToBoxes[
           Grid[
            Apply[If[# === None, {#2, SpanFromLeft}, {
               NeuralNetworks`Private`NetTrain`keystyle[#], #2}]& , {
             None :> Item[
                ProgressIndicator[
                NeuralNetworks`Private`NetTrain`$progressFraction], Alignment -> 
                Center], "progress" :> Row[{
                 Round[NeuralNetworks`Private`NetTrain`$progressFraction 100],
                  "%"}], "round" :> 
              Row[{NeuralNetworks`Private`NetTrain`$round, " / ", 
                 NeuralNetworks`Private`NetTrain`maxTrainingRounds}], 
              "inputs/second" :> 
              Round[NeuralNetworks`Private`NetTrain`$batchRate 
                NeuralNetworks`Private`NetTrain`batchSize], "time elapsed" :> 
              GeneralUtilities`TimeString[
               NeuralNetworks`Private`NetTrain`$timeElapsed], 
              "time remaining" :> 
              If[NeuralNetworks`Private`NetTrain`$timeElapsed < 0.1, "", 
                GeneralUtilities`TimeString[
                NeuralNetworks`Private`NetTrain`$timeRemaining]], 
              "batch size" -> 4700, "batch loss" :> 
              ScientificForm[NeuralNetworks`Private`NetTrain`$batchLoss, 3], 
              "round loss" :> 
              ScientificForm[NeuralNetworks`Private`NetTrain`$roundLoss, 3], 
              "validation loss" :> 
              ScientificForm[
               NeuralNetworks`Private`NetTrain`$validationLoss, 3], None :> 
              RawBoxes[
               NeuralNetworks`Private`NetTrain`$lastLossEvolutionPlot], None -> 
              Button[
               "Stop", 
                NeuralNetworks`Private`NetTrain`manualStop = (
                 NeuralNetworks`Private`NetTrain`stop = True), Appearance :> 
                FEPrivate`FrontEndResource[
                 "FEExpressions", "GrayButtonNinePatchAppearance"], 
                BaseStyle -> {FontSize -> 12}, ImageSize -> 87]}, {1}], 
            Dividers -> {{False, {
                Opacity[0.15]}, False}, {}}, ColumnWidths -> {Automatic, 15}, 
            ColumnAlignments -> {Right, Left}, ColumnSpacings -> {1.6, 2.5}, 
            RowSpacings -> 1.5, RowMinHeight -> 1.2], StandardForm],
          ImageSizeCache->{251., {169.400390625, 175.599609375}},
          TrackedSymbols:>{},
          UpdateInterval->0.4],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->Left,
        BaseStyle->{
         FontWeight -> "Light", FontFamily -> ".SF NS Text", NumberMarks -> 
          False, ScriptBaselineShifts -> {0, 0.5}, ScriptMinSize -> 8, 
          ScriptSizeMultipliers -> 0.5},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9802, 0.9802, 0.9802],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "PrintTemporary",
 CellChangeTimes->{
  3.711466908785407*^9},ExpressionUUID->"0483a6e0-36c5-4264-b697-\
0640d5b1b9ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ann", "=", 
  RowBox[{
  "Import", "[", "\"\</Users/lambda/Documents/S2S/Results/ann_6h_v4.mx\>\"", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.71131250762066*^9, 3.71131251934753*^9}, {
   3.711417111440681*^9, 3.711417118670335*^9}, {3.711418023624291*^9, 
   3.7114180495858917`*^9}, {3.711418604588985*^9, 3.7114186082180862`*^9}, {
   3.711419858495288*^9, 3.711419858806857*^9}, {3.711421156221546*^9, 
   3.711421156771658*^9}, {3.711421357373021*^9, 3.7114213594993267`*^9}, {
   3.711421909998983*^9, 3.7114219105732393`*^9}, {3.711422785569363*^9, 
   3.711422785949809*^9}, 3.711423131461219*^9, 3.7114232204742317`*^9, 
   3.711423321529117*^9, {3.711462781773657*^9, 3.711462782088642*^9}, {
   3.7114635094209337`*^9, 3.711463509567752*^9}, {3.711466198073449*^9, 
   3.711466198316373*^9}, {3.711466829655727*^9, 
   3.711466829898609*^9}},ExpressionUUID->"35ab90a7-650f-4b25-9858-\
0b75c8d851f4"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 2, 2}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {2, 2}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {14, 15}, 
               "$OutputSize" -> {13, 14}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 14, 15}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 13, 14}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 13, 14}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 13, 14}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 13, 14}, NeuralNetworks`RealT]]], 
           "3" -> Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 1, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{1, 13, 14}, NeuralNetworks`RealT]], 
             "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 13, 14}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 13, 14}, NeuralNetworks`RealT]]], 
           "4" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 2, 2}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {2, 2}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {13, 14}, 
               "$OutputSize" -> {12, 13}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 13, 14}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 12, 13}, NeuralNetworks`RealT]]], 
           "5" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 12, 13}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 12, 13}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 12, 13}, NeuralNetworks`RealT]]], 
           "6" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {1, 1}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 1, "$InputSize" -> {12, 13}, 
               "$OutputSize" -> {11, 12}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 12, 13}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 11, 12}, NeuralNetworks`RealT]]], 
           "7" -> Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {132}, 
               "$InputSize" -> {1, 11, 12}], "Inputs" -> 
             Association[
              "Input" -> 
               NeuralNetworks`TensorT[{1, 11, 12}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT]]], "8" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 132, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT]], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT]]], "9" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{240, 132}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {240}, "$OutputSize" -> 240, "$InputSize" -> 
               132, "$InputDimensions" -> {132}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{132}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]]], "10" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {240}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]]], "11" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 240, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]]], "12" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{144, 240}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {144}, "$OutputSize" -> 144, "$InputSize" -> 
               240, "$InputDimensions" -> {240}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{240}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]]], "13" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {144}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]]], "14" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 144, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]]], "15" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{36, 144}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {36}, "$OutputSize" -> 36, "$InputSize" -> 
               144, "$InputDimensions" -> {144}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{144}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "12", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "13", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "14", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "15", "Outputs", "Output"]}, 
         "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{1, 14, 15}, 
             NeuralNetworks`RealT]], "Outputs" -> 
         Association[
          "Output" -> NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"14\"", "\"15\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"13\"", "\"14\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"13\"", "\"14\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"13\"", "\"14\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"12\"", "\"13\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"12\"", "\"13\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"11\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"132\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"132\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"240\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"240\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"240\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"144\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"144\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"14\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"144\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"15\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{270., {123.4169921875, 128.5830078125}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.711423321943787*^9, 3.7114282541704073`*^9, 3.711429149473431*^9, 
   3.711461530535565*^9, 3.711462782302286*^9, 3.711463509896676*^9, 
   3.711466198858098*^9, {3.711466274392214*^9, 3.7114662945982*^9}, 
   3.711466830247818*^9},ExpressionUUID->"f6efaf98-5d98-4d73-828d-\
4bb9b89003ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/lambda/Documents/S2S/Results/ann_6h_v4.mx\>\"", ",", "ann"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.711304216432527*^9, 3.711304223240691*^9}, {
  3.711412358307616*^9, 3.711412364126643*^9}, {3.711413137122637*^9, 
  3.711413137297721*^9}, {3.711415283670912*^9, 3.711415284083745*^9}, {
  3.711415682823868*^9, 3.7114156830058193`*^9}, {3.711417391769701*^9, 
  3.711417392133073*^9}, {3.711419113377501*^9, 3.711419113756631*^9}, {
  3.7114214883568907`*^9, 3.7114214921956997`*^9}, {3.7114249077585087`*^9, 
  3.7114249080654287`*^9}, {3.711426468599028*^9, 3.711426468787126*^9}, {
  3.711429811199668*^9, 3.711429811588284*^9}, {3.7114654972616377`*^9, 
  3.7114654975044317`*^9}, {3.711466582887698*^9, 
  3.711466584058577*^9}},ExpressionUUID->"9f61e134-a64e-4b40-85a3-\
f07fde37f98a"],

Cell[BoxData["\<\"/Users/lambda/Documents/S2S/Results/ann_6h_v4.mx\"\>"], \
"Output",
 CellChangeTimes->{3.7113042238349533`*^9, 3.7113073015565977`*^9, 
  3.7113074040724087`*^9, 3.711307924424477*^9, 3.711308709331195*^9, 
  3.711308819956131*^9, 3.711308937636896*^9, 3.711309024580412*^9, 
  3.7113091639566793`*^9, 3.7113097490323133`*^9, 3.711310281585071*^9, 
  3.7113311149802303`*^9, 3.711378761948316*^9, 3.711412366390147*^9, 
  3.7114124689464684`*^9, 3.711412618738226*^9, 3.711412684677927*^9, 
  3.711412782129236*^9, 3.7114131001206207`*^9, 3.711414537664817*^9, 
  3.711414653718959*^9, 3.7114147538867702`*^9, 3.711414891737607*^9, 
  3.711415284735938*^9, 3.7114155297246933`*^9, 3.71141568342619*^9, 
  3.711417392722755*^9, 3.711419114303564*^9, 3.711422648717939*^9, 
  3.711423501929781*^9, 3.711424908397797*^9, 3.711426469090033*^9, 
  3.711428373467299*^9, 3.711429812322042*^9, 3.711465497904619*^9, 
  3.711465648721529*^9, 
  3.711466584316703*^9},ExpressionUUID->"e46f6436-0b0c-460f-b427-\
5c162de98639"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"NSC", "[", 
   RowBox[{"simu_", ",", "obser_"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"simu", "-", "obser"}], ")"}], "^", "2"}], "]"}], "/", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"obser", "-", 
        RowBox[{"Mean", "[", "obser", "]"}]}], ")"}], "^", "2"}], 
     "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.71130750958813*^9, 
  3.7113076120641212`*^9}},ExpressionUUID->"c239dbe1-5077-4f88-8dd3-\
ffef264054d7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"simu", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"Precip", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "Precip", "]"}]}], "}"}]}], "]"}], ",", 
          "1"}], "]"}]}], ",", "mean", ",", "std"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"mean", "=", 
       RowBox[{"Mean", "[", "data", "]"}]}], ";", "\n", "\t", 
      RowBox[{"std", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Variance", "[", "data", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "*", "std"}], "+", "mean"}], "&"}], ",", 
        RowBox[{"ann", "@", "gph"}]}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"result", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Correlation", "[", 
     RowBox[{
      RowBox[{"simu", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"Length", "[", "precip", "]"}], "*", "0.7"}], "]"}], ";;", 
          RowBox[{"Length", "[", "precip", "]"}]}], ",", "i"}], "]"}], "]"}], 
      ",", 
      RowBox[{"precip", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"Length", "[", "precip", "]"}], "*", "0.7"}], "]"}], 
          ";;"}], ",", "i"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "36"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"Mean", "[", "result", "]"}], "\n", 
 RowBox[{"MinMax", "[", "result", "]"}]}], "Code",
 CellChangeTimes->{{3.711293121999989*^9, 3.7112931360375357`*^9}, 
   3.7112932406129303`*^9, {3.7112945421571207`*^9, 3.71129457327426*^9}, {
   3.711300426044677*^9, 3.711300427040164*^9}, {3.7113079506457644`*^9, 
   3.7113079555418377`*^9}, {3.711312644172949*^9, 3.711312644918146*^9}, {
   3.711312689423365*^9, 3.711312753907426*^9}, {3.7113128121636133`*^9, 
   3.71131284286689*^9}, {3.71137846113225*^9, 3.7113784660453444`*^9}, {
   3.711466772727861*^9, 
   3.711466779529196*^9}},ExpressionUUID->"c9d6911b-c88e-4f11-9200-\
1bf292759750"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7652678424442387`", ",", "0.7473616052626878`", ",", 
   "0.6767378754535199`", ",", "0.8018627844299556`", ",", 
   "0.8005967976622794`", ",", "0.77460397139545`", ",", 
   "0.7406434193427176`", ",", "0.7189666355530606`", ",", 
   "0.6468890310894723`", ",", "0.7404502596796986`", ",", 
   "0.6951475313386045`", ",", "0.5768091230844162`", ",", 
   "0.7754182089552593`", ",", "0.7436038054260775`", ",", 
   "0.5705837489786861`", ",", "0.774728985725042`", ",", 
   "0.7815336073535039`", ",", "0.674334237449582`", ",", 
   "0.7312481748824433`", ",", "0.7722185209224491`", ",", 
   "0.7576126928125616`", ",", "0.6602376376660491`", ",", 
   "0.7381226988361094`", ",", "0.772353149983459`", ",", 
   "0.7161484152481006`", ",", "0.684502306204429`", ",", 
   "0.7037066286197565`", ",", "0.6991975878273226`", ",", 
   "0.6507634443268561`", ",", "0.6423342484942322`", ",", 
   "0.6624560200431371`", ",", "0.5970646088563855`", ",", 
   "0.5838994912346033`", ",", "0.5691692821637583`", ",", 
   "0.46017177557214745`", ",", "0.4841717073417862`"}], "}"}]], "Output",
 CellChangeTimes->{{3.711293171539235*^9, 3.711293203293486*^9}, 
   3.711293276175598*^9, 3.7112933566310368`*^9, 3.711293907826952*^9, {
   3.711294519609975*^9, 3.711294578000835*^9}, 3.711297755300222*^9, 
   3.7112979732589893`*^9, 3.711298500408732*^9, 3.7112986993346577`*^9, {
   3.711299590530401*^9, 3.711299643846614*^9}, {3.711300418768949*^9, 
   3.7113004307237864`*^9}, 3.7113010340552063`*^9, 3.7113041834467077`*^9, 
   3.711304608775128*^9, 3.711307305973962*^9, 3.711307408581994*^9, {
   3.711307930282864*^9, 3.711307959011528*^9}, 3.711308309879549*^9, 
   3.711308714706912*^9, 3.711308824944512*^9, 3.7113089427109423`*^9, 
   3.711309029602694*^9, 3.7113091687622538`*^9, 3.7113097556868668`*^9, 
   3.7113102874915752`*^9, 3.7113107846853333`*^9, 3.711310905491667*^9, 
   3.711311220212977*^9, 3.711311422162695*^9, 3.711311805910591*^9, 
   3.71131268706194*^9, 3.7113127831009417`*^9, 3.711312839051169*^9, 
   3.711313109393773*^9, 3.711314574864661*^9, 3.71131488069464*^9, 
   3.711315613683518*^9, 3.711321977657733*^9, 3.711323986605033*^9, 
   3.711324800898489*^9, 3.7113250139129353`*^9, 3.711325368393051*^9, 
   3.711325775580285*^9, 3.711328821725402*^9, 3.711329719010042*^9, 
   3.711330755608059*^9, 3.711330853316777*^9, 3.711331059473321*^9, 
   3.7113311960146227`*^9, 3.711332030970542*^9, 3.71137155479571*^9, 
   3.7113754188784523`*^9, 3.7113780398643208`*^9, {3.7113784575953712`*^9, 
   3.711378470374466*^9}, 3.711378750745851*^9, 3.7113790180732193`*^9, 
   3.711379200584824*^9, 3.711379368057146*^9, 3.711379730211411*^9, 
   3.711380097733879*^9, 3.7113845997290993`*^9, 3.711385168184781*^9, 
   3.7113861065947857`*^9, 3.711386630504919*^9, 3.71138674574798*^9, 
   3.7113868418856373`*^9, 3.71139869896834*^9, 3.711406706577889*^9, 
   3.711408102982298*^9, 3.711408155658338*^9, 3.711408419451823*^9, 
   3.7114086697601843`*^9, 3.711409327066691*^9, 3.7114096762022533`*^9, 
   3.711409922271147*^9, 3.711410049509231*^9, 3.711410155834116*^9, 
   3.7114105776535*^9, 3.711410676149561*^9, 3.711410884580814*^9, 
   3.711412475432349*^9, 3.711412600240161*^9, 3.711412679818294*^9, 
   3.711412778520226*^9, 3.711412877534793*^9, 3.711413039265884*^9, 
   3.711413095720319*^9, 3.7114145441604853`*^9, 3.7114146488753366`*^9, 
   3.711414749653557*^9, 3.7114148865511513`*^9, 3.711415169925252*^9, 
   3.711415270672357*^9, 3.7114155242957773`*^9, 3.7114156766916847`*^9, 
   3.711415885397551*^9, 3.711417232638844*^9, 3.7114173842739353`*^9, 
   3.711417731059719*^9, 3.71141783696605*^9, 3.711418030727969*^9, 
   3.711418086892167*^9, {3.711418597339119*^9, 3.7114186160469913`*^9}, 
   3.711418727441073*^9, 3.7114191093859797`*^9, 3.711419331904656*^9, 
   3.7114195497473173`*^9, {3.711419855305512*^9, 3.711419865783354*^9}, 
   3.711420699281704*^9, 3.711421282220686*^9, 3.711421980982205*^9, 
   3.7114226553013697`*^9, 3.7114234972409363`*^9, 3.711424900514626*^9, 
   3.711425566688023*^9, 3.711426267818666*^9, 3.711426461621913*^9, 
   3.711427574749292*^9, 3.7114279268374147`*^9, 3.711428121745585*^9, 
   3.711428379282096*^9, 3.71142852749585*^9, 3.711428683544929*^9, 
   3.711428808520968*^9, 3.711429144611505*^9, 3.7114615256642647`*^9, 
   3.7114616444270077`*^9, 3.711461952945692*^9, {3.711463503662655*^9, 
   3.711463516984908*^9}, 3.7114645194921703`*^9, 3.711465503323372*^9, 
   3.711465589249749*^9, 3.7114656439906588`*^9, 3.7114660173129997`*^9, 
   3.7114662077289953`*^9, 3.71146657849618*^9, 3.7114667882920713`*^9, 
   3.711466837708231*^9},ExpressionUUID->"e6e0fb1e-8135-4a1e-994a-\
63cd4b359dff"],

Cell[BoxData["0.6914143850461065`"], "Output",
 CellChangeTimes->{{3.711293171539235*^9, 3.711293203293486*^9}, 
   3.711293276175598*^9, 3.7112933566310368`*^9, 3.711293907826952*^9, {
   3.711294519609975*^9, 3.711294578000835*^9}, 3.711297755300222*^9, 
   3.7112979732589893`*^9, 3.711298500408732*^9, 3.7112986993346577`*^9, {
   3.711299590530401*^9, 3.711299643846614*^9}, {3.711300418768949*^9, 
   3.7113004307237864`*^9}, 3.7113010340552063`*^9, 3.7113041834467077`*^9, 
   3.711304608775128*^9, 3.711307305973962*^9, 3.711307408581994*^9, {
   3.711307930282864*^9, 3.711307959011528*^9}, 3.711308309879549*^9, 
   3.711308714706912*^9, 3.711308824944512*^9, 3.7113089427109423`*^9, 
   3.711309029602694*^9, 3.7113091687622538`*^9, 3.7113097556868668`*^9, 
   3.7113102874915752`*^9, 3.7113107846853333`*^9, 3.711310905491667*^9, 
   3.711311220212977*^9, 3.711311422162695*^9, 3.711311805910591*^9, 
   3.71131268706194*^9, 3.7113127831009417`*^9, 3.711312839051169*^9, 
   3.711313109393773*^9, 3.711314574864661*^9, 3.71131488069464*^9, 
   3.711315613683518*^9, 3.711321977657733*^9, 3.711323986605033*^9, 
   3.711324800898489*^9, 3.7113250139129353`*^9, 3.711325368393051*^9, 
   3.711325775580285*^9, 3.711328821725402*^9, 3.711329719010042*^9, 
   3.711330755608059*^9, 3.711330853316777*^9, 3.711331059473321*^9, 
   3.7113311960146227`*^9, 3.711332030970542*^9, 3.71137155479571*^9, 
   3.7113754188784523`*^9, 3.7113780398643208`*^9, {3.7113784575953712`*^9, 
   3.711378470374466*^9}, 3.711378750745851*^9, 3.7113790180732193`*^9, 
   3.711379200584824*^9, 3.711379368057146*^9, 3.711379730211411*^9, 
   3.711380097733879*^9, 3.7113845997290993`*^9, 3.711385168184781*^9, 
   3.7113861065947857`*^9, 3.711386630504919*^9, 3.71138674574798*^9, 
   3.7113868418856373`*^9, 3.71139869896834*^9, 3.711406706577889*^9, 
   3.711408102982298*^9, 3.711408155658338*^9, 3.711408419451823*^9, 
   3.7114086697601843`*^9, 3.711409327066691*^9, 3.7114096762022533`*^9, 
   3.711409922271147*^9, 3.711410049509231*^9, 3.711410155834116*^9, 
   3.7114105776535*^9, 3.711410676149561*^9, 3.711410884580814*^9, 
   3.711412475432349*^9, 3.711412600240161*^9, 3.711412679818294*^9, 
   3.711412778520226*^9, 3.711412877534793*^9, 3.711413039265884*^9, 
   3.711413095720319*^9, 3.7114145441604853`*^9, 3.7114146488753366`*^9, 
   3.711414749653557*^9, 3.7114148865511513`*^9, 3.711415169925252*^9, 
   3.711415270672357*^9, 3.7114155242957773`*^9, 3.7114156766916847`*^9, 
   3.711415885397551*^9, 3.711417232638844*^9, 3.7114173842739353`*^9, 
   3.711417731059719*^9, 3.71141783696605*^9, 3.711418030727969*^9, 
   3.711418086892167*^9, {3.711418597339119*^9, 3.7114186160469913`*^9}, 
   3.711418727441073*^9, 3.7114191093859797`*^9, 3.711419331904656*^9, 
   3.7114195497473173`*^9, {3.711419855305512*^9, 3.711419865783354*^9}, 
   3.711420699281704*^9, 3.711421282220686*^9, 3.711421980982205*^9, 
   3.7114226553013697`*^9, 3.7114234972409363`*^9, 3.711424900514626*^9, 
   3.711425566688023*^9, 3.711426267818666*^9, 3.711426461621913*^9, 
   3.711427574749292*^9, 3.7114279268374147`*^9, 3.711428121745585*^9, 
   3.711428379282096*^9, 3.71142852749585*^9, 3.711428683544929*^9, 
   3.711428808520968*^9, 3.711429144611505*^9, 3.7114615256642647`*^9, 
   3.7114616444270077`*^9, 3.711461952945692*^9, {3.711463503662655*^9, 
   3.711463516984908*^9}, 3.7114645194921703`*^9, 3.711465503323372*^9, 
   3.711465589249749*^9, 3.7114656439906588`*^9, 3.7114660173129997`*^9, 
   3.7114662077289953`*^9, 3.71146657849618*^9, 3.7114667882920713`*^9, 
   3.711466837728745*^9},ExpressionUUID->"f6af54ad-8576-4481-b1a4-\
2db35a6542b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.46017177557214745`", ",", "0.8018627844299556`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.711293171539235*^9, 3.711293203293486*^9}, 
   3.711293276175598*^9, 3.7112933566310368`*^9, 3.711293907826952*^9, {
   3.711294519609975*^9, 3.711294578000835*^9}, 3.711297755300222*^9, 
   3.7112979732589893`*^9, 3.711298500408732*^9, 3.7112986993346577`*^9, {
   3.711299590530401*^9, 3.711299643846614*^9}, {3.711300418768949*^9, 
   3.7113004307237864`*^9}, 3.7113010340552063`*^9, 3.7113041834467077`*^9, 
   3.711304608775128*^9, 3.711307305973962*^9, 3.711307408581994*^9, {
   3.711307930282864*^9, 3.711307959011528*^9}, 3.711308309879549*^9, 
   3.711308714706912*^9, 3.711308824944512*^9, 3.7113089427109423`*^9, 
   3.711309029602694*^9, 3.7113091687622538`*^9, 3.7113097556868668`*^9, 
   3.7113102874915752`*^9, 3.7113107846853333`*^9, 3.711310905491667*^9, 
   3.711311220212977*^9, 3.711311422162695*^9, 3.711311805910591*^9, 
   3.71131268706194*^9, 3.7113127831009417`*^9, 3.711312839051169*^9, 
   3.711313109393773*^9, 3.711314574864661*^9, 3.71131488069464*^9, 
   3.711315613683518*^9, 3.711321977657733*^9, 3.711323986605033*^9, 
   3.711324800898489*^9, 3.7113250139129353`*^9, 3.711325368393051*^9, 
   3.711325775580285*^9, 3.711328821725402*^9, 3.711329719010042*^9, 
   3.711330755608059*^9, 3.711330853316777*^9, 3.711331059473321*^9, 
   3.7113311960146227`*^9, 3.711332030970542*^9, 3.71137155479571*^9, 
   3.7113754188784523`*^9, 3.7113780398643208`*^9, {3.7113784575953712`*^9, 
   3.711378470374466*^9}, 3.711378750745851*^9, 3.7113790180732193`*^9, 
   3.711379200584824*^9, 3.711379368057146*^9, 3.711379730211411*^9, 
   3.711380097733879*^9, 3.7113845997290993`*^9, 3.711385168184781*^9, 
   3.7113861065947857`*^9, 3.711386630504919*^9, 3.71138674574798*^9, 
   3.7113868418856373`*^9, 3.71139869896834*^9, 3.711406706577889*^9, 
   3.711408102982298*^9, 3.711408155658338*^9, 3.711408419451823*^9, 
   3.7114086697601843`*^9, 3.711409327066691*^9, 3.7114096762022533`*^9, 
   3.711409922271147*^9, 3.711410049509231*^9, 3.711410155834116*^9, 
   3.7114105776535*^9, 3.711410676149561*^9, 3.711410884580814*^9, 
   3.711412475432349*^9, 3.711412600240161*^9, 3.711412679818294*^9, 
   3.711412778520226*^9, 3.711412877534793*^9, 3.711413039265884*^9, 
   3.711413095720319*^9, 3.7114145441604853`*^9, 3.7114146488753366`*^9, 
   3.711414749653557*^9, 3.7114148865511513`*^9, 3.711415169925252*^9, 
   3.711415270672357*^9, 3.7114155242957773`*^9, 3.7114156766916847`*^9, 
   3.711415885397551*^9, 3.711417232638844*^9, 3.7114173842739353`*^9, 
   3.711417731059719*^9, 3.71141783696605*^9, 3.711418030727969*^9, 
   3.711418086892167*^9, {3.711418597339119*^9, 3.7114186160469913`*^9}, 
   3.711418727441073*^9, 3.7114191093859797`*^9, 3.711419331904656*^9, 
   3.7114195497473173`*^9, {3.711419855305512*^9, 3.711419865783354*^9}, 
   3.711420699281704*^9, 3.711421282220686*^9, 3.711421980982205*^9, 
   3.7114226553013697`*^9, 3.7114234972409363`*^9, 3.711424900514626*^9, 
   3.711425566688023*^9, 3.711426267818666*^9, 3.711426461621913*^9, 
   3.711427574749292*^9, 3.7114279268374147`*^9, 3.711428121745585*^9, 
   3.711428379282096*^9, 3.71142852749585*^9, 3.711428683544929*^9, 
   3.711428808520968*^9, 3.711429144611505*^9, 3.7114615256642647`*^9, 
   3.7114616444270077`*^9, 3.711461952945692*^9, {3.711463503662655*^9, 
   3.711463516984908*^9}, 3.7114645194921703`*^9, 3.711465503323372*^9, 
   3.711465589249749*^9, 3.7114656439906588`*^9, 3.7114660173129997`*^9, 
   3.7114662077289953`*^9, 3.71146657849618*^9, 3.7114667882920713`*^9, 
   3.711466837749096*^9},ExpressionUUID->"f878c64c-f171-48ef-b5b6-\
db7964ee3240"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"simu", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"Precip", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "Precip", "]"}]}], "}"}]}], "]"}], ",", 
          "1"}], "]"}]}], ",", "mean", ",", "std"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"mean", "=", 
       RowBox[{"Mean", "[", "data", "]"}]}], ";", "\n", "\t", 
      RowBox[{"std", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Variance", "[", "data", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "*", "std"}], "+", "mean"}], "&"}], ",", 
        RowBox[{"ann", "@", "gph"}]}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"result", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"precip", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Precip", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "Precip", "]"}]}], "}"}]}], "]"}], ",", 
        "1"}], "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"NSC", "[", 
       RowBox[{
        RowBox[{"simu", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", 
            RowBox[{"Length", "[", "precip", "]"}]}], ",", "i"}], "]"}], 
         "]"}], ",", 
        RowBox[{"precip", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "i"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "36"}], "}"}]}], "]"}]}], "]"}]}], "\n", 
 RowBox[{"Mean", "[", "result", "]"}]}], "Code",
 CellChangeTimes->{{3.711300429538576*^9, 3.7113004315688047`*^9}, {
  3.711307582653401*^9, 3.7113075875778*^9}, {3.711308318048077*^9, 
  3.711308321165256*^9}, {3.711312583889791*^9, 3.711312634497072*^9}, {
  3.7113128511031218`*^9, 3.711312869553441*^9}, {3.711312905482101*^9, 
  3.711312905956132*^9}, {3.711312961302063*^9, 
  3.711312975364496*^9}},ExpressionUUID->"85e74be5-8fab-4eeb-bdb4-\
e5d60bac3197"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.6341369836616968`"}], ",", 
   RowBox[{"-", "0.6021122995222878`"}], ",", 
   RowBox[{"-", "0.492456124439802`"}], ",", 
   RowBox[{"-", "0.6890445612127571`"}], ",", 
   RowBox[{"-", "0.6912941039138645`"}], ",", 
   RowBox[{"-", "0.6358304098212402`"}], ",", 
   RowBox[{"-", "0.6261674899056209`"}], ",", 
   RowBox[{"-", "0.6118862235850184`"}], ",", 
   RowBox[{"-", "0.49616442892420487`"}], ",", 
   RowBox[{"-", "0.63845875072218`"}], ",", 
   RowBox[{"-", "0.6142050931788583`"}], ",", 
   RowBox[{"-", "0.4390142164462374`"}], ",", 
   RowBox[{"-", "0.6988451176923778`"}], ",", 
   RowBox[{"-", "0.6894149747550387`"}], ",", 
   RowBox[{"-", "0.4416031923920587`"}], ",", 
   RowBox[{"-", "0.7241683458913448`"}], ",", 
   RowBox[{"-", "0.7650490465331228`"}], ",", 
   RowBox[{"-", "0.6101180138985518`"}], ",", 
   RowBox[{"-", "0.7380484076748128`"}], ",", 
   RowBox[{"-", "0.809395551326316`"}], ",", 
   RowBox[{"-", "0.7682511882255483`"}], ",", 
   RowBox[{"-", "0.7120874118089431`"}], ",", 
   RowBox[{"-", "0.7978920274435177`"}], ",", 
   RowBox[{"-", "0.8072016293902917`"}], ",", 
   RowBox[{"-", "0.7495469921413713`"}], ",", 
   RowBox[{"-", "0.7576849052053714`"}], ",", 
   RowBox[{"-", "0.8004435760846915`"}], ",", 
   RowBox[{"-", "0.8016527894237087`"}], ",", 
   RowBox[{"-", "0.691898177659233`"}], ",", 
   RowBox[{"-", "0.7826069891988472`"}], ",", 
   RowBox[{"-", "0.7989267190042371`"}], ",", 
   RowBox[{"-", "0.6728670399638359`"}], ",", 
   RowBox[{"-", "0.554818614156005`"}], ",", 
   RowBox[{"-", "0.7001598775754074`"}], ",", 
   RowBox[{"-", "0.774617684456447`"}], ",", 
   RowBox[{"-", "0.6121987315659418`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.711300432068042*^9, 3.711301037339093*^9, 3.7113041902528067`*^9, 
   3.71130463248428*^9, 3.711304696957116*^9, 3.711307308057868*^9, 
   3.711307411435651*^9, 3.7113075915171824`*^9, 3.711307627222106*^9, 
   3.71130793672943*^9, {3.711308315022376*^9, 3.711308324624322*^9}, 
   3.711308719774184*^9, 3.71130883083491*^9, 3.7113089486765003`*^9, 
   3.711309035073041*^9, 3.7113091741978903`*^9, 3.711309761551938*^9, 
   3.711310293405828*^9, 3.7113107894939404`*^9, 3.711310912325676*^9, 
   3.711311228758417*^9, 3.711311428632579*^9, 3.711311812567758*^9, {
   3.711312859995082*^9, 3.711312884140088*^9}, 3.7113129796545153`*^9, 
   3.711313115167077*^9, 3.7113145811693563`*^9, 3.7113148869599657`*^9, 
   3.711315620222477*^9, 3.711321983522592*^9, 3.711323992891693*^9, 
   3.7113248072851477`*^9, 3.7113250197995157`*^9, 3.711325200873404*^9, 
   3.711325376934142*^9, 3.711325782362751*^9, 3.711325878832756*^9, 
   3.7113308839585533`*^9, 
   3.7113790362858*^9},ExpressionUUID->"b2a5c4db-2ee4-4b90-9ce2-86fb0c4c6b81"],

Cell[BoxData[
 RowBox[{"-", "0.6786185469111331`"}]], "Output",
 CellChangeTimes->{
  3.711300432068042*^9, 3.711301037339093*^9, 3.7113041902528067`*^9, 
   3.71130463248428*^9, 3.711304696957116*^9, 3.711307308057868*^9, 
   3.711307411435651*^9, 3.7113075915171824`*^9, 3.711307627222106*^9, 
   3.71130793672943*^9, {3.711308315022376*^9, 3.711308324624322*^9}, 
   3.711308719774184*^9, 3.71130883083491*^9, 3.7113089486765003`*^9, 
   3.711309035073041*^9, 3.7113091741978903`*^9, 3.711309761551938*^9, 
   3.711310293405828*^9, 3.7113107894939404`*^9, 3.711310912325676*^9, 
   3.711311228758417*^9, 3.711311428632579*^9, 3.711311812567758*^9, {
   3.711312859995082*^9, 3.711312884140088*^9}, 3.7113129796545153`*^9, 
   3.711313115167077*^9, 3.7113145811693563`*^9, 3.7113148869599657`*^9, 
   3.711315620222477*^9, 3.711321983522592*^9, 3.711323992891693*^9, 
   3.7113248072851477`*^9, 3.7113250197995157`*^9, 3.711325200873404*^9, 
   3.711325376934142*^9, 3.711325782362751*^9, 3.711325878832756*^9, 
   3.7113308839585533`*^9, 
   3.711379036334396*^9},ExpressionUUID->"801f4f0a-9328-43f4-9285-\
c87751eb3c29"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Precip", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "Precip", "]"}]}], "}"}]}], "]"}], ",", 
       "1"}], "]"}]}], "}"}], ",", "\n", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"simu", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", 
            RowBox[{"Length", "[", "p", "]"}]}], ",", "3"}], "]"}], "]"}], 
        ",", 
        RowBox[{"p", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "3"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.711315650355728*^9, 3.7113156516433487`*^9}, 
   3.711325381253591*^9, {3.7113255716521797`*^9, 3.7113255773442373`*^9}, {
   3.711325914181953*^9, 
   3.71132593729422*^9}},ExpressionUUID->"481a1d54-7f0e-4c8a-9434-\
b127f33081be"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Whole Year & 1day", "Subchapter",
 CellChangeTimes->{{3.711326537082911*^9, 3.711326538882299*^9}, {
  3.7113868633875227`*^9, 
  3.711386882872636*^9}},ExpressionUUID->"2af4ce91-ac98-4a15-9812-\
d6da96fbc089"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReScale", "[", 
    RowBox[{"data_", ",", "times_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"i", ";;", 
         RowBox[{"i", "+", "times", "-", "1"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "data", "]"}], ",", "times"}], "}"}]}], "]"}]}],
   ";"}]], "Code",
 CellChangeTimes->{{3.711386951842773*^9, 
  3.7113870538276577`*^9}},ExpressionUUID->"91c31b48-7336-4ed5-9b4d-\
a22a6e5f0d10"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gph", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"ReScale", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "#", "}"}], "&"}], ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"GPH", ",", "1"}], "]"}]}], "]"}], ",", "4"}], "]"}]}], 
       ",", "mean", ",", "std"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"std", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Variance", "[", "data", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"mean", "=", 
       RowBox[{"Mean", "[", "data", "]"}]}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "-", "mean"}], ")"}], "/", "std"}], "&"}], ",", 
        "data"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"precip", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"ReScale", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"Precip", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "Precip", "]"}]}], "}"}]}], "]"}], ",",
             "1"}], "]"}], ",", "4"}], "]"}]}], ",", "mean", ",", "std"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"mean", "=", 
       RowBox[{"Mean", "[", "data", "]"}]}], ";", "\n", "\t", 
      RowBox[{"std", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Variance", "[", "data", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "-", "mean"}], ")"}], "/", "std"}], "&"}], ",", 
        "data"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{"Length", "[", "gph", "]"}], ",", 
     RowBox[{"Length", "[", "precip", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gph", ",", "precip"}], "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"RandomSample", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"gph", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "l"}], "]"}], "]"}], ",", 
        RowBox[{"precip", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "l"}], "]"}], "]"}]}], "}"}], "]"}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Dimensions", "[", "gph", "]"}], "\n", 
 RowBox[{"Dimensions", "[", "precip", "]"}]}], "Code",
 CellChangeTimes->{{3.711291344926475*^9, 3.711291350588716*^9}, {
  3.711291397195365*^9, 3.711291401666648*^9}, {3.711291680924217*^9, 
  3.7112917136450043`*^9}, {3.711291756140502*^9, 3.7112917729222593`*^9}, {
  3.71129269822692*^9, 3.711292704179179*^9}, {3.711293950951332*^9, 
  3.711294067337912*^9}, {3.7112946451446753`*^9, 3.71129470272654*^9}, {
  3.7113280451354847`*^9, 3.711328045958943*^9}, {3.711328103857849*^9, 
  3.7113281256741753`*^9}, {3.71138712463138*^9, 3.7113871385823393`*^9}, {
  3.7113932545699873`*^9, 3.711393260843464*^9}, {3.7113934024972677`*^9, 
  3.711393405952424*^9}},ExpressionUUID->"876756ca-b336-4de9-bc1c-\
120b9b044e6e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25378", ",", "1", ",", "14", ",", "15"}], "}"}]], "Output",
 CellChangeTimes->{3.711388281234514*^9, 3.7113885239199333`*^9, 
  3.71139339564992*^9, 
  3.711393615971436*^9},ExpressionUUID->"db92fac0-bf19-4eb3-b401-\
1d2853ba4d6f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25378", ",", "36"}], "}"}]], "Output",
 CellChangeTimes->{3.711388281234514*^9, 3.7113885239199333`*^9, 
  3.71139339564992*^9, 
  3.711393616021564*^9},ExpressionUUID->"f1c55fee-5ca0-45ad-9e57-\
1c2c2900b88d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CNN", "=", 
  RowBox[{"NetInitialize", "[", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t\t\t\t ", 
      RowBox[{
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"1", ",", " ", "3"}], "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"1", ",", " ", "3"}], "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t  ", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"1", ",", " ", "3"}], "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t  ", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", " ", "1"}], "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"FlattenLayer", "[", "]"}], ",", " ", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"DropoutLayer", "[", "0.2", "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       
       RowBox[{"BatchNormalizationLayer", "[", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", "120", ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", 
       RowBox[{"DropoutLayer", "[", "0.2", "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       
       RowBox[{"BatchNormalizationLayer", "[", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", "100", ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", "36", ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"BatchNormalizationLayer", "[", "]"}]}], "\n", "\t\t\t\t\t\t ",
       "}"}], ",", "  ", "\n", "\t\t\t\t\t", 
     RowBox[{"\"\<Input\>\"", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "14", ",", "15"}], "}"}]}], ",", "\n", "\t\t\t\t\t", 
     
     RowBox[{"\"\<Output\>\"", " ", "->", " ", 
      RowBox[{"{", "36", "}"}]}]}], "]"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.711291835207334*^9, 3.711291902539351*^9}, {
   3.7112925081343317`*^9, 3.711292533033194*^9}, {3.711297784373797*^9, 
   3.711297795658963*^9}, {3.711297980927434*^9, 3.711297984157221*^9}, {
   3.71129852047994*^9, 3.711298527413066*^9}, {3.7112987267855253`*^9, 
   3.7112987275905247`*^9}, {3.711298932649469*^9, 3.7112989340160713`*^9}, {
   3.711299028439501*^9, 3.711299028731526*^9}, {3.7112991167124643`*^9, 
   3.711299134771428*^9}, 3.711310819445112*^9, 3.711311444602668*^9, {
   3.711311820203637*^9, 3.711311829932809*^9}, 3.711313152324218*^9, {
   3.71131339404988*^9, 3.7113134268539667`*^9}, {3.711313535708776*^9, 
   3.71131357788139*^9}, {3.711313628826557*^9, 3.711313638863739*^9}, {
   3.711313707632298*^9, 3.7113137100133457`*^9}, {3.711322226622748*^9, 
   3.711322242834231*^9}, {3.7113708064250727`*^9, 3.711370813464374*^9}, {
   3.711379389636455*^9, 3.71137939132066*^9}, {3.711393717244156*^9, 
   3.711393719256879*^9}, {3.711396732907043*^9, 
   3.711396740078182*^9}},ExpressionUUID->"971fb6ec-deec-45a8-813a-\
6072a1efec16"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 3, 3}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {3, 3}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {14, 15}, 
               "$OutputSize" -> {12, 13}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 14, 15}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 12, 13}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 12, 13}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 12, 13}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 12, 13}, NeuralNetworks`RealT]]], 
           "3" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 3, 3}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {3, 3}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {12, 13}, 
               "$OutputSize" -> {10, 11}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 12, 13}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 10, 11}, NeuralNetworks`RealT]]], 
           "4" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 10, 11}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 10, 11}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 10, 11}, NeuralNetworks`RealT]]], 
           "5" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 3, 3}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {3, 3}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {10, 11}, 
               "$OutputSize" -> {8, 9}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 10, 11}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 8, 9}, NeuralNetworks`RealT]]], "6" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 8, 9}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 8, 9}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 8, 9}, NeuralNetworks`RealT]]], "7" -> 
           Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {1, 1}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 1, "$InputSize" -> {8, 9}, 
               "$OutputSize" -> {7, 8}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 8, 9}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 7, 8}, NeuralNetworks`RealT]]], "8" -> 
           Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {56}, 
               "$InputSize" -> {1, 7, 8}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 7, 8}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]]], "9" -> 
           Association[
            "Type" -> "Dropout", "Arrays" -> Association[], "Parameters" -> 
             Association["DropoutProbability" -> 0.2], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]]], "10" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 56, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]]], "11" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{120, 56}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {120}, "$OutputSize" -> 120, "$InputSize" -> 
               56, "$InputDimensions" -> {56}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], "12" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {120}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], "13" -> 
           Association[
            "Type" -> "Dropout", "Arrays" -> Association[], "Parameters" -> 
             Association["DropoutProbability" -> 0.2], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], "14" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 120, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], "15" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{100, 120}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {100}, "$OutputSize" -> 100, "$InputSize" -> 
               120, "$InputDimensions" -> {120}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]], "16" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {100}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]], "17" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{36, 100}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {36}, "$OutputSize" -> 36, "$InputSize" -> 
               100, "$InputDimensions" -> {100}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], "18" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 36, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "12", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "13", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "14", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "15", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "16", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "17", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "18", "Outputs", "Output"]}, 
         "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{1, 14, 15}, 
             NeuralNetworks`RealT]], "Outputs" -> 
         Association[
          "Output" -> NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"14\"", "\"15\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"12\"", "\"13\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"12\"", "\"13\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"10\"", "\"11\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"10\"", "\"11\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"8\"", "\"9\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"8\"", "\"9\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"7\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"56\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"56\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"56\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"14\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"15\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"16\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"17\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"18\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{270., {145.9169921875, 151.0830078125}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{{3.711292523109174*^9, 3.7112925335839777`*^9}, 
   3.711292731685186*^9, 3.7112940822775*^9, 3.7112947222081003`*^9, 
   3.711297796250732*^9, 3.7112979847033377`*^9, {3.711298528067678*^9, 
   3.711298535789217*^9}, 3.711298727942622*^9, 3.711298938498961*^9, 
   3.711299029249032*^9, 3.711299135229631*^9, 3.711301732014203*^9, 
   3.711310820756989*^9, 3.7113109925783367`*^9, 3.7113114550727386`*^9, 
   3.711311830470886*^9, 3.711313153302457*^9, {3.711313404621374*^9, 
   3.7113134277075577`*^9}, 3.7113135784672613`*^9, 3.7113136394660883`*^9, 
   3.7113137105390587`*^9, 3.711315866422512*^9, 3.711322244870166*^9, 
   3.7113252989235888`*^9, 3.711328134405864*^9, 3.711370813944412*^9, 
   3.711371580836411*^9, 3.7113793917305403`*^9, {3.711393711411718*^9, 
   3.7113937206888723`*^9}, 
   3.7113967405316963`*^9},ExpressionUUID->"1caeb5bd-f822-464b-a5aa-\
35ae15412880"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ann", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ptraining", "=", 
      RowBox[{"Floor", "[", 
       RowBox[{
        RowBox[{"Length", "[", "precip", "]"}], "*", "0.7"}], "]"}]}], "}"}], 
    ",", "\n", "\t", 
    RowBox[{"NetTrain", "[", 
     RowBox[{"ann", ",", "\n", "\t", 
      RowBox[{
       RowBox[{"gph", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "ptraining"}], "]"}], "]"}], "\[Rule]", 
       RowBox[{"precip", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "ptraining"}], "]"}], "]"}]}], ",", "\n", "\t", 
      RowBox[{"ValidationSet", "\[Rule]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"gph", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
          RowBox[{"precip", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "ptraining", ",", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"Length", "[", "gph", "]"}], ",", 
             RowBox[{"Length", "[", "precip", "]"}]}], "]"}]}], "}"}]}], 
        "]"}]}], ",", "\n", "\t", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ADAM\>\"", 
         RowBox[{"(*", 
          RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "0.00001"}], "*)"}], ",", 
         RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", "0.08"}]}], "}"}]}], 
      ",", "\n", "\t", 
      RowBox[{"BatchSize", "\[Rule]", "2500"}], ",", "\n", "\t", 
      RowBox[{"MaxTrainingRounds", " ", "->", " ", "2000"}]}], "]"}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.711292603805943*^9, 3.711292678045878*^9}, {
   3.71129276355096*^9, 3.711292763802294*^9}, {3.711293207901119*^9, 
   3.71129320906818*^9}, {3.711293287131628*^9, 3.7112932876820307`*^9}, {
   3.7112934171685877`*^9, 3.711293426405362*^9}, 3.711293789729445*^9, {
   3.71129460074748*^9, 3.711294605689701*^9}, {3.7112980915888767`*^9, 
   3.711298092401373*^9}, {3.7112987856706038`*^9, 3.711298812075926*^9}, {
   3.7112988514846277`*^9, 3.711298851698675*^9}, {3.711299895701317*^9, 
   3.7112998963628693`*^9}, {3.711300519826535*^9, 3.711300533672222*^9}, {
   3.711304231538226*^9, 3.7113042319292316`*^9}, {3.711307999629352*^9, 
   3.711308000888276*^9}, {3.7113084911031027`*^9, 3.711308493100642*^9}, {
   3.711308529170039*^9, 3.711308531481388*^9}, {3.7113087290080967`*^9, 
   3.711308729204269*^9}, {3.711308867157248*^9, 3.711308867358677*^9}, {
   3.7113089630439577`*^9, 3.7113089641693983`*^9}, {3.711309038946838*^9, 
   3.7113090678013487`*^9}, {3.711309177948999*^9, 3.711309178362568*^9}, {
   3.7113097865335627`*^9, 3.7113097890333233`*^9}, {3.7113100419606237`*^9, 
   3.711310042457862*^9}, {3.711310092203527*^9, 3.711310093096875*^9}, 
   3.711310181816989*^9, {3.711310327181752*^9, 3.711310327394072*^9}, {
   3.7113103766532383`*^9, 3.7113103799071836`*^9}, {3.711310417298316*^9, 
   3.711310434777657*^9}, 3.711310506616356*^9, {3.7113105536470757`*^9, 
   3.711310554167695*^9}, {3.711310585057631*^9, 3.711310588495253*^9}, {
   3.711310825653245*^9, 3.711310826013823*^9}, {3.711311285467628*^9, 
   3.7113112859453583`*^9}, {3.711311462983601*^9, 3.7113114637044897`*^9}, 
   3.711312244518797*^9, {3.711312460108438*^9, 3.7113124637869873`*^9}, {
   3.7113130033283653`*^9, 3.7113130044849977`*^9}, {3.711313143079981*^9, 
   3.711313143475904*^9}, {3.711313373355517*^9, 3.7113133864348087`*^9}, {
   3.711313454791974*^9, 3.71131345500844*^9}, {3.7113137128308973`*^9, 
   3.7113137145097*^9}, {3.7113137702625103`*^9, 3.711313773299375*^9}, {
   3.711313830924246*^9, 3.71131383115492*^9}, {3.711313983423671*^9, 
   3.711313987372488*^9}, 3.711314129646811*^9, 3.7113142176728983`*^9, {
   3.711314701350072*^9, 3.711314703050438*^9}, {3.711315826565199*^9, 
   3.7113158290436993`*^9}, {3.71132399893818*^9, 3.71132400155129*^9}, {
   3.711324512824753*^9, 3.711324513271942*^9}, {3.71132561388034*^9, 
   3.711325614301091*^9}, {3.7113258136566477`*^9, 3.711325814021549*^9}, {
   3.7113280633249397`*^9, 3.7113280672327967`*^9}, 3.711328829003519*^9, {
   3.711329729425281*^9, 3.7113297320218353`*^9}, {3.7113307662798357`*^9, 
   3.711330766604393*^9}, 3.711330901717492*^9, 3.7113309566639233`*^9, {
   3.71137081761884*^9, 3.711370842462306*^9}, 3.711371591972991*^9, {
   3.7113717821017847`*^9, 3.7113717825610237`*^9}, {3.711371845505424*^9, 
   3.711371847837965*^9}, {3.711371954091013*^9, 3.711371992234304*^9}, {
   3.71137542553109*^9, 3.711375426439866*^9}, {3.711375544952793*^9, 
   3.711375554528768*^9}, 3.711378053014304*^9, {3.7113786305279913`*^9, 
   3.711378631298892*^9}, {3.711378764815662*^9, 3.71137876562005*^9}, {
   3.7113790460317173`*^9, 3.7113790500192013`*^9}, {3.7113792103336887`*^9, 
   3.711379210579523*^9}, {3.711379394772397*^9, 3.7113793961058273`*^9}, 
   3.71137973664112*^9, {3.711379799369574*^9, 3.711379802653809*^9}, {
   3.711379918900567*^9, 3.711379922569407*^9}, {3.711380109247238*^9, 
   3.7113801098795853`*^9}, 3.7113802626565027`*^9, {3.71138064238828*^9, 
   3.711380727389267*^9}, {3.711381937244587*^9, 3.711381939709526*^9}, {
   3.711384633018312*^9, 3.71138463338439*^9}, 3.711385193420412*^9, 
   3.711386113158454*^9, {3.7113864736311502`*^9, 3.711386487765305*^9}, {
   3.711388619652832*^9, 3.711388620038649*^9}, {3.711388669703821*^9, 
   3.7113886863275213`*^9}, {3.711388955592084*^9, 3.71138897206352*^9}, {
   3.711389341883296*^9, 3.711389344970595*^9}, {3.711389442447953*^9, 
   3.7113894782957687`*^9}, {3.71138960407664*^9, 3.71138962134657*^9}, {
   3.7113896796360083`*^9, 3.711389680735911*^9}, {3.711389888318371*^9, 
   3.711389908693643*^9}, {3.711390046304212*^9, 3.7113900482318363`*^9}, {
   3.7113901441766233`*^9, 3.711390174053409*^9}, {3.711390303188224*^9, 
   3.7113903148577337`*^9}, {3.711390675487299*^9, 3.7113906758126507`*^9}, {
   3.7113908647795887`*^9, 3.711390907547194*^9}, {3.711391287762787*^9, 
   3.7113912887034073`*^9}, {3.71139139079211*^9, 3.711391391957556*^9}, {
   3.7113915141391573`*^9, 3.711391514993744*^9}, 3.7113915931407347`*^9, {
   3.711391623493569*^9, 3.7113916243141193`*^9}, {3.7113916903077908`*^9, 
   3.711391690816235*^9}, {3.711391736582696*^9, 3.711391754667865*^9}, {
   3.711391845901655*^9, 3.71139184707306*^9}, {3.711391981650573*^9, 
   3.7113919823181133`*^9}, {3.7113920236353607`*^9, 3.711392024415758*^9}, {
   3.7113920690167933`*^9, 3.711392087185112*^9}, {3.711392317361205*^9, 
   3.711392317717574*^9}, {3.711392444094084*^9, 3.7113924687679977`*^9}, {
   3.7113925846260767`*^9, 3.711392585142613*^9}, {3.71139271636633*^9, 
   3.711392748466721*^9}, {3.711392863444121*^9, 3.711392864482525*^9}, {
   3.711393267112712*^9, 3.711393267485084*^9}, {3.711393724514847*^9, 
   3.711393733363505*^9}, {3.711394042029937*^9, 3.711394049706435*^9}, {
   3.711394272848057*^9, 3.711394297650446*^9}, {3.711394483928454*^9, 
   3.711394484655817*^9}, {3.7113945909756603`*^9, 3.71139462408359*^9}, {
   3.7113948293735943`*^9, 3.711394864392345*^9}, {3.711395115499009*^9, 
   3.711395119270884*^9}, {3.711395176434354*^9, 3.711395177391519*^9}, 
   3.7113953568788967`*^9, 3.711395497303833*^9, {3.711395569328582*^9, 
   3.711395585617489*^9}, {3.71139568838953*^9, 3.71139568929778*^9}, {
   3.711395841083152*^9, 3.711395842600521*^9}, {3.7113959308494167`*^9, 
   3.711395946958961*^9}, 3.711396080272567*^9, {3.71139618840547*^9, 
   3.711396204794438*^9}, {3.711396314580357*^9, 3.711396314983831*^9}, {
   3.7113964198669786`*^9, 3.7113964213824043`*^9}, 3.711396545514525*^9, 
   3.711396676081306*^9, {3.711396743610478*^9, 3.711396754356846*^9}, {
   3.711396870461838*^9, 3.711396876773612*^9}, {3.71139703254187*^9, 
   3.711397034819207*^9}, {3.7113972528570747`*^9, 3.711397253172743*^9}, {
   3.711397850796261*^9, 3.71139785105964*^9}, {3.711397894010725*^9, 
   3.711397894291025*^9}},ExpressionUUID->"a35b5074-9f82-48fb-9816-\
c74ebac3338f"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 3, 3}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {3, 3}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {14, 15}, 
               "$OutputSize" -> {12, 13}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 14, 15}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 12, 13}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 12, 13}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 12, 13}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 12, 13}, NeuralNetworks`RealT]]], 
           "3" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 3, 3}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {3, 3}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {12, 13}, 
               "$OutputSize" -> {10, 11}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 12, 13}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 10, 11}, NeuralNetworks`RealT]]], 
           "4" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 10, 11}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 10, 11}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 10, 11}, NeuralNetworks`RealT]]], 
           "5" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 3, 3}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {3, 3}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {10, 11}, 
               "$OutputSize" -> {8, 9}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 10, 11}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 8, 9}, NeuralNetworks`RealT]]], "6" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 8, 9}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 8, 9}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 8, 9}, NeuralNetworks`RealT]]], "7" -> 
           Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {1, 1}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 1, "$InputSize" -> {8, 9}, 
               "$OutputSize" -> {7, 8}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 8, 9}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 7, 8}, NeuralNetworks`RealT]]], "8" -> 
           Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {56}, 
               "$InputSize" -> {1, 7, 8}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 7, 8}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]]], "9" -> 
           Association[
            "Type" -> "Dropout", "Arrays" -> Association[], "Parameters" -> 
             Association["DropoutProbability" -> 0.2], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]]], "10" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 56, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]]], "11" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{120, 56}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {120}, "$OutputSize" -> 120, "$InputSize" -> 
               56, "$InputDimensions" -> {56}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], "12" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {120}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], "13" -> 
           Association[
            "Type" -> "Dropout", "Arrays" -> Association[], "Parameters" -> 
             Association["DropoutProbability" -> 0.2], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], "14" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 120, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], "15" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{100, 120}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {100}, "$OutputSize" -> 100, "$InputSize" -> 
               120, "$InputDimensions" -> {120}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]], "16" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {100}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]], "17" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{36, 100}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {36}, "$OutputSize" -> 36, "$InputSize" -> 
               100, "$InputDimensions" -> {100}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], "18" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 36, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "12", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "13", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "14", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "15", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "16", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "17", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "18", "Outputs", "Output"]}, 
         "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{1, 14, 15}, 
             NeuralNetworks`RealT]], "Outputs" -> 
         Association[
          "Output" -> NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"14\"", "\"15\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"12\"", "\"13\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"12\"", "\"13\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"10\"", "\"11\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"10\"", "\"11\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"8\"", "\"9\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"8\"", "\"9\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"7\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"56\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"56\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"56\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"14\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"15\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"16\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"17\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"18\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{270., {145.9169921875, 151.0830078125}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.711292686147791*^9, 3.71129272282049*^9, 3.711293117995409*^9, 
   3.711293271648329*^9, 3.711293352256935*^9, 3.711293783861788*^9, 
   3.711293903371031*^9, 3.711294514954468*^9, 3.711294639233478*^9, 
   3.71129774996002*^9, 3.711297967341679*^9, 3.711298089657797*^9, 
   3.711298495400546*^9, 3.711298694515403*^9, {3.71129878330262*^9, 
   3.7112988053460484`*^9}, 3.711298849989296*^9, 3.711298938181826*^9, 
   3.711299023639347*^9, 3.711299108861137*^9, 3.711299585848621*^9, 
   3.711300412917687*^9, 3.711300541032116*^9, 3.711301029037793*^9, 
   3.71130417802557*^9, 3.711304603531452*^9, 3.711307299379098*^9, 
   3.711307402341488*^9, 3.711307922840982*^9, 3.711308303759468*^9, 
   3.7113084896838303`*^9, 3.711308527887892*^9, 3.7113087073734217`*^9, 
   3.711308818173662*^9, 3.711308935593264*^9, 3.711309022737853*^9, 
   3.711309065256909*^9, 3.711309162176799*^9, 3.71130974704902*^9, 
   3.7113100040801487`*^9, 3.7113100900602837`*^9, 3.71131012471527*^9, 
   3.7113101802695017`*^9, 3.711310278611436*^9, 3.71131037368165*^9, {
   3.7113104156529303`*^9, 3.711310433257147*^9}, 3.711310505214563*^9, {
   3.711310536218317*^9, 3.711310549117581*^9}, 3.711310582626556*^9, 
   3.711310779627405*^9, 3.711310899768224*^9, 3.711311213455164*^9, 
   3.7113114164098587`*^9, 3.7113114605380573`*^9, 3.711311801048889*^9, 
   3.711312242892424*^9, 3.7113124580653553`*^9, 3.711312522360508*^9, 
   3.711312649414843*^9, 3.7113131040459623`*^9, 3.7113133693639593`*^9, 
   3.7113134533721333`*^9, 3.711313531728984*^9, 3.711313625444042*^9, 
   3.711313693715938*^9, 3.711313767060485*^9, 3.711313828533926*^9, 
   3.711313981607069*^9, 3.711314122592264*^9, 3.711314215135696*^9, 
   3.711314283662284*^9, 3.711314568833922*^9, 3.711314698933797*^9, 
   3.7113148735419083`*^9, 3.711315608103093*^9, 3.7113158579329643`*^9, 
   3.711321972285471*^9, 3.7113239809533157`*^9, 3.711324510725377*^9, 
   3.711324795455512*^9, 3.711325008516972*^9, 3.711325363029889*^9, 
   3.711325770997945*^9, 3.711325869205716*^9, 3.71132881535356*^9, 
   3.7113288591247587`*^9, 3.711329712454708*^9, 3.71133074861172*^9, 
   3.711330846247189*^9, 3.711330952106653*^9, 3.7113310050125523`*^9, 
   3.7113310529259243`*^9, 3.711331189507305*^9, 3.711332023884184*^9, 
   3.7113715482853727`*^9, 3.711371779038171*^9, 3.711371840960802*^9, {
   3.711371946598981*^9, 3.711371976376813*^9}, 3.711375411731977*^9, {
   3.711375542390603*^9, 3.711375552737954*^9}, 3.7113780334413757`*^9, 
   3.711378451373783*^9, 3.71137874439745*^9, 3.711379012029316*^9, 
   3.71137919407537*^9, 3.711379359405404*^9, 3.711379723923873*^9, 
   3.711379797686555*^9, 3.711379917376678*^9, 3.711380091575796*^9, 
   3.711380259497258*^9, 3.71138064036395*^9, {3.711380674055232*^9, 
   3.711380724130004*^9}, 3.7113819305902042`*^9, 3.7113845935200567`*^9, 
   3.711384627651335*^9, 3.711385162218956*^9, 3.711386099614848*^9, 
   3.7113864660583887`*^9, 3.7113866245366173`*^9, 3.7113867391292057`*^9, 
   3.7113868349202843`*^9, {3.711388665882339*^9, 3.711388684810792*^9}, {
   3.7113889449534197`*^9, 3.7113889688397818`*^9}, 3.711389334834914*^9, 
   3.711389432083379*^9, 3.711389467870332*^9, 3.711389571687744*^9, 
   3.711389617511977*^9, 3.711389677541924*^9, 3.711389863300057*^9, 
   3.7113899063878603`*^9, 3.7113900204295607`*^9, 3.7113901328488092`*^9, {
   3.711390172107538*^9, 3.7113902017498198`*^9}, 3.711390312134018*^9, 
   3.7113906242781963`*^9, {3.7113908624407454`*^9, 3.7113908973289433`*^9}, 
   3.711391285861244*^9, 3.711391358292186*^9, 3.711391388581771*^9, 
   3.7113915116287603`*^9, 3.711391571373701*^9, 3.711391620722334*^9, 
   3.711391654225527*^9, {3.711391726537017*^9, 3.711391752958901*^9}, 
   3.711391837535571*^9, 3.711391942442247*^9, 3.7113919795741787`*^9, 
   3.711392021408403*^9, {3.711392064284398*^9, 3.711392083000538*^9}, 
   3.71139230630271*^9, {3.711392442664678*^9, 3.711392466746739*^9}, 
   3.71139256878646*^9, 3.7113927043329983`*^9, 3.7113927425304613`*^9, 
   3.711392861487248*^9, 3.711393126539661*^9, 3.71139318597821*^9, 
   3.711393731258679*^9, {3.711394040011046*^9, 3.7113940484623213`*^9}, 
   3.711394263395815*^9, 3.711394295097404*^9, 3.711394476203327*^9, {
   3.711394580760829*^9, 3.7113946176375103`*^9}, {3.7113948257691727`*^9, 
   3.711394862519054*^9}, 3.7113951033830853`*^9, 3.711395173880343*^9, 
   3.7113953552856092`*^9, 3.71139547642703*^9, {3.711395567384193*^9, 
   3.711395583061501*^9}, 3.711395686314419*^9, 3.7113958364571533`*^9, {
   3.71139591621344*^9, 3.711395945000462*^9}, 3.711396070824785*^9, {
   3.711396186866232*^9, 3.711396201812398*^9}, 3.7113963128983183`*^9, 
   3.711396414717228*^9, 3.711396543315703*^9, 3.711396665077713*^9, {
   3.71139672385166*^9, 3.711396751786907*^9}, {3.711396868740563*^9, 
   3.711396875671584*^9}, 3.711397029638722*^9, 3.711397225283936*^9, 
   3.71139783261698*^9, 3.711397885934662*^9, 
   3.7113981012422237`*^9},ExpressionUUID->"90848884-e820-41a5-bc5d-\
95f273e9184d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<ann_1day_2.mx\>\"", ",", "ann"}], "]"}]], "Code",
 CellChangeTimes->{{3.711304216432527*^9, 3.711304223240691*^9}, {
  3.711390655958332*^9, 3.711390661924312*^9}, {3.711393213842716*^9, 
  3.711393214166765*^9}},ExpressionUUID->"14a0f4a7-4bb8-48e3-84f0-\
59bb42c42e1b"],

Cell[BoxData["\<\"ann_1day_2.mx\"\>"], "Output",
 CellChangeTimes->{3.7113042238349533`*^9, 3.7113073015565977`*^9, 
  3.7113074040724087`*^9, 3.711307924424477*^9, 3.711308709331195*^9, 
  3.711308819956131*^9, 3.711308937636896*^9, 3.711309024580412*^9, 
  3.7113091639566793`*^9, 3.7113097490323133`*^9, 3.711310281585071*^9, 
  3.7113311149802303`*^9, 3.711378761948316*^9, 3.7113906674619617`*^9, 
  3.711391380169869*^9, 3.711391662694014*^9, 3.711392580368284*^9, 
  3.711393214571844*^9},ExpressionUUID->"91f97b5d-dcca-4eae-a381-\
dcd4afb510a6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ann", "=", 
   RowBox[{"Import", "[", "\"\<ann.mx\>\"", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.71131250762066*^9, 
  3.71131251934753*^9}},ExpressionUUID->"131c286d-fdaf-41d6-a1a4-\
17b394f60897"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NSC", "[", 
   RowBox[{"simu_", ",", "obser_"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"simu", "-", "obser"}], ")"}], "^", "2"}], "]"}], "/", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"obser", "-", 
        RowBox[{"Mean", "[", "obser", "]"}]}], ")"}], "^", "2"}], 
     "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.71130750958813*^9, 
  3.7113076120641212`*^9}},ExpressionUUID->"1cdcd050-cdc8-413c-ba17-\
2454a475dc1e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"simu", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"Precip", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "Precip", "]"}]}], "}"}]}], "]"}], ",", 
          "1"}], "]"}]}], ",", "mean", ",", "std"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"mean", "=", 
       RowBox[{"Mean", "[", "data", "]"}]}], ";", "\n", "\t", 
      RowBox[{"std", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Variance", "[", "data", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "*", "std"}], "+", "mean"}], "&"}], ",", 
        RowBox[{"ann", "@", "gph"}]}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"result", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Correlation", "[", 
     RowBox[{
      RowBox[{"simu", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"1", ";;", 
          RowBox[{"Length", "[", "precip", "]"}]}], ",", "i"}], "]"}], "]"}], 
      ",", 
      RowBox[{"precip", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "i"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "36"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"Mean", "[", "result", "]"}], "\n", 
 RowBox[{"MinMax", "[", "result", "]"}]}], "Code",
 CellChangeTimes->{{3.711293121999989*^9, 3.7112931360375357`*^9}, 
   3.7112932406129303`*^9, {3.7112945421571207`*^9, 3.71129457327426*^9}, {
   3.711300426044677*^9, 3.711300427040164*^9}, {3.7113079506457644`*^9, 
   3.7113079555418377`*^9}, {3.711312644172949*^9, 3.711312644918146*^9}, {
   3.711312689423365*^9, 3.711312753907426*^9}, {3.7113128121636133`*^9, 
   3.71131284286689*^9}, {3.71137846113225*^9, 
   3.7113784660453444`*^9}},ExpressionUUID->"707acd5e-c85f-43a4-bf36-\
f7cc3cd51dc5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7767202505110904`", ",", "0.7621501904123003`", ",", 
   "0.6883059665374868`", ",", "0.837049576798616`", ",", 
   "0.8447990528549418`", ",", "0.8259164451646392`", ",", 
   "0.8233681430681924`", ",", "0.7968728650544851`", ",", 
   "0.7216968911812948`", ",", "0.814891828911728`", ",", 
   "0.759763541263856`", ",", "0.6124017488265401`", ",", 
   "0.8435029843259036`", ",", "0.8133472563196569`", ",", 
   "0.6172019015729346`", ",", "0.853095977973442`", ",", 
   "0.8615092921233743`", ",", "0.7589862239830115`", ",", 
   "0.8363899150658428`", ",", "0.8657148733260803`", ",", 
   "0.842618590635923`", ",", "0.7889542160603433`", ",", 
   "0.8562661228062591`", ",", "0.853727384387345`", ",", 
   "0.8008874225920268`", ",", "0.7980986259188521`", ",", 
   "0.8190581616190521`", ",", "0.8090119633991417`", ",", 
   "0.7311242827888416`", ",", "0.7705407603661781`", ",", 
   "0.7603318971552028`", ",", "0.7106103535708627`", ",", 
   "0.6694963891350665`", ",", "0.6877306362406103`", ",", 
   "0.6037271963103444`", ",", "0.5470940554512346`"}], "}"}]], "Output",
 CellChangeTimes->{{3.711293171539235*^9, 3.711293203293486*^9}, 
   3.711293276175598*^9, 3.7112933566310368`*^9, 3.711293907826952*^9, {
   3.711294519609975*^9, 3.711294578000835*^9}, 3.711297755300222*^9, 
   3.7112979732589893`*^9, 3.711298500408732*^9, 3.7112986993346577`*^9, {
   3.711299590530401*^9, 3.711299643846614*^9}, {3.711300418768949*^9, 
   3.7113004307237864`*^9}, 3.7113010340552063`*^9, 3.7113041834467077`*^9, 
   3.711304608775128*^9, 3.711307305973962*^9, 3.711307408581994*^9, {
   3.711307930282864*^9, 3.711307959011528*^9}, 3.711308309879549*^9, 
   3.711308714706912*^9, 3.711308824944512*^9, 3.7113089427109423`*^9, 
   3.711309029602694*^9, 3.7113091687622538`*^9, 3.7113097556868668`*^9, 
   3.7113102874915752`*^9, 3.7113107846853333`*^9, 3.711310905491667*^9, 
   3.711311220212977*^9, 3.711311422162695*^9, 3.711311805910591*^9, 
   3.71131268706194*^9, 3.7113127831009417`*^9, 3.711312839051169*^9, 
   3.711313109393773*^9, 3.711314574864661*^9, 3.71131488069464*^9, 
   3.711315613683518*^9, 3.711321977657733*^9, 3.711323986605033*^9, 
   3.711324800898489*^9, 3.7113250139129353`*^9, 3.711325368393051*^9, 
   3.711325775580285*^9, 3.711328821725402*^9, 3.711329719010042*^9, 
   3.711330755608059*^9, 3.711330853316777*^9, 3.711331059473321*^9, 
   3.7113311960146227`*^9, 3.711332030970542*^9, 3.71137155479571*^9, 
   3.7113754188784523`*^9, 3.7113780398643208`*^9, {3.7113784575953712`*^9, 
   3.711378470374466*^9}, 3.711378750745851*^9, 3.7113790180732193`*^9, 
   3.711379200584824*^9, 3.711379368057146*^9, 3.711379730211411*^9, 
   3.711380097733879*^9, 3.7113845997290993`*^9, 3.711385168184781*^9, 
   3.7113861065947857`*^9, 3.711386630504919*^9, 3.71138674574798*^9, 
   3.7113868418856373`*^9, 3.711388948720236*^9, 3.711389337590016*^9, 
   3.711389436188406*^9, 3.7113895759952297`*^9, 3.711389866964925*^9, 
   3.7113900239743834`*^9, 3.711390136158382*^9, 3.711390204824068*^9, 
   3.7113906277935457`*^9, 3.7113913618085012`*^9, 3.71139157491635*^9, 
   3.711391658909484*^9, 3.7113918412071123`*^9, 3.711391946930172*^9, 
   3.711392309969346*^9, 3.711392572628162*^9, 3.711392708568025*^9, 
   3.711393130861197*^9, 3.7113931897294083`*^9, 3.7113942670525703`*^9, 
   3.7113944802595873`*^9, 3.711395479975297*^9, {3.7113959201496973`*^9, 
   3.711395923932802*^9}, 3.7113966691195374`*^9, 3.711396727308194*^9, 
   3.711397229812317*^9, 3.7113978365262117`*^9, 3.711397888675434*^9, 
   3.711398104729168*^9},ExpressionUUID->"c76a6665-1ef3-4028-9b01-\
ee5f71414411"],

Cell[BoxData["0.7711934162142416`"], "Output",
 CellChangeTimes->{{3.711293171539235*^9, 3.711293203293486*^9}, 
   3.711293276175598*^9, 3.7112933566310368`*^9, 3.711293907826952*^9, {
   3.711294519609975*^9, 3.711294578000835*^9}, 3.711297755300222*^9, 
   3.7112979732589893`*^9, 3.711298500408732*^9, 3.7112986993346577`*^9, {
   3.711299590530401*^9, 3.711299643846614*^9}, {3.711300418768949*^9, 
   3.7113004307237864`*^9}, 3.7113010340552063`*^9, 3.7113041834467077`*^9, 
   3.711304608775128*^9, 3.711307305973962*^9, 3.711307408581994*^9, {
   3.711307930282864*^9, 3.711307959011528*^9}, 3.711308309879549*^9, 
   3.711308714706912*^9, 3.711308824944512*^9, 3.7113089427109423`*^9, 
   3.711309029602694*^9, 3.7113091687622538`*^9, 3.7113097556868668`*^9, 
   3.7113102874915752`*^9, 3.7113107846853333`*^9, 3.711310905491667*^9, 
   3.711311220212977*^9, 3.711311422162695*^9, 3.711311805910591*^9, 
   3.71131268706194*^9, 3.7113127831009417`*^9, 3.711312839051169*^9, 
   3.711313109393773*^9, 3.711314574864661*^9, 3.71131488069464*^9, 
   3.711315613683518*^9, 3.711321977657733*^9, 3.711323986605033*^9, 
   3.711324800898489*^9, 3.7113250139129353`*^9, 3.711325368393051*^9, 
   3.711325775580285*^9, 3.711328821725402*^9, 3.711329719010042*^9, 
   3.711330755608059*^9, 3.711330853316777*^9, 3.711331059473321*^9, 
   3.7113311960146227`*^9, 3.711332030970542*^9, 3.71137155479571*^9, 
   3.7113754188784523`*^9, 3.7113780398643208`*^9, {3.7113784575953712`*^9, 
   3.711378470374466*^9}, 3.711378750745851*^9, 3.7113790180732193`*^9, 
   3.711379200584824*^9, 3.711379368057146*^9, 3.711379730211411*^9, 
   3.711380097733879*^9, 3.7113845997290993`*^9, 3.711385168184781*^9, 
   3.7113861065947857`*^9, 3.711386630504919*^9, 3.71138674574798*^9, 
   3.7113868418856373`*^9, 3.711388948720236*^9, 3.711389337590016*^9, 
   3.711389436188406*^9, 3.7113895759952297`*^9, 3.711389866964925*^9, 
   3.7113900239743834`*^9, 3.711390136158382*^9, 3.711390204824068*^9, 
   3.7113906277935457`*^9, 3.7113913618085012`*^9, 3.71139157491635*^9, 
   3.711391658909484*^9, 3.7113918412071123`*^9, 3.711391946930172*^9, 
   3.711392309969346*^9, 3.711392572628162*^9, 3.711392708568025*^9, 
   3.711393130861197*^9, 3.7113931897294083`*^9, 3.7113942670525703`*^9, 
   3.7113944802595873`*^9, 3.711395479975297*^9, {3.7113959201496973`*^9, 
   3.711395923932802*^9}, 3.7113966691195374`*^9, 3.711396727308194*^9, 
   3.711397229812317*^9, 3.7113978365262117`*^9, 3.711397888675434*^9, 
   3.711398104784458*^9},ExpressionUUID->"70af5aa1-bf33-4ef2-b548-\
782a13482ba3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5470940554512346`", ",", "0.8657148733260803`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.711293171539235*^9, 3.711293203293486*^9}, 
   3.711293276175598*^9, 3.7112933566310368`*^9, 3.711293907826952*^9, {
   3.711294519609975*^9, 3.711294578000835*^9}, 3.711297755300222*^9, 
   3.7112979732589893`*^9, 3.711298500408732*^9, 3.7112986993346577`*^9, {
   3.711299590530401*^9, 3.711299643846614*^9}, {3.711300418768949*^9, 
   3.7113004307237864`*^9}, 3.7113010340552063`*^9, 3.7113041834467077`*^9, 
   3.711304608775128*^9, 3.711307305973962*^9, 3.711307408581994*^9, {
   3.711307930282864*^9, 3.711307959011528*^9}, 3.711308309879549*^9, 
   3.711308714706912*^9, 3.711308824944512*^9, 3.7113089427109423`*^9, 
   3.711309029602694*^9, 3.7113091687622538`*^9, 3.7113097556868668`*^9, 
   3.7113102874915752`*^9, 3.7113107846853333`*^9, 3.711310905491667*^9, 
   3.711311220212977*^9, 3.711311422162695*^9, 3.711311805910591*^9, 
   3.71131268706194*^9, 3.7113127831009417`*^9, 3.711312839051169*^9, 
   3.711313109393773*^9, 3.711314574864661*^9, 3.71131488069464*^9, 
   3.711315613683518*^9, 3.711321977657733*^9, 3.711323986605033*^9, 
   3.711324800898489*^9, 3.7113250139129353`*^9, 3.711325368393051*^9, 
   3.711325775580285*^9, 3.711328821725402*^9, 3.711329719010042*^9, 
   3.711330755608059*^9, 3.711330853316777*^9, 3.711331059473321*^9, 
   3.7113311960146227`*^9, 3.711332030970542*^9, 3.71137155479571*^9, 
   3.7113754188784523`*^9, 3.7113780398643208`*^9, {3.7113784575953712`*^9, 
   3.711378470374466*^9}, 3.711378750745851*^9, 3.7113790180732193`*^9, 
   3.711379200584824*^9, 3.711379368057146*^9, 3.711379730211411*^9, 
   3.711380097733879*^9, 3.7113845997290993`*^9, 3.711385168184781*^9, 
   3.7113861065947857`*^9, 3.711386630504919*^9, 3.71138674574798*^9, 
   3.7113868418856373`*^9, 3.711388948720236*^9, 3.711389337590016*^9, 
   3.711389436188406*^9, 3.7113895759952297`*^9, 3.711389866964925*^9, 
   3.7113900239743834`*^9, 3.711390136158382*^9, 3.711390204824068*^9, 
   3.7113906277935457`*^9, 3.7113913618085012`*^9, 3.71139157491635*^9, 
   3.711391658909484*^9, 3.7113918412071123`*^9, 3.711391946930172*^9, 
   3.711392309969346*^9, 3.711392572628162*^9, 3.711392708568025*^9, 
   3.711393130861197*^9, 3.7113931897294083`*^9, 3.7113942670525703`*^9, 
   3.7113944802595873`*^9, 3.711395479975297*^9, {3.7113959201496973`*^9, 
   3.711395923932802*^9}, 3.7113966691195374`*^9, 3.711396727308194*^9, 
   3.711397229812317*^9, 3.7113978365262117`*^9, 3.711397888675434*^9, 
   3.711398104837018*^9},ExpressionUUID->"01ca11bc-1b6a-4116-b397-\
d2821acefc1b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"48c0fcd4-108d-4b87-b78f-3b0ba64288cb"],

Cell["CNN", "Section",
 CellChangeTimes->{{3.7113265494744883`*^9, 
  3.7113265498168507`*^9}},ExpressionUUID->"9615503a-920b-41a8-9ec7-\
79260af1f064"],

Cell[CellGroupData[{

Cell["Boreal Winter", "Subchapter",
 CellChangeTimes->{{3.711326553456829*^9, 
  3.711326556229499*^9}},ExpressionUUID->"baf2d252-62da-40bf-a077-\
dcf6640138cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"winter", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"1", "+", 
           RowBox[{"year", "*", "365", "*", "4"}]}], ",", 
          RowBox[{
           RowBox[{"90", "*", "4"}], "+", 
           RowBox[{"year", "*", "365", "*", "4"}]}]}], "]"}], ",", "\n", 
        "\t\t\t\t\t  ", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"270", "*", "4"}], "+", 
           RowBox[{"year", "*", "365", "*", "4"}]}], ",", 
          RowBox[{
           RowBox[{"365", "*", "4"}], "+", 
           RowBox[{"year", "*", "365", "*", "4"}]}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"year", ",", "0", ",", "68"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.711326628429523*^9, 3.711326634741064*^9}, {
  3.711326756636014*^9, 
  3.711326756978073*^9}},ExpressionUUID->"e19a16f5-08db-4ffd-99cd-\
6592b2592a69"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gph", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "#", "}"}], "&"}], ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"GPH", ",", "1"}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "winter", "]"}], "]"}]}], ",", "mean", ",", "std"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"std", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Variance", "[", "data", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"mean", "=", 
       RowBox[{"Mean", "[", "data", "]"}]}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "-", "mean"}], ")"}], "/", "std"}], "&"}], ",", 
        "data"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"precip", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"Precip", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "Precip", "]"}]}], "}"}]}], "]"}], ",", 
           "1"}], "]"}], "[", 
         RowBox[{"[", "winter", "]"}], "]"}]}], ",", "mean", ",", "std"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"mean", "=", 
       RowBox[{"Mean", "[", "data", "]"}]}], ";", "\n", "\t", 
      RowBox[{"std", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Variance", "[", "data", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "-", "mean"}], ")"}], "/", "std"}], "&"}], ",", 
        "data"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gph", ",", "precip"}], "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"RandomSample", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"gph", ",", "precip"}], "}"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Dimensions", "[", "gph", "]"}], "\n", 
 RowBox[{"Dimensions", "[", "precip", "]"}]}], "Code",
 CellChangeTimes->{{3.711291344926475*^9, 3.711291350588716*^9}, {
  3.711291397195365*^9, 3.711291401666648*^9}, {3.711291680924217*^9, 
  3.7112917136450043`*^9}, {3.711291756140502*^9, 3.7112917729222593`*^9}, {
  3.71129269822692*^9, 3.711292704179179*^9}, {3.711293950951332*^9, 
  3.711294067337912*^9}, {3.7112946451446753`*^9, 3.71129470272654*^9}, {
  3.7113265797152233`*^9, 3.711326581759335*^9}, {3.711326637397554*^9, 
  3.711326686630849*^9}, {3.711327632937952*^9, 
  3.711327633681573*^9}},ExpressionUUID->"e7864d62-755c-4ef1-90f3-\
a7b20273d395"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"51129", ",", "1", ",", "14", ",", "15"}], "}"}]], "Output",
 CellChangeTimes->{3.711326718838066*^9, 3.711326763188714*^9, 
  3.71132763533173*^9, 3.711331210539954*^9, 3.711332039652384*^9, 
  3.7113320930062017`*^9},ExpressionUUID->"6fe7824b-3a73-47be-a127-\
de4553422d01"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"51129", ",", "36"}], "}"}]], "Output",
 CellChangeTimes->{3.711326718838066*^9, 3.711326763188714*^9, 
  3.71132763533173*^9, 3.711331210539954*^9, 3.711332039652384*^9, 
  3.711332093056649*^9},ExpressionUUID->"2d78ccb6-8166-4704-a554-\
43ad839758a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CNN", "=", 
  RowBox[{"NetInitialize", "[", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t\t\t\t ", 
      RowBox[{
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"1", ",", " ", "3"}], "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"1", ",", " ", "3"}], "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t  ", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"1", ",", " ", "3"}], "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t  ", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", " ", "1"}], "]"}], ",", "\n", "\t\t\t\t\t\t  ", 
       RowBox[{"DropoutLayer", "[", "0.2", "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       
       RowBox[{"FlattenLayer", "[", "]"}], ",", " ", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"BatchNormalizationLayer", "[", "]"}], ",", " ", "\n", 
       "\t\t\t\t\t\t ", 
       RowBox[{"DropoutLayer", "[", "0.2", "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       "200", ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"BatchNormalizationLayer", "[", "]"}], ",", "  ", "\n", 
       "\t\t\t\t\t\t  ", 
       RowBox[{"DropoutLayer", "[", "0.2", "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       "200", ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", "36"}], "\n", "\t\t\t\t\t\t ", "}"}], ",", "  ", "\n",
      "\t\t\t\t\t", 
     RowBox[{"\"\<Input\>\"", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "14", ",", "15"}], "}"}]}], ",", "\n", "\t\t\t\t\t", 
     
     RowBox[{"\"\<Output\>\"", " ", "->", " ", 
      RowBox[{"{", "36", "}"}]}]}], "]"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.711291835207334*^9, 3.711291902539351*^9}, {
   3.7112925081343317`*^9, 3.711292533033194*^9}, {3.711297784373797*^9, 
   3.711297795658963*^9}, {3.711297980927434*^9, 3.711297984157221*^9}, {
   3.71129852047994*^9, 3.711298527413066*^9}, {3.7112987267855253`*^9, 
   3.7112987275905247`*^9}, {3.711298932649469*^9, 3.7112989340160713`*^9}, {
   3.711299028439501*^9, 3.711299028731526*^9}, {3.7112991167124643`*^9, 
   3.711299134771428*^9}, 3.711310819445112*^9, 3.711311444602668*^9, {
   3.711311820203637*^9, 3.711311829932809*^9}, 3.711313152324218*^9, {
   3.71131339404988*^9, 3.7113134268539667`*^9}, {3.711313535708776*^9, 
   3.71131357788139*^9}, {3.711313628826557*^9, 3.711313638863739*^9}, {
   3.711313707632298*^9, 3.7113137100133457`*^9}, {3.711322226622748*^9, 
   3.711322242834231*^9}, {3.711327341691805*^9, 3.711327344458021*^9}, {
   3.711332973265087*^9, 
   3.7113330137652197`*^9}},ExpressionUUID->"e1eac704-ada5-427b-b645-\
cd381db75b30"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 3, 3}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {3, 3}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {14, 15}, 
               "$OutputSize" -> {12, 13}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 14, 15}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 12, 13}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 12, 13}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 12, 13}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 12, 13}, NeuralNetworks`RealT]]], 
           "3" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 3, 3}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {3, 3}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {12, 13}, 
               "$OutputSize" -> {10, 11}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 12, 13}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 10, 11}, NeuralNetworks`RealT]]], 
           "4" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 10, 11}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 10, 11}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 10, 11}, NeuralNetworks`RealT]]], 
           "5" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 3, 3}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {3, 3}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {10, 11}, 
               "$OutputSize" -> {8, 9}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 10, 11}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 8, 9}, NeuralNetworks`RealT]]], "6" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 8, 9}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 8, 9}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 8, 9}, NeuralNetworks`RealT]]], "7" -> 
           Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {1, 1}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 1, "$InputSize" -> {8, 9}, 
               "$OutputSize" -> {7, 8}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 8, 9}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 7, 8}, NeuralNetworks`RealT]]], "8" -> 
           Association[
            "Type" -> "Dropout", "Arrays" -> Association[], "Parameters" -> 
             Association["DropoutProbability" -> 0.2], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 7, 8}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 7, 8}, NeuralNetworks`RealT]]], "9" -> 
           Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {56}, 
               "$InputSize" -> {1, 7, 8}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 7, 8}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]]], "10" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 56, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]]], "11" -> 
           Association[
            "Type" -> "Dropout", "Arrays" -> Association[], "Parameters" -> 
             Association["DropoutProbability" -> 0.2], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]]], "12" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{200, 56}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {200}, "$OutputSize" -> 200, "$InputSize" -> 
               56, "$InputDimensions" -> {56}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "13" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {200}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "14" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 200, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "15" -> 
           Association[
            "Type" -> "Dropout", "Arrays" -> Association[], "Parameters" -> 
             Association["DropoutProbability" -> 0.2], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "16" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{200, 200}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {200}, "$OutputSize" -> 200, "$InputSize" -> 
               200, "$InputDimensions" -> {200}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "17" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {200}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "18" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{36, 200}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {36}, "$OutputSize" -> 36, "$InputSize" -> 
               200, "$InputDimensions" -> {200}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "12", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "13", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "14", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "15", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "16", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "17", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "18", "Outputs", "Output"]}, 
         "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{1, 14, 15}, 
             NeuralNetworks`RealT]], "Outputs" -> 
         Association[
          "Output" -> NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"14\"", "\"15\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"12\"", "\"13\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"12\"", "\"13\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"10\"", "\"11\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"10\"", "\"11\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"8\"", "\"9\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"8\"", "\"9\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"7\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"7\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"56\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"56\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"56\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"14\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"15\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"16\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"17\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"18\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{270., {145.9169921875, 151.0830078125}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.7113273459587507`*^9, 3.711327641439164*^9, 
  3.711328864156189*^9, 3.711333014367394*^9, 
  3.711368004370764*^9},ExpressionUUID->"677ad4da-b861-4060-a1c6-\
5c6120ef7c4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ann", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ptraining", "=", 
      RowBox[{"Floor", "[", 
       RowBox[{
        RowBox[{"Length", "[", "precip", "]"}], "*", "0.7"}], "]"}]}], "}"}], 
    ",", "\n", "\t", 
    RowBox[{"NetTrain", "[", 
     RowBox[{"ann", ",", "\n", "\t", 
      RowBox[{
       RowBox[{"gph", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "ptraining"}], "]"}], "]"}], "\[Rule]", 
       RowBox[{"precip", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "ptraining"}], "]"}], "]"}]}], ",", "\n", "\t", 
      RowBox[{"ValidationSet", "\[Rule]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"gph", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
          RowBox[{"precip", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "ptraining", ",", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"Length", "[", "gph", "]"}], ",", 
             RowBox[{"Length", "[", "precip", "]"}]}], "]"}]}], "}"}]}], 
        "]"}]}], ",", "\n", "\t", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ADAM\>\"", ",", 
         RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", "0.1"}]}], "}"}]}], 
      ",", "\n", "\t", 
      RowBox[{"BatchSize", "\[Rule]", "400"}], ",", "\n", "\t", 
      RowBox[{"MaxTrainingRounds", " ", "->", " ", "2000"}]}], "]"}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.711292603805943*^9, 3.711292678045878*^9}, {
   3.71129276355096*^9, 3.711292763802294*^9}, {3.711293207901119*^9, 
   3.71129320906818*^9}, {3.711293287131628*^9, 3.7112932876820307`*^9}, {
   3.7112934171685877`*^9, 3.711293426405362*^9}, 3.711293789729445*^9, {
   3.71129460074748*^9, 3.711294605689701*^9}, {3.7112980915888767`*^9, 
   3.711298092401373*^9}, {3.7112987856706038`*^9, 3.711298812075926*^9}, {
   3.7112988514846277`*^9, 3.711298851698675*^9}, {3.711299895701317*^9, 
   3.7112998963628693`*^9}, {3.711300519826535*^9, 3.711300533672222*^9}, {
   3.711304231538226*^9, 3.7113042319292316`*^9}, {3.711307999629352*^9, 
   3.711308000888276*^9}, {3.7113084911031027`*^9, 3.711308493100642*^9}, {
   3.711308529170039*^9, 3.711308531481388*^9}, {3.7113087290080967`*^9, 
   3.711308729204269*^9}, {3.711308867157248*^9, 3.711308867358677*^9}, {
   3.7113089630439577`*^9, 3.7113089641693983`*^9}, {3.711309038946838*^9, 
   3.7113090678013487`*^9}, {3.711309177948999*^9, 3.711309178362568*^9}, {
   3.7113097865335627`*^9, 3.7113097890333233`*^9}, {3.7113100419606237`*^9, 
   3.711310042457862*^9}, {3.711310092203527*^9, 3.711310093096875*^9}, 
   3.711310181816989*^9, {3.711310327181752*^9, 3.711310327394072*^9}, {
   3.7113103766532383`*^9, 3.7113103799071836`*^9}, {3.711310417298316*^9, 
   3.711310434777657*^9}, 3.711310506616356*^9, {3.7113105536470757`*^9, 
   3.711310554167695*^9}, {3.711310585057631*^9, 3.711310588495253*^9}, {
   3.711310825653245*^9, 3.711310826013823*^9}, {3.711311285467628*^9, 
   3.7113112859453583`*^9}, {3.711311462983601*^9, 3.7113114637044897`*^9}, 
   3.711312244518797*^9, {3.711312460108438*^9, 3.7113124637869873`*^9}, {
   3.7113130033283653`*^9, 3.7113130044849977`*^9}, {3.711313143079981*^9, 
   3.711313143475904*^9}, {3.711313373355517*^9, 3.7113133864348087`*^9}, {
   3.711313454791974*^9, 3.71131345500844*^9}, {3.7113137128308973`*^9, 
   3.7113137145097*^9}, {3.7113137702625103`*^9, 3.711313773299375*^9}, {
   3.711313830924246*^9, 3.71131383115492*^9}, {3.711313983423671*^9, 
   3.711313987372488*^9}, 3.711314129646811*^9, 3.7113142176728983`*^9, {
   3.711314701350072*^9, 3.711314703050438*^9}, {3.711315826565199*^9, 
   3.7113158290436993`*^9}, {3.71132399893818*^9, 3.71132400155129*^9}, {
   3.711324512824753*^9, 3.711324513271942*^9}, {3.71132561388034*^9, 
   3.711325614301091*^9}, {3.7113258136566477`*^9, 3.711325814021549*^9}, {
   3.711326768931975*^9, 3.711326796162608*^9}, {3.7113273075310926`*^9, 
   3.71132731126925*^9}, {3.711327407454288*^9, 3.711327411250619*^9}, {
   3.711327530269128*^9, 3.711327534110173*^9}, {3.711327644123475*^9, 
   3.711327644468891*^9}, {3.711327962978519*^9, 3.7113279692708273`*^9}, {
   3.7113320989541817`*^9, 3.7113320993145027`*^9}, {3.711367228720479*^9, 
   3.711367229109829*^9}, 3.711367380421365*^9, {3.7113675385746727`*^9, 
   3.711367538874737*^9}, 3.711367900397633*^9, {3.711368008818692*^9, 
   3.711368009211192*^9}, {3.7113681755707273`*^9, 3.711368186455043*^9}, 
   3.7113682726097307`*^9, {3.711368450498049*^9, 3.711368491642915*^9}, {
   3.711368704181473*^9, 3.711368704585648*^9}, 3.711370405990429*^9, {
   3.711370444877289*^9, 
   3.711370445266453*^9}},ExpressionUUID->"528bf90d-7074-49e2-805e-\
7bbec3464eac"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 3, 3}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {3, 3}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {14, 15}, 
               "$OutputSize" -> {12, 13}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 14, 15}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 12, 13}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 12, 13}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 12, 13}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 12, 13}, NeuralNetworks`RealT]]], 
           "3" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 3, 3}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {3, 3}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {12, 13}, 
               "$OutputSize" -> {10, 11}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 12, 13}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 10, 11}, NeuralNetworks`RealT]]], 
           "4" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 10, 11}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 10, 11}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 10, 11}, NeuralNetworks`RealT]]], 
           "5" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 3, 3}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {3, 3}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {10, 11}, 
               "$OutputSize" -> {8, 9}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 10, 11}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 8, 9}, NeuralNetworks`RealT]]], "6" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 8, 9}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 8, 9}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 8, 9}, NeuralNetworks`RealT]]], "7" -> 
           Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {1, 1}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 1, "$InputSize" -> {8, 9}, 
               "$OutputSize" -> {7, 8}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 8, 9}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 7, 8}, NeuralNetworks`RealT]]], "8" -> 
           Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {56}, 
               "$InputSize" -> {1, 7, 8}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 7, 8}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]]], "9" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{200, 56}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {200}, "$OutputSize" -> 200, "$InputSize" -> 
               56, "$InputDimensions" -> {56}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{56}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "10" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {200}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "11" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{200, 200}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {200}, "$OutputSize" -> 200, "$InputSize" -> 
               200, "$InputDimensions" -> {200}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "12" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {200}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "13" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{36, 200}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {36}, "$OutputSize" -> 36, "$InputSize" -> 
               200, "$InputDimensions" -> {200}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "12", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "13", "Outputs", "Output"]}, 
         "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{1, 14, 15}, 
             NeuralNetworks`RealT]], "Outputs" -> 
         Association[
          "Output" -> NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"14\"", "\"15\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"12\"", "\"13\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"12\"", "\"13\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"10\"", "\"11\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"10\"", "\"11\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"8\"", "\"9\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"8\"", "\"9\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"7\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"56\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[
               NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{235., {108.4169921875, 113.5830078125}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.711326793766528*^9, 3.7113272463190727`*^9, 
  3.7113273312290897`*^9, 3.711327405698591*^9, 3.71132752345854*^9, 
  3.7113275564044933`*^9, 3.711327950330061*^9, 3.711328033415902*^9, 
  3.711331203928163*^9, 3.7113312725359898`*^9, 3.71133207197182*^9, 
  3.711332965310796*^9, 3.711339188031465*^9, 3.711367375181079*^9, 
  3.7113675360738773`*^9, 3.711367894107148*^9, 3.7113679978400087`*^9, 
  3.71136817379523*^9, 3.7113682704841127`*^9, 3.711368436028611*^9, 
  3.711368488298366*^9, 3.7113686933699007`*^9, 3.7113703803337317`*^9, 
  3.711370441260607*^9, 3.7113705570259*^9, 
  3.7113706571574078`*^9},ExpressionUUID->"023ca083-fb19-4eb0-9ce7-\
e2a4fccbcae3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"simu", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"Precip", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "Precip", "]"}]}], "}"}]}], "]"}], ",", 
           "1"}], "]"}], "[", 
         RowBox[{"[", "winter", "]"}], "]"}]}], ",", "mean", ",", "std"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"mean", "=", 
       RowBox[{"Mean", "[", "data", "]"}]}], ";", "\n", "\t", 
      RowBox[{"std", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Variance", "[", "data", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "*", "std"}], "+", "mean"}], "&"}], ",", 
        RowBox[{"ann", "@", "gph"}]}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"result", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Correlation", "[", 
     RowBox[{
      RowBox[{"simu", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"1", ";;", 
          RowBox[{"Length", "[", "winter", "]"}]}], ",", "i"}], "]"}], "]"}], 
      ",", 
      RowBox[{"precip", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "i"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "36"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"Mean", "[", "result", "]"}], "\n", 
 RowBox[{"MinMax", "[", "result", "]"}]}], "Code",
 CellChangeTimes->{{3.711293121999989*^9, 3.7112931360375357`*^9}, 
   3.7112932406129303`*^9, {3.7112945421571207`*^9, 3.71129457327426*^9}, {
   3.711300426044677*^9, 3.711300427040164*^9}, {3.7113079506457644`*^9, 
   3.7113079555418377`*^9}, {3.711312644172949*^9, 3.711312644918146*^9}, {
   3.711312689423365*^9, 3.711312753907426*^9}, {3.7113128121636133`*^9, 
   3.71131284286689*^9}, {3.711327266305077*^9, 3.711327299593895*^9}, {
   3.7113706867424307`*^9, 
   3.711370689766218*^9}},ExpressionUUID->"57120cc3-f393-4321-bb3c-\
4e7c38c9e5bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7792859959984771`", ",", "0.7893857079291074`", ",", 
   "0.7565505147074991`", ",", "0.8205705168684542`", ",", 
   "0.8419482815972302`", ",", "0.8289075050540406`", ",", 
   "0.7907711485603771`", ",", "0.8041490178622352`", ",", 
   "0.7656558004853562`", ",", "0.7983486897869863`", ",", 
   "0.8060069744893036`", ",", "0.7467212937227583`", ",", 
   "0.8314041406457681`", ",", "0.8426321172844312`", ",", 
   "0.7576539151511371`", ",", "0.8476436809028937`", ",", 
   "0.8779797971746621`", ",", "0.8300445803322996`", ",", 
   "0.8592349348250244`", ",", "0.8969114966848698`", ",", 
   "0.8824652824020193`", ",", "0.8349632511702249`", ",", 
   "0.8889267501142948`", ",", "0.9057461291087923`", ",", 
   "0.8948629636419574`", ",", "0.8653115097955721`", ",", 
   "0.9024169554537547`", ",", "0.9075670030391422`", ",", 
   "0.8651712513358518`", ",", "0.8695437783487785`", ",", 
   "0.8994381614070547`", ",", "0.8381220608852369`", ",", 
   "0.7459479420859999`", ",", "0.8333411682119067`", ",", 
   "0.862999853053146`", ",", "0.7899959521804476`"}], "}"}]], "Output",
 CellChangeTimes->{{3.711327284887227*^9, 3.711327301529069*^9}, 
   3.711327560269486*^9, 3.711327955019979*^9, 3.711328038032419*^9, 
   3.7113312778771467`*^9, 3.7113320761422453`*^9, 3.711367217503996*^9, 
   3.711368440722034*^9, 3.711368697111356*^9, 3.7113703848933153`*^9, 
   3.7113705614918118`*^9, 3.7113706606853733`*^9, 
   3.7113706921508427`*^9},ExpressionUUID->"a49da049-ded0-40aa-9d01-\
ad4b21b71a7c"],

Cell[BoxData["0.8349618367304747`"], "Output",
 CellChangeTimes->{{3.711327284887227*^9, 3.711327301529069*^9}, 
   3.711327560269486*^9, 3.711327955019979*^9, 3.711328038032419*^9, 
   3.7113312778771467`*^9, 3.7113320761422453`*^9, 3.711367217503996*^9, 
   3.711368440722034*^9, 3.711368697111356*^9, 3.7113703848933153`*^9, 
   3.7113705614918118`*^9, 3.7113706606853733`*^9, 
   3.711370692198613*^9},ExpressionUUID->"c6e0a761-9085-4a0c-8961-\
8a118ddef264"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7459479420859999`", ",", "0.9075670030391422`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.711327284887227*^9, 3.711327301529069*^9}, 
   3.711327560269486*^9, 3.711327955019979*^9, 3.711328038032419*^9, 
   3.7113312778771467`*^9, 3.7113320761422453`*^9, 3.711367217503996*^9, 
   3.711368440722034*^9, 3.711368697111356*^9, 3.7113703848933153`*^9, 
   3.7113705614918118`*^9, 3.7113706606853733`*^9, 
   3.711370692253927*^9},ExpressionUUID->"3cd19b15-1d20-4a60-b75f-\
93f6d4931f8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "result", "]"}]], "Code",
 CellChangeTimes->{{3.71137067003689*^9, 
  3.711370672995748*^9}},ExpressionUUID->"afa6c5f4-d157-458e-8b3c-\
b057ec0713e1"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {{
       {RGBColor[0.65, 0., 0.], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        StyleBox[PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQDQEf7MuzEvVfvn9hDxVwON7+/sJSp5dQPocDi9S5
nJWmMHkBh8cJByRlnV5B+SIOy13PtNp+hPElHA5tM+bIbIPxZRyi/271/u8L
M0/BYVPrrB3TdsP4Sg5elY+mOzTAzFdxuCag1yvUA5NXc0j8WKF8/hSMr+HQ
1fyDV+XpcyhfyyFwidXtO7Ng9uk4HCz3XHj9G4yv5/A1NCNnsx3MfAOH6UUs
S57Kv4byDR0m2OWKZUq8gfKNHDh+XV+2sx+m39jh5zsR51t1MPUmDqvjTffW
b4apN3W4veXHFXVbGN/MQTRL5RbLDph+c4eOnxzNYkUweQsHFvYEv/u/YXxL
h0ln05dvXwTjWzlkTMk9vHADzD5rh2ufH7TOfACTt3HwzZ7/5STXWyjf1oFh
5d551eth6u0cPCL8Kn0vw/j2DvsnMHQZnYDpd3B4dMcw+ulFqPsaHByCn/ww
P3cPFp6ODqt0/0jsXgWTd3SwktW6t3EuzDwnB4YzQdOXur+0BwCwQ68i
          "]],
         FontFamily->"Baskerville"]}}}, {}}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.743422644258607},
  BaseStyle->{FontFamily -> "Baskerville"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Baskerville"},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 36.}, {0.7459479420859999, 0.9075670030391422}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.711370673414957*^9, 
  3.711370697290283*^9}},ExpressionUUID->"39b34568-90d2-461e-ba63-\
98817a8b0ded"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->Automatic,
TaggingRules->{"SlideShow" -> True},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 16, \
2017)",
StyleDefinitions->FrontEnd`FileName[{"SlideShow"}, "Garnet.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[422, 15, 4399, 98, 
  75, "SlideShowNavigationBar", "ExpressionUUID" -> "74cd32bf-
   af0a-4dbc-83ba-530c914e1bd6",
   CellTags->"SlideShowHeader"],
  Cell[5047, 127, 122, 2, 
  74, "SlideShowNavigationBar", "ExpressionUUID" -> "
   ead32e1b-224f-41c6-8635-62727372f84f",
   CellTags->"SlideShowHeader"],
  Cell[19762, 531, 122, 2, 
  74, "SlideShowNavigationBar", "ExpressionUUID" -> "c0fd6aab-b7d7-4f4c-abeb-
   ada720782470",
   CellTags->"SlideShowHeader"],
  Cell[32386, 875, 122, 2, 
  74, "SlideShowNavigationBar", "ExpressionUUID" -> "0002cdf4-340c-4265-
   ae3f-9d00e9a70a02",
   CellTags->"SlideShowHeader"],
  Cell[93725, 2020, 122, 2, 
  74, "SlideShowNavigationBar", "ExpressionUUID" -> "1747e78a-63a8-45e5-908e-
   bdc70cb6ad7f",
   CellTags->"SlideShowHeader"],
  Cell[347967, 7222, 122, 2, 
  74, "SlideShowNavigationBar", "ExpressionUUID" -> "48c0fcd4-108d-4b87-
   b78f-3b0ba64288cb",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 443352, 9295}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 4399, 98, 75, "SlideShowNavigationBar", "ExpressionUUID" -> \
"74cd32bf-af0a-4dbc-83ba-530c914e1bd6",
 CellTags->"SlideShowHeader"],
Cell[4824, 115, 186, 7, 396, "Title", "ExpressionUUID" -> \
"a8b44791-5f12-457b-b878-50e562ebbcf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5047, 127, 122, 2, 74, "SlideShowNavigationBar", "ExpressionUUID" -> \
"ead32e1b-224f-41c6-8635-62727372f84f",
 CellTags->"SlideShowHeader"],
Cell[5172, 131, 155, 3, 123, "Section", "ExpressionUUID" -> \
"8fe69326-8e22-460f-b117-d1befd4b7a65"],
Cell[CellGroupData[{
Cell[5352, 138, 154, 3, 47, "Subchapter", "ExpressionUUID" -> \
"9b46d942-155f-4d02-97fd-4e35385f52df"],
Cell[CellGroupData[{
Cell[5531, 145, 156, 3, 74, "Subsubsection", "ExpressionUUID" -> \
"d9165368-2194-4acd-8261-c5067d83a5d5"],
Cell[5690, 150, 3814, 96, 359, "Code", "ExpressionUUID" -> \
"3bec1ee7-7d00-4b25-a791-8f44b74df74d"],
Cell[9507, 248, 528, 11, 70, "Code", "ExpressionUUID" -> \
"a0efea4d-c56a-43ac-8714-de74cec712e9"],
Cell[10038, 261, 438, 11, 70, "Code", "ExpressionUUID" -> \
"0a5b5169-8948-4d97-8672-06d5b4e7218e"],
Cell[CellGroupData[{
Cell[10501, 276, 189, 4, 70, "Code", "ExpressionUUID" -> \
"3fdf031a-41ee-470b-a0fe-d47bf07b3b3f"],
Cell[10693, 282, 153, 4, 47, "Output", "ExpressionUUID" -> \
"4fd632d3-6ed4-49a4-bd5b-ee7e401b1d97"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10895, 292, 217, 4, 74, "Subsubsection", "ExpressionUUID" -> \
"42abc3f9-46f0-4771-911f-a9b34674a621"],
Cell[11115, 298, 921, 27, 95, "Code", "ExpressionUUID" -> \
"88c3d152-7a4a-4fd8-9b53-6abe6c5f1969"],
Cell[12039, 327, 6026, 153, 391, "Code", "ExpressionUUID" -> \
"70559d2f-2472-4039-872e-1ab42f396ee1"],
Cell[18068, 482, 646, 12, 70, "Code", "ExpressionUUID" -> \
"4b071636-49a7-42a9-93e7-9c276654ab37"],
Cell[18717, 496, 327, 9, 70, "Code", "ExpressionUUID" -> \
"07409753-0b67-4b34-bfaf-58f400ab0120"],
Cell[CellGroupData[{
Cell[19069, 509, 289, 5, 70, "Code", "ExpressionUUID" -> \
"18023f50-0b7d-47f5-b331-6fe65514ce26"],
Cell[19361, 516, 328, 7, 47, "Output", "ExpressionUUID" -> \
"a30467e8-5d25-48d5-8c92-f310335cbb9c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19762, 531, 122, 2, 74, "SlideShowNavigationBar", "ExpressionUUID" -> \
"c0fd6aab-b7d7-4f4c-abeb-ada720782470",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[19909, 537, 204, 4, 63, "Subchapter", "ExpressionUUID" -> \
"81cc478f-bc7e-4fff-8af7-ba39aec1440f"],
Cell[CellGroupData[{
Cell[20138, 545, 156, 3, 74, "Subsubsection", "ExpressionUUID" -> \
"cf97fd09-d548-4722-9bce-e94d2b3bcd9b"],
Cell[20297, 550, 3814, 96, 359, "Code", "ExpressionUUID" -> \
"eb745b59-4632-4109-87d6-1b62febe0989"],
Cell[24114, 648, 528, 11, 70, "Code", "ExpressionUUID" -> \
"c5f52da3-f78c-4ca4-8fa3-0b3b51539bb9"],
Cell[24645, 661, 438, 11, 70, "Code", "ExpressionUUID" -> \
"23805bcc-8be5-4138-bf8c-e4a3086ab543"],
Cell[CellGroupData[{
Cell[25108, 676, 189, 4, 70, "Code", "ExpressionUUID" -> \
"5f767a5e-4eee-436c-adeb-c2ce1b09bb7b"],
Cell[25300, 682, 153, 4, 47, "Output", "ExpressionUUID" -> \
"356281e1-c1d3-40ee-9282-5749593a1c7a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25502, 692, 217, 4, 74, "Subsubsection", "ExpressionUUID" -> \
"3b5550a4-8522-497e-b86e-07d442699fcc"],
Cell[25722, 698, 5974, 152, 391, "Code", "ExpressionUUID" -> \
"c609c961-bec9-42c8-ad39-bcf4c9237489"],
Cell[CellGroupData[{
Cell[31721, 854, 289, 5, 70, "Code", "ExpressionUUID" -> \
"5acb09e0-da3b-491f-b760-19ff227d3375"],
Cell[32013, 861, 300, 6, 47, "Output", "ExpressionUUID" -> \
"77ccddf3-cc7b-4b2b-80a1-e80678fc3499"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32386, 875, 122, 2, 74, "SlideShowNavigationBar", "ExpressionUUID" -> \
"0002cdf4-340c-4265-ae3f-9d00e9a70a02",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[32533, 881, 210, 4, 63, "Subchapter", "ExpressionUUID" -> \
"52084d9b-b9f7-4d41-9496-ed24c0b5de6d"],
Cell[32746, 887, 5280, 146, 391, "Code", "ExpressionUUID" -> \
"0d8451a9-f444-4d36-903a-2ecc7fbe6a73"],
Cell[38029, 1035, 579, 12, 70, "Code", "ExpressionUUID" -> \
"73c58722-1877-41c2-b612-1dd502e14d9a"],
Cell[38611, 1049, 357, 10, 70, "Code", "ExpressionUUID" -> \
"40ff5552-738d-41ba-a70f-8fa722265371"],
Cell[CellGroupData[{
Cell[38993, 1063, 195, 4, 70, "Code", "ExpressionUUID" -> \
"737788cf-d367-4c21-a227-eae36df9419a"],
Cell[39191, 1069, 181, 5, 47, "Output", "ExpressionUUID" -> \
"282f9950-4de8-428a-8891-249f47e04232"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39409, 1079, 288, 5, 70, "Code", "ExpressionUUID" -> \
"879dbd55-a507-4ff3-93ae-ef288b37c50c"],
Cell[39700, 1086, 51874, 866, 248, 6232, 118, "CachedBoxData", "BoxData", \
"Output", "ExpressionUUID" -> "6966710c-7896-4aaf-92bc-a09bb09fb9a8"]
}, Open  ]],
Cell[91589, 1955, 1201, 32, 167, "Code", "ExpressionUUID" -> \
"93572cc8-2a07-4b76-8252-362cca36ce1d"],
Cell[CellGroupData[{
Cell[92815, 1991, 444, 11, 70, "Code", "ExpressionUUID" -> \
"1e034495-345f-4942-af2a-d701be8e46a2"],
Cell[93262, 2004, 402, 9, 37, "Message", "ExpressionUUID" -> \
"fa35d9d2-46b7-4102-9dbe-9a85b555383f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93725, 2020, 122, 2, 74, "SlideShowNavigationBar", "ExpressionUUID" -> \
"1747e78a-63a8-45e5-908e-bdc70cb6ad7f",
 CellTags->"SlideShowHeader"],
Cell[93850, 2024, 246, 4, 123, "Section", "ExpressionUUID" -> \
"f807477c-3dba-41e1-9e1b-c5097e195eac"],
Cell[CellGroupData[{
Cell[94121, 2032, 216, 4, 47, "Subchapter", "ExpressionUUID" -> \
"1ff66838-297a-4575-bec9-92197ef1cded"],
Cell[CellGroupData[{
Cell[94362, 2040, 3273, 91, 423, "Code", "ExpressionUUID" -> \
"b2f67737-6745-4ff1-b275-3adabb4d18dc"],
Cell[97638, 2133, 602, 10, 47, "Output", "ExpressionUUID" -> \
"8b321386-e211-4db0-a8db-3da260225be0"],
Cell[98243, 2145, 583, 10, 47, "Output", "ExpressionUUID" -> \
"c18326ee-7cee-42dc-acae-de949d835382"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98863, 2160, 314, 7, 103, "Code", "ExpressionUUID" -> \
"58a79144-75eb-4cf3-9958-b13baa4fa83a"],
Cell[99180, 2169, 168, 3, 47, "Output", "ExpressionUUID" -> \
"12ad0901-f313-4a01-b9ea-4c2fe1451350"],
Cell[99351, 2174, 168, 3, 47, "Output", "ExpressionUUID" -> \
"af9e99c1-5a33-486d-b802-a073ef761d34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99556, 2182, 5496, 88, 807, "Code", "ExpressionUUID" -> \
"1fd201b6-9068-4cbf-9998-c1027d2f8983"],
Cell[105055, 2272, 39619, 818, 294, "Output", "ExpressionUUID" -> \
"ea6d5696-467f-46b7-842f-91a7f2e2c2e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144711, 3095, 15616, 234, 263, "Code", "ExpressionUUID" -> \
"733f527f-8916-4997-983c-e50ba980d2dd"],
Cell[160330, 3331, 4497, 106, 408, "PrintTemporary", "ExpressionUUID" -> \
"0483a6e0-36c5-4264-b697-0640d5b1b9ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164864, 3442, 936, 16, 70, "Code", "ExpressionUUID" -> \
"35ab90a7-650f-4b25-9858-0b75c8d851f4"],
Cell[165803, 3460, 37348, 787, 294, "Output", "ExpressionUUID" -> \
"f6efaf98-5d98-4d73-828d-4bb9b89003ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203188, 4252, 860, 15, 70, "Code", "ExpressionUUID" -> \
"9f61e134-a64e-4b40-85a3-f07fde37f98a"],
Cell[204051, 4269, 1034, 16, 47, "Output", "ExpressionUUID" -> \
"e46f6436-0b0c-460f-b427-5c162de98639"]
}, Open  ]],
Cell[205100, 4288, 574, 18, 70, "Code", "ExpressionUUID" -> \
"c239dbe1-5077-4f88-8dd3-ffef264054d7"],
Cell[CellGroupData[{
Cell[205699, 4310, 2467, 65, 263, "Code", "ExpressionUUID" -> \
"c9d6911b-c88e-4f11-9200-1bf292759750"],
Cell[208169, 4377, 4726, 71, 144, "Output", "ExpressionUUID" -> \
"e6e0fb1e-8135-4a1e-994a-63cd4b359dff"],
Cell[212898, 4450, 3645, 51, 47, "Output", "ExpressionUUID" -> \
"f6af54ad-8576-4481-b1a4-2db35a6542b2"],
Cell[216546, 4503, 3712, 54, 47, "Output", "ExpressionUUID" -> \
"f878c64c-f171-48ef-b5b6-db7964ee3240"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220295, 4562, 2523, 69, 263, "Code", "ExpressionUUID" -> \
"85e74be5-8fab-4eeb-bdb4-e5d60bac3197"],
Cell[222821, 4633, 2796, 54, 144, "Output", "ExpressionUUID" -> \
"b2a5c4db-2ee4-4b90-9ce2-86fb0c4c6b81"],
Cell[225620, 4689, 1124, 18, 47, "Output", "ExpressionUUID" -> \
"801f4f0a-9328-43f4-9285-c87751eb3c29"]
}, Open  ]],
Cell[226759, 4710, 1228, 35, 103, "Code", "ExpressionUUID" -> \
"481a1d54-7f0e-4c8a-9434-b127f33081be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228024, 4750, 216, 4, 63, "Subchapter", "ExpressionUUID" -> \
"2af4ce91-ac98-4a15-9812-d6da96fbc089"],
Cell[228243, 4756, 614, 18, 70, "Code", "ExpressionUUID" -> \
"91c31b48-7336-4ed5-9b4d-a22a6e5f0d10"],
Cell[CellGroupData[{
Cell[228882, 4778, 3552, 97, 423, "Code", "ExpressionUUID" -> \
"876756ca-b336-4de9-bc1c-120b9b044e6e"],
Cell[232437, 4877, 271, 6, 47, "Output", "ExpressionUUID" -> \
"db92fac0-bf19-4eb3-b401-1d2853ba4d6f"],
Cell[232711, 4885, 250, 6, 47, "Output", "ExpressionUUID" -> \
"f1c55fee-5ca0-45ad-9e57-1c2c2900b88d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232998, 4896, 3162, 57, 839, "Code", "ExpressionUUID" -> \
"971fb6ec-deec-45a8-813a-6072a1efec16"],
Cell[236163, 4955, 43396, 909, 339, "Output", "ExpressionUUID" -> \
"1caeb5bd-f822-464b-a5aa-35ae15412880"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279596, 5869, 7994, 130, 263, "Code", "ExpressionUUID" -> \
"a35b5074-9f82-48fb-9816-c74ebac3338f"],
Cell[287593, 6001, 47520, 967, 339, "Output", "ExpressionUUID" -> \
"90848884-e820-41a5-bc5d-95f273e9184d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335150, 6973, 324, 6, 70, "Code", "ExpressionUUID" -> \
"14a0f4a7-4bb8-48e3-84f0-59bb42c42e1b"],
Cell[335477, 6981, 553, 8, 47, "Output", "ExpressionUUID" -> \
"91f97b5d-dcca-4eae-a381-dcd4afb510a6"]
}, Open  ]],
Cell[336045, 6992, 239, 6, 70, "Code", "ExpressionUUID" -> \
"131c286d-fdaf-41d6-a1a4-17b394f60897"],
Cell[336287, 7000, 574, 18, 70, "Code", "ExpressionUUID" -> \
"1cdcd050-cdc8-413c-ba17-2454a475dc1e"],
Cell[CellGroupData[{
Cell[336886, 7022, 2137, 56, 263, "Code", "ExpressionUUID" -> \
"707acd5e-c85f-43a4-bf36-f7cc3cd51dc5"],
Cell[339026, 7080, 3656, 56, 144, "Output", "ExpressionUUID" -> \
"c76a6665-1ef3-4028-9b01-ee5f71414411"],
Cell[342685, 7138, 2576, 36, 47, "Output", "ExpressionUUID" -> \
"70af5aa1-bf33-4ef2-b548-782a13482ba3"],
Cell[345264, 7176, 2642, 39, 47, "Output", "ExpressionUUID" -> \
"01ca11bc-1b6a-4116-b397-d2821acefc1b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[347967, 7222, 122, 2, 74, "SlideShowNavigationBar", "ExpressionUUID" -> \
"48c0fcd4-108d-4b87-b78f-3b0ba64288cb",
 CellTags->"SlideShowHeader"],
Cell[348092, 7226, 152, 3, 123, "Section", "ExpressionUUID" -> \
"9615503a-920b-41a8-9ec7-79260af1f064"],
Cell[CellGroupData[{
Cell[348269, 7233, 161, 3, 47, "Subchapter", "ExpressionUUID" -> \
"baf2d252-62da-40bf-a077-dcf6640138cc"],
Cell[348433, 7238, 1048, 30, 103, "Code", "ExpressionUUID" -> \
"e19a16f5-08db-4ffd-99cd-6592b2592a69"],
Cell[CellGroupData[{
Cell[349506, 7272, 3050, 84, 391, "Code", "ExpressionUUID" -> \
"e7864d62-755c-4ef1-90f3-a7b20273d395"],
Cell[352559, 7358, 315, 6, 47, "Output", "ExpressionUUID" -> \
"6fe7824b-3a73-47be-a127-de4553422d01"],
Cell[352877, 7366, 292, 6, 47, "Output", "ExpressionUUID" -> \
"2d78ccb6-8166-4704-a554-43ad839758a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353206, 7377, 3105, 57, 871, "Code", "ExpressionUUID" -> \
"e1eac704-ada5-427b-b645-cd381db75b30"],
Cell[356314, 7436, 42172, 888, 339, "Output", "ExpressionUUID" -> \
"677ad4da-b861-4060-a1c6-5c6120ef7c4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398523, 8329, 4816, 87, 263, "Code", "ExpressionUUID" -> \
"528bf90d-7074-49e2-805e-7bbec3464eac"],
Cell[403342, 8418, 32480, 684, 264, "Output", "ExpressionUUID" -> \
"023ca083-fb19-4eb0-9ce7-e2a4fccbcae3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435859, 9107, 2275, 60, 263, "Code", "ExpressionUUID" -> \
"57120cc3-f393-4321-bb3c-4e7c38c9e5bb"],
Cell[438137, 9169, 1550, 27, 144, "Output", "ExpressionUUID" -> \
"a49da049-ded0-40aa-9d01-ad4b21b71a7c"],
Cell[439690, 9198, 463, 7, 47, "Output", "ExpressionUUID" -> \
"c6e0a761-9085-4a0c-8961-8a118ddef264"],
Cell[440156, 9207, 529, 10, 47, "Output", "ExpressionUUID" -> \
"3cd19b15-1d20-4a60-b75f-93f6d4931f8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[440722, 9222, 190, 4, 70, "Code", "ExpressionUUID" -> \
"afa6c5f4-d157-458e-8b3c-b057ec0713e1"],
Cell[440915, 9228, 2005, 49, 249, "Output", "ExpressionUUID" -> \
"39b34568-90d2-461e-ba63-98817a8b0ded"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

