(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    534897,       9682]
NotebookOptionsPosition[    528525,       9511]
NotebookOutlinePosition[    529651,       9549]
CellTagsIndexPosition[    529571,       9544]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[1, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAKiEGSLED8//9/gvjRo0fsN27cELp69arY+fPnpZExPn137tzhBqrRBGJ/
ID4CxMfRMTZ9L168YL5w4YIaUD4AiC8C8Qcg/gvE/9AxFreC7PQD4gtA/BGq
7j8ujKz3+fPnLFC9b6H24dSHTf/FixfVofYSpRdZPzSsAqBuJkovsn5oOF8k
5F9s+h88eMBBjt0w/devXxcGso+S4m9k/ZcuXRKHpgeS3A7TD0wrkpToPw9J
ywOmn1L3Uxp+lMYfpemH0vRLjfwDjQey8y9a+fGOWDPwlF+gsPhEKDywlZ8g
d0D9EniexPITGd++fZv3PBnlN6764zxa3QHCAIDESDs=
         "], {{0, 26}, {16, 
         0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2V1vVFUUBuBGTfTSSygthYYKNHyVinrrpbcYfwBEJN5gUkyMfw9KKaVw
KCkQKCW1RNIQKg1gEE3QtdN10pMRZCaBzNQ+kzxt5nzstfeZfbPOu/vkD8e/
e6+vr+/sR/Hn+ImfvpyYOPHz1x/Hl2/OnP3+9JlT33515sdTp09NfHHy/TjY
H6592Nf3QfyvqmpHBwbCYNr5GoMNAw2d1AEAADa3/obtLba1aJ7rb4xR9x1D
YVfYHYbDnjASPgn7wv4wGg6Eg+FQOByOhLEwnj4Nx8Jn6fM21dcfyzHq8cay
xuGseTDnMJpz2pdzHMk5D+caduWa6v6p+czafU71s6p1+/cGAADYqt52/9va
++6tXt331j3v0TTeoj5e966v6lv3Vv/uWfWr9LJm9tzMpN+UW3eaVV9s00yY
CzfC7bAQFhvuhjt57maYD9er9c+VcDlcCtMd1AQAADafqXQhTabz6VyL+vhk
Xl/uLX1D6UFmw9VwrVrvL0o/cqta7ztKD3Iv/BLuh1/DSngYHoXfwlp4Ep6F
38Pz8Ed4Ef5Mf71Gff5F3vM8x3iWY65ljUdZcyXncD/ndC/neDvnfCPXcC3X
NJtrnG48r3afU/2s6uc11QO/OwAAwFbzLvrfksWVjK30kSV3KxncUlgOD6qN
vnc1PK42+t7iaaq/r+U1q9VG3/ogx1rKse9krfmsrV+l15R9WDLmkjWXzLl8
yvuVsmdLJl3eu5R9XN7BNLPrhTxX3seUvT3TQc2Xbfr7LWq3JgAAwH95m33K
u9Dt5wMAAMDmp2dlK+vGnu/2+yQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPN42aZu
1AQAAAAAAICtrNsZIXRTN/b8xTbNhLlwI9wOC2Gx4W64k+duhvlwvVr/XAmX
w6Uw3UFNAAAAAAAA6EVT6UKaTOfTuRb18cm8vtxbcrOSwc2Gq9V6FlcytlvV
eu5WMrilsBwehJXwMKyGx2EtPElPU/19La9ZzXtWcozlHHMxa9zKmnM5h9mc
03Rjfe2uq15bvb6pHvid2NzKPiwZc8maS+ZcPiWDLnu2ZNIlmy77uGTVzex6
Ic+VbLvs7ZkOau7owEAYTDtfY7BhoKGTOgAAAAAAANDr+hu2t9jWonmuvzFG
nbsNhd1hOOwJI2Fv2B9Gw4FwMBwKR8JYOJrGW9THx/LaQ3nvgRxrf449krWG
s/ZQtZH3NdfY7rrqtdW6/fvw/9LMnpuZ9Jty646y6n8AhCP7tg==
         "], {{0, 26}, {
         2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lktLQkEUxyVdCBIELaxctYq+QduWbcKMPoCSRRsDC6JPp+Lj4vuq+EBc
iBtFfIYrpU7nPzQiN++9vmrgp/dx5j8z55w5c099z56HPYvF8mLnH4/37TIY
9L7fHvDNXeDl6THgv78KvPof/cELn5UfnjBHjI3J5/OudVBV9bhUKjmbzaad
iCxmcB9lAxKMmzmv1+v7JvpfG/DJjJkic8NrOut0OlYdfdoCjPXBqMx1q9Vy
7FhfgvX0MUa73bYZ6edyuTnrvPsZQ4Wv9PTRL5vNroTOGIiJu9FoOLT6UjuT
yVAqlaJkMin+0+m0YPEZbHTGQDwKyKtl+ugHjdFoRIVCgeLxOCUSCQGua7Ua
9Xo9YQNbozXI/aHVZ//RcDik2WxG5XKZwuGwANdo0JfrNIhDvFqtHi7zD+YW
i8VoMBgIvWKxKEDrdrtiHbAxiAF8pHAf5zJ9+Bca0WiUxuMxydbv98U64CvY
wNZgTyioI9r8QR/EEvrQUhRlrh8Kheb6sDHTZ1xG84ePMP/pdPpr/tvoL/of
Mcb9Jv7X+mcxP2X+QCMSiYh5VyoVMQbXMbP81I2vzM/JZCLyX+a+BPmPvbFN
fmr36pr713B/rVp7THy/tD6Y1cjF5zrahvVtB5jW5y21B/kVzpc1kecjfK53
Pu7kfNfO+x+/T/70++ob7NUEtQ==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 TextAlignment->Center,
 CellTags->
  "SlideShowHeader",ExpressionUUID->"8f98c996-c03d-4e8d-aa01-53e132033ada"],

Cell["CNN Project", "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.708957078227775*^9, 
   3.708957081097603*^9}},ExpressionUUID->"9c5948ab-fba9-451f-b1a5-\
6dce3e05c424"],

Cell["Review", "Subtitle",
 CellChangeTimes->{{3.7089570840939074`*^9, 
  3.708957084985421*^9}},ExpressionUUID->"31109000-9adc-4f7b-aea0-\
8c360d3af8e1"],

Cell["\<\
Baoxiang Pan
2017.7.13\
\>", "Text",
 CellChangeTimes->{{3.708957088618773*^9, 3.708957099816948*^9}},
 TextAlignment->Right,
 TextJustification->0.,ExpressionUUID->"4c0881f0-dc77-4dba-affc-474653cae627"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"413dda73-f752-497c-9a4d-1bd490dbe1a4"],

Cell["Data", "Section",
 CellChangeTimes->{{3.708958355050888*^9, 3.708958365784823*^9}, {
  3.708958613874732*^9, 
  3.708958614449122*^9}},ExpressionUUID->"cae85696-a3b2-468c-a1bd-\
a76b17a02932"],

Cell[CellGroupData[{

Cell["Precipitation", "Subchapter",
 CellChangeTimes->{{3.708970424081317*^9, 
  3.708970427070815*^9}},ExpressionUUID->"455f56a0-9ea2-4b34-967d-\
f9a39ad165ea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/lambda/Documents/Data/CPC_Precipitation\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"year", "=", "1948"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"precip", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"\"\<precip.V1.0.\>\"", "<>", 
       RowBox[{"ToString", "[", "year", "]"}], "<>", "\"\<.nc\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Datasets\>\"", ",", "\"\<precip\>\""}], "}"}]}], "]"}], 
    "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", 
      RowBox[{"48", ";;"}], ",", 
      RowBox[{"21", ";;", "65"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mlat", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"\"\<precip.V1.0.\>\"", "<>", 
       RowBox[{"ToString", "[", "year", "]"}], "<>", "\"\<.nc\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Datasets\>\"", ",", "\"\<lat\>\""}], "}"}]}], "]"}], "[", 
    
    RowBox[{"[", 
     RowBox[{"48", ";;"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mlon", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"\"\<precip.V1.0.\>\"", "<>", 
       RowBox[{"ToString", "[", "year", "]"}], "<>", "\"\<.nc\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Datasets\>\"", ",", "\"\<lon\>\""}], "}"}]}], "]"}], "[", 
    
    RowBox[{"[", 
     RowBox[{"21", ";;", "65"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"precip", "=", 
   RowBox[{"precip", " ", "/.", " ", 
    RowBox[{
     RowBox[{"x_", "/;", " ", 
      RowBox[{"x", "<", " ", "0"}]}], " ", "\[Rule]", "nan"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"precip", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", 
      RowBox[{"32", ";;"}], ",", 
      RowBox[{"26", ";;"}]}], "]"}], "]"}], "=", "nan"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"grid", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "j"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "34.125", ",", 
               RowBox[{"39.125", "+", "0.25"}], ",", "0.25"}], "}"}]}], "]"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "240.125", ",", "246.125", ",", "0.25"}], 
            "}"}]}], "]"}], ",", "1"}], "]"}]}], ",", "\n", "\t   ", "t", ",",
       "tt"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"t", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"grid", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "34", "+", 
           RowBox[{
            RowBox[{"6", "/", "5"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "-", "246"}], ")"}]}]}], ">", 
          "0"}], "&"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"tt", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"mlat", ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"mlon", ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
        "t"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Set", "[", 
         RowBox[{
          RowBox[{"precip", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], ",", "nan"}], 
         "]"}], "&"}], ",", "tt"}], "]"}]}]}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.708959791381815*^9, 3.7089598481785717`*^9}, {
   3.70895994790478*^9, 3.708959966839148*^9}, {3.7089600299907207`*^9, 
   3.708960030533599*^9}, {3.708961443788425*^9, 3.708961512203238*^9}, {
   3.708961567207197*^9, 3.708961596034856*^9}, {3.708961631086817*^9, 
   3.7089616527821283`*^9}, 3.708966973509227*^9, {3.708967264569398*^9, 
   3.7089672872645807`*^9}, {3.708967714332817*^9, 3.708967718787067*^9}, {
   3.7089678152001133`*^9, 3.708967830695567*^9}, {3.708967880671748*^9, 
   3.70896788139986*^9}, {3.7089679232224207`*^9, 3.708967923556682*^9}, {
   3.708968007786563*^9, 3.7089680079380007`*^9}, {3.70896804490545*^9, 
   3.708968064800374*^9}, {3.70896942808259*^9, 3.708969496832363*^9}, {
   3.7089695680766706`*^9, 3.708969688381474*^9}, {3.708969770018416*^9, 
   3.708969824127743*^9}, {3.708969877167251*^9, 3.708969994354363*^9}, {
   3.708970065555189*^9, 3.708970066377331*^9}, {3.708970289855582*^9, 
   3.708970374823195*^9}, {3.708970858610159*^9, 3.708970896511447*^9}, {
   3.708970993397737*^9, 3.7089709942844343`*^9}, {3.708971668039818*^9, 
   3.708971671967402*^9}, {3.7089717147794447`*^9, 3.708971746611197*^9}, {
   3.708971891555669*^9, 3.7089718925223017`*^9}, {3.7089719539205933`*^9, 
   3.708971968206773*^9}, {3.708972193485631*^9, 3.708972194371697*^9}, {
   3.708972809493424*^9, 3.708972809954966*^9}, {3.708972848370655*^9, 
   3.708972915519472*^9}, {3.708974368574978*^9, 
   3.70897436910849*^9}},ExpressionUUID->"72d2c065-c313-4331-b638-\
8867867cd2f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"precip", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mlat", ",", "mlon", ",", "tt"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
      "SetDirectory", "[", 
       "\"\</Users/lambda/Documents/Data/CPC_Precipitation\>\"", "]"}], ";", 
      "\n", "\t", 
      RowBox[{"mlat", "=", 
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{"\"\<precip.V1.0.1948.nc\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Datasets\>\"", ",", "\"\<lat\>\""}], "}"}]}], "]"}], 
        "[", 
        RowBox[{"[", 
         RowBox[{"48", ";;"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"mlon", "=", 
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{"\"\<precip.V1.0.1948.nc\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Datasets\>\"", ",", "\"\<lon\>\""}], "}"}]}], "]"}], 
        "[", 
        RowBox[{"[", 
         RowBox[{"21", ";;", "65"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"tt", "=", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"grid", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"i", ",", "j"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "34.125", ",", 
                    RowBox[{"39.125", "+", "0.25"}], ",", "0.25"}], "}"}]}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "240.125", ",", "246.125", ",", "0.25"}], 
                 "}"}]}], "]"}], ",", "1"}], "]"}]}], ",", "\n", "\t       ", 
           "t"}], "}"}], ",", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"t", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"grid", ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", "34", "+", 
                RowBox[{
                 RowBox[{"6", "/", "5"}], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", "246"}], ")"}]}]}], 
               ">", "0"}], "&"}]}], "]"}]}], ";", "\n", "\t\t\t", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{"mlat", ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{"mlon", ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
            "t"}], "]"}]}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", "precip", "}"}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"precip", "=", 
            RowBox[{
             RowBox[{"Import", "[", 
              RowBox[{
               RowBox[{"\"\<precip.V1.0.\>\"", "<>", 
                RowBox[{"ToString", "[", "year", "]"}], "<>", "\"\<.nc\>\""}],
                ",", 
               RowBox[{"{", 
                RowBox[{"\"\<Datasets\>\"", ",", "\"\<precip\>\""}], "}"}]}], 
              "]"}], "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", 
               RowBox[{"48", ";;"}], ",", 
               RowBox[{"21", ";;", "65"}]}], "]"}], "]"}]}], ";", "\n", 
           "\t\t", 
           RowBox[{"precip", "=", 
            RowBox[{"precip", " ", "/.", " ", 
             RowBox[{
              RowBox[{"x_", "/;", " ", 
               RowBox[{"x", "<", " ", "0"}]}], " ", "\[Rule]", "nan"}]}]}], 
           ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"precip", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", 
               RowBox[{"32", ";;"}], ",", 
               RowBox[{"26", ";;"}]}], "]"}], "]"}], "=", "nan"}], ";", "\n", 
           "\t\t", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Set", "[", 
               RowBox[{
                RowBox[{"precip", "[", 
                 RowBox[{"[", 
                  RowBox[{";;", ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], ",", 
                "nan"}], "]"}], "&"}], ",", "tt"}], "]"}], ";", "\n", "\t\t", 
           "precip"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"year", ",", "1948", ",", "2006"}], "}"}]}], "]"}]}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.708974535236704*^9, 
  3.7089746944068747`*^9}},ExpressionUUID->"9a4c4c7f-711d-4b1e-8152-\
947585cd93b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{"precip", ",", "1"}], "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.708974505621648*^9, 3.708974524923594*^9}, {
  3.708974708672277*^9, 3.708974710747953*^9}, {3.708974789763226*^9, 
  3.708974799436254*^9}},ExpressionUUID->"da348f9a-0b23-4b15-8948-\
12dbd2a70f33"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21550", ",", "73", ",", "45"}], "}"}]], "Output",
 CellChangeTimes->{{3.7089745075464687`*^9, 3.708974525324357*^9}, {
  3.7089747866106863`*^9, 
  3.708974800313993*^9}},ExpressionUUID->"5efa19e4-4909-4dbc-af8e-\
bc2528f1a10f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"precip", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", ";;", ",", ";;"}], "]"}], "]"}], ",", "\n", "\t", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
   RowBox[{"BaseStyle", "\[Rule]", "20"}], ",", "\n", "\t", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\n", "\t", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Longitude\>\"", ",", "\"\<Latitude\>\""}], "}"}]}], ",", 
   "\n", "\t", 
   RowBox[{"FrameTicks", "\[Rule]", "None"}], ",", "\n", "\t", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.708961436851459*^9, 3.708961469913108*^9}, {
   3.708961521285824*^9, 3.708961558102747*^9}, {3.7089616045252047`*^9, 
   3.70896162535809*^9}, {3.708961661273682*^9, 3.708961665602247*^9}, {
   3.708963056808201*^9, 3.7089630843849583`*^9}, {3.708966619133608*^9, 
   3.708966673619586*^9}, {3.708967839372321*^9, 3.708967839558928*^9}, {
   3.708967948594029*^9, 3.708967950356448*^9}, {3.708969457423686*^9, 
   3.7089694576333313`*^9}, {3.708969747560224*^9, 3.708969749377286*^9}, {
   3.708969938205559*^9, 3.7089699415373*^9}, {3.708970000656273*^9, 
   3.708970020282168*^9}, 3.708970197750759*^9, {3.708970341060319*^9, 
   3.708970343031487*^9}, {3.7089703813540363`*^9, 3.708970396805833*^9}, {
   3.708970466415945*^9, 3.70897063147443*^9}, {3.7089706880134153`*^9, 
   3.7089707056197557`*^9}, {3.7089709364819613`*^9, 
   3.7089709487970657`*^9}, {3.708971276649775*^9, 3.708971328251451*^9}, {
   3.708971652731172*^9, 3.7089716926459227`*^9}, {3.708971902773859*^9, 
   3.708971906361368*^9}, {3.708972040308137*^9, 3.708972060615074*^9}, {
   3.708972189320063*^9, 3.708972189455698*^9}, {3.708972547365356*^9, 
   3.7089725478391037`*^9}, {3.708972831221846*^9, 3.7089728405767517`*^9}, {
   3.7089738293475733`*^9, 
   3.708973834230962*^9}},ExpressionUUID->"8e2ba8eb-317b-4391-9b7f-\
0e01e4e2b00b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJyF3EtuK8cZhmEiQIAMz0ADDTRQCEEQBELgtbvFa9uxnavtOEsIkHG28C0n
y+DScnH/BfBRBGdSeVInifi6RXZXFc9v//7Pv/3jV7PZ7F+/ns3+O/7vX/lu
/Pnf/ObnMd9O/jKN3906eDZO4900j2dfMY9nXzOPZ98yj9vPV/N4dpnGe37e
e37emv+Kedx+3prHs98xj2ffMI/b66153F5vzePZfhofpvGAL3i8dXDrUfO4
9ah53HrUPG49ah63HjWPW4+ax+31P07jEZ/xBY+3Dm59ah63PjWPW5+ax61P
zePWp+Zx61PzuPWZT+MRn/AZX/B46+DWq+Zx61XzuPWqedx61TxuvWoet141
j2fbaXyaxh3u8AEf8Qmf8QWPtw5ufWset741j1vfmsetb83j1rfmcev3PI07
3OEeD/gd7/EBH/EJn/EFj7cObv1rHrf+NY9b/5rHrX/N49a/vJnGl2nc4h3u
cI8H/I73+ICP+ITP+ILHWwe3/jWPW/+ax61/zePWv+bxbD2Nr9O4wVu8wx3u
8YDf8R4f8BGf8Blf8Hjr4Na/5nHrX/O49a953PqXq/diGjd4i3e4wz0e8Dve
4wM+4hM+4wsebx3cetc8br1rHrfeNY9nq2l8m8Y13uAt3uEO93jA73iPD/iI
T/iML3i8dXDrXfO49a553HqXq+9yGtd4g7d4hzvc4wG/4z0+4CM+4TO+4PHW
wa1vzePWt+Zx61v+rPPqk3GNN3iLd7jDPR7wO97jAz7iEz7jCx5vHdz61zxu
/Wsef3if8Lq2s+MGb/EOd7jHA37He3zAR3zCZ3zB462DW++ax633Z59zvg/7
vuF1bGfHLd7hDvd4wO94jw/4iE/4jC94vHVw613z+MN9mvcRfs75vuz7hNex
nR13uMM9HvA73uMDPuITPuMLHm8d3Hp/dt/rfZn3DX7O+b7r+4LXrV0dO9zj
Ab/jPT7gIz7hM77g8dbBH57bfI7wPtf7MO8b/Bzzfdb3Aa9Tuzr2eMDveI8P
+IhP+IwveLx18Id1CJ+LfU7zOcL7XO/LvE/wc8z3Wd8HvG7t7Djgd7zHB3zE
J3zGFzxi13VcZ/C51+cynxu8z/W+y/sCP7d8X/V9wOvWro7veI8P+IhP+Iwv
2HUx12lcN/C51ucunxO8b/W+ys99P5d8H/X33uvSjo57fMBHfMJnXOuUriO6
ruU6i+sAPqf6XOV9vveh3if5Oe7nju+T/h573dlt/8l4wEd8wnP+e66Duy7r
OqHrVq6r+Nzvc6rPTd7Xe9/pfZGf437u+L7o77HXoR0dj9h9qjl2H8F1bddZ
XfdzXcp1E5/zfe70ucj7du8rvQ/yc9vPFd8H/T32OrSjY+0D1nX6iOfYfRn3
CVy3dh3VdT7XoVw38Tne50yfg7xP977S+yA/p/1c8X3R3+sDrn3met98wO6r
zrH7XO67uA/gurTrpq7ruQ7luojP7T5X+tzjfbr3ld73+Dnt58weV0/35d2H
dp/VfUH3qdw3cR3fdWbXQV23cx3JdQ6fw31O9LnG+3DvE72vKb/jOufhOQ7P
Mbhv7760+6ju67nP5L6H6/KuG7vO6bqb60KuW/hc7XOgzy3eZ5cH7Lkdz8V4
LsRzEHPsvrT7pO7buY/kPofr8K4bu47pOpvrQK5T+Fztc2CPB+w5J88ReY7G
cyNz7D6++8ruc7rv5r6Q+xaus7vu67qk62au6+xwh3s84Dp3Vv6CPTfmuSzP
JXkOZ449F+E+vfvG7mO6z+Y+kPsWrqO7zus65BbvcId7POCpb1tH/oI9h+c5
N895ea5pjj1n4rkH9+HdF3bf0n0194Hcl3DdfIO3eIc73OMB1/Va9hyj5wQ9
J/eI59hzOp4b8RyD++ru+7ov6T6a+zprvMFbvMMd7vGA6/qsfbw77DlLzxk+
4jn2nJPnbjwH4rkE983d13UfcoXXeIO3eIc73OMB1/VJT8+lei7Tc4ies/Nc
mOeUPDfjOQ7PGYSeoWfoGXqGnqFn6Bl6hp6hZ+jZzqHcYc/5es71Ec+x5+w8
9+U5JM/FLPAbXuIVXuMN3uId7nCPB1zXJz09F+25YM/Bes7Tc4mek/PcVugZ
eoaeoWfoGXqGnqFn6Bl6hp6hZ+jpuXnPlXuu2nPEnpP1XOeHc4blF/yKF/gN
L/EKr/EGb/EOd7jHA/7kexF+D8Fz+p5T91y25449Jxv6hr6hb+gb+oa+oW/o
G/qGvqFv6Bv6hr6hr98z8Xsdfu/Bc/+ec/ccd/MTfsYv+BUv8Bte4hVe4w3e
4h3ucI8HXNfvZ9/j8Xszfq/E71U84jl+ws/4Bb/iBX7DS7zCa7zBW7zDHe7x
gOv6/f00fsF3+B4/4Ec8x0/4Gb/gV7zAb3iJV3iNN3iLd7jDPR5wXb/0DX1D
39A39A19Q9/QN/QNfUPf0Df0DX1D39A39A19Q9/QN/S15+wP03iH7/EDfsRz
/ISf8Qt+xQv8hpd4hdd4g7d4hzvc4wHX9UnP0DP0DD1Dz9Az9Aw9Q8/QM/QM
PUPP0DP0DD1Dz9Az9Aw9Q8/ZH6fxDt/jB/yI5/gJP+MX/IoX+A0v8Qqv8QZv
8Q53uMcDruuTnqFn6Bl6hp6hZ+gZeoaeoWfoGXqGnqFn6Bl6hp6hZ+gZeoae
sz9N4x2+xw/4Ec/xE37GL/gVL/AbXuIVXuMN3uId7nCPB1zXJz1Dz9Az9Aw9
Q8/QM/QMPUPP0DP0DD1Dz9Az9Aw9Q8/QM/S03+zP03iPH/AjnuMn/Ixf8Cte
4De8xCu8xhu8xTvc4R4PuK4/+oV+oV/oF/qFfqFf6Bf6hX6hX+gX+oV+oV/o
F/qFfqFf6Df7yzTe4wf8iOf4CT/jF/yKF/gNL/EKr/EGb/EOd7jHA67rj36h
X+gX+oV+oV/oF/qFfqFf6Bf6hX6hX+gX+oV+oV/oF/rNvp/Ge/yAH/EcP+Fn
/IJf8QK/4SVe4TXe4C3e4Q73eMB1/dEv9Av9Qr/QL/QL/UK/0C/0C/1Cv9Av
9Av9Qr/QL/QL/Zrr/vCHabzD9/gBP+I5fsLP+AW/4gV+w0u8wmu8wVu8wx3u
8YDr/pCeoWfoGXqGnqFn6Bl6hp6hZ+gZeoaeoWfoGXqGnqFn6Bl6hp6zH6fx
Dt/jB/yI5/gJP+MX/IoX+A0v8Qqv8QZv8Q53uMcDruuTnqFn6Bl6hp6hZ+gZ
eoaeoWfoGXqGnqFn6Bl6hp6hZ+gZejbX+vpfp/ELvsP3+AE/4jl+ws/4Bb/i
BX7DS7zCa7zBW7zDHe7xgKe+I31H+o70Hek70nek70jfkb4jfUf6jvQd6TvS
d6TvSN+RviN9R/qO9B3pO9K3efbzGHqH3qF36B16h96hd+gdeofeoXfoHXqH
3qF36B16h96hd+gdeofeofeVPlf6XOlzpc+VPlf6XOlzpc+VPlf6XOlzpc+V
Plf6XOlzpc+VPvaY/TSNc/yMX/ArXuA3vMQrvMYbvMU73OEeD7jen3j9I69/
5PWPvP6R1z/y+kde/8jrH3n9I69/5PWPvP6R1z/y+kdef/nTcxflOtde70t4
9tk57Zr/Gvv3ifq9jc/OJXquznNhNV/fp/nse0l+76uup/k07nCH6/qp+4LP
vidaruvXcyU1X9e753g+O0dVvy+eQ/vs3F/9/i3///hL5yzb/47nVOvn4O81
85zwh3PX/D1znnP/8Pf+/cL3Cvxexod/Ln7PZT6N9c/J7xHVdVHfc/N7WnUd
1fcJ/V7cPf/5iT/vf8+/l/az/19/znpd9Xvq791Xt3++dXr/ZB63f241j9t1
UPO4XYf1833Ln/+GP+88br83NY/b+ZCax20/vuZx2w+tedz2o2oet/2Bmsdt
/bbmy/W++T1/Hn+Y/4H5ct1P/sifx21+uj9q96f157Hz3r9emdft87bu93+6
nf+P/w3FQ0c7
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxVnXf819P7/1/j+bS3zCiRlEoihBIiklAJoSgpKzur7JIRyo5UNGTLTBGy
svdOViJ7ZvM998+5n9v5/f44t6vrXOd5nevxeL7e7/LWnSYDjut5bK1SqRy+
XKVSr8S1Y1mp7BTWSuZFWEuH1Tns7RLWKuHXu4dYWuNsNcRlKrG+a1grhl/X
fH6psHYu4/PLVmK9S1irVmIP6muF1TUke4S1uvfRbzXr5GtXYr1bWFuEX+8V
4gYhrlGJfYOEyppGejWwB7UVwtqtjDOtU4k99gxr3UqMy4e4YSVqY671K1ED
Hqzn8+RNwlrZc80q8Q7ub+qszL6RPcg3sc5cLdSJjjZhNQqrcVgNK/F+7mhV
iTOxt6lnmbelkVpr68y1ZSV6wFybucfszb2T+9pZR99WRmbsEVbHsHYIq31Y
G6tpa+tNrW/q/du4x7kO6qG2nTq5c1t7bGLflmrqZGT23ZybuXbWi83D2tE6
Oro6K7N0tr43nz9j2xC3907m6FKJnwn67lqJ9S2cdXXf0+7eSd9DvWOPsPZS
A/321At09HJu5uruHud6qo3aPnqBT3vbg7w3tTBnj7D2q8TYM6x+6meWPupH
3wFh7WTeTa+Z40Dr6D7IuKtzb+25vuqn78HWyR8I68awJoR1iHei+f6wxls7
ylmZ8XC9QMcQ9Id59w3rMH3Bg0HW0X1kWPv6/EDrPD/YOp+vYyuxR++wTlYD
Mx4f1v7qPq4S6+RDraPp4rBOCOtEVx/9OMl4kPUDrO1fxjt5P6fYA79PNeLB
8ErUw7xnhNU/rAFhne5ngnyYe5w7B29C3yNCPEuP8OBMe5CfW4l1/DhfT48O
6yJ1MuNp3s8dF+gv3ozw7DFhjTRSG2Udby5RP7ovdI++53kn9422jseXGvFy
eliXhzXGdaqzXGYdn67WlzM9e4rnrtILalfoEZ6NtQf5gWV8Dm+u5V2E/OxK
/MyNVOs4fcSn6yqxTj5JnWi63jqabjDi5ZXeyRw36hd9x1sf4Tvj64Gvm4ne
Ocp3yB6f3al6hDeTK/Gzha+3qQd9U9zj3K36Re0W/cKbafYgv93nmPEOI57d
pwZmvCusa/Tm4DLW8fvmSvx8MMfd1vHmHiOe3aQ3nLtXj+g7wzp5nzJ+Hvma
e1Df8aBZ+A15pbBWDmuW96F7pr7T+zG18Rl52D3OzVEntUf0Bf9m24P8Ufc4
97g98GyeGphxrv7i0/NqwJsnPEvtqbAOChruDPEZ/cKPZ430eroS69Sesze9
XrAf388W+Az3vxLWQ2p9qRK/D+LNm+ph9pfd49wbaqP2ml7g2av2IH/L5/Dm
bSP+fejc3P2uXqDvHevkLzojcxxaxjrevB/Wk3rQt4w+8Tmar2b6fmCdfFr4
w8uYsMaG9ZFa8eMT/cWPT43c+ZkRDxYa0f25EZ8WGdH6hREPvjS+HtZiIz59
ZcTLr414840Rb35xbnR8pxd407+MEQ9+CLFfiIeE9bNe8MxPYb1n/mMl1t/z
/lm+p1/tjfe1apyPuX7zc4A3vxs/DusPIz79acSnv4z49LcRn/4x4tO/Rnz6
z4hP/IH3C32qVmNkjiXOxRz1apwLn4pqjPhUVmP81rme8/0tHfa/r0RvDitj
Hf/4jPI1PSmsZaqxjjfLVaNf+Ld6NepBB1/3S/SjQTXuoWmFanw3+Mf3hd/0
abVq9IXnV6zGOs+vUo11/FujGnvgR8Nq1IamtarRF/xYsxrr5IeXsY7WtmGt
E9a6RvyqmdfstXY19qC2ajXeyUzrh18PCL2WCrFRNUZ82iis5atRU5Owlq1G
PzaoRo/IN3SPc5v4vRBNG1ejTnxqag/y5ta5f9Nq9AVfN3c+Zm/s/dzRuhp9
QXdLz+J3KyO1zazj06Ayasa/Nu7Rt4V3ct+WYQ0M59YLsV01RjzYO6z2YW0b
1jbOgdatrONNB/Wgb2v3OLe9fjX1+SZ6094e5B19jt83djDi2a7qRMeOesS8
nayT76YefNrJOv7tbMSb7byTOXbRI/p2tt7Kd/aj3wO6eGcb39/Pfl/ZU83o
20O/8KmHd6C1m3uc20fN1PbSO3R3twd5T5/Dv15G/DjQ+Zi3t76ge1/r5F3D
2sI59rOOT/sb8eOIMnrD10EffaHvAdbJD/Ie/D7YiAdHlTHicX81o++QsHb3
/kHV+PlA66Huce5wNVM7rBq9Q/cAe5APdI9zg+2Bl8c5H/MeqUd4MyKsY8Ia
gi7PUjtaX3pb208PjjUe4HO9rR1vbzw+wYgHJxrx4GTuDvr7hji0GmO/sE4x
4sGpRnSfZsSn041oPcOIB0eXsTe+DnMPD87UL7w8R23oPss9vDnbSO1c60eF
Ndweh5v30ovz9QXd51kjH6lHeHOBEb9HGfHmQiPeHFPGiDcXh3WS3lxixJvR
Rry51Ig3lxnx5nIj3owx4s1YI35cYUTT9WrgnV+lR/hxtRE/rjHi2Th18sx1
ekR+rXXyu6xx9gZ748d0774yrBv1BT+OLWPEj4lhXaQHk4x4cJMRD2424sFk
Ix5MMeLBVCMeTDPiwS1G5hjvXMxxq3PhwW1GPLjdiAd3qwnP7lQzOu+wfq09
huvjPZ7Fg0VhvRrWa2HdH9YEtR5fxjnw42H1oOO+sIaU8dxMNVN7UF/w4wF7
kD/kHudm2QMP5jof8z6iF3jwTlhPWJ/tWWpzfE/48bhe3O7Z2+31mHVqT9qb
d/6UEZ+eNuLBs2EdF7TcG+K8aozoe86IH88b0fSCEa0vGtH3khE/Tixj7xlh
vezew3o8S01vhPWoml5zDw9eN1J70zqaXrHHLGu36MXbeoEHb3mW/F39w4P3
jHhwchkjHnwQ1gkhfybE+dUY8eNDI34sMOLHR0b8+NiIH58Y8eNTI358ZsSD
hUZ0fG7Ej29938z7hV7gwZdGfFpsxI9v1MwzX6uZ/Cvr5NVazKl/Z288+Ms5
uP+HsE4K2t8P8cdqjPjxkxE/fjbixy9G/PjViB9LjPjxmxE/fjfixx9G/PjT
yBynlHEu3snfzsXX4j9G/PjXiB98nvh65WuSHyQvVvd/1sn5fWlwGX9vrtWi
B3h2ahm9xo8ValEDsy9di17gwYq1uIeOMvx6aHjm+/DrZWqxjjfL16IXPL9U
LdZ5ftlarOPZSrXYAw8a1KIedKxSi17gwcq1WCdfoxbr6Ni0Fp9hb7VafGd4
s3otRnqtWos9qC1Xi3cy05q12ANv1qrFyGdhvVqcFa3rhlXUor7Ty+hRPayG
7nFug1rsi9ZGtagffevbg7yJdbzcqBa9Q3eLWpwVDWt7P3c0q0X9zN7Us3iw
sZHaJtbR3VIP0NTcPfpu6J3c18o6Ws8oY+TO3cPaMqx2YW2uZvRtFtZp4dw6
IW4VVmO1tqnFvXV9ppG1LfQO3W3tQb61z+HBNkbm2sFZ8WBbfUFre+vkO9bi
O0bfdtbxYHtjM2df3zk66gt9O1jfxPmW9T118k76nlXGO4bx74HUz+yd1Y/W
PdSPjl3c41xX9VPbTf3M0sUe5N18Dt17GtHXS/3Mspf60dfdOvnOYbV2jr2t
o3sfYwfnbum77al++vawTr6v96Bzv7B2sjef42/8nnpgLepn9gPUj9ZD1I+O
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
GvFjgRE/PjLix8dG/LipjBE/Pg3xhSL68ZkRPxYameM952KORc7Fn6m/MOLH
l8bXPXen7+8rfUH3YuvkX7uHN98Y8exbI37/qH50f69HzLJEbWj6wT3O/ap+
aj/rEd78ZA/ym8v4HB78jvchfhLif+pBx59F9AU//ihinXz1svI/SLUa1l/W
8elvI+/tF+9kjn/1i77/WCdvYI+a/b7UG/Kv9KYooy/4UZYxfhfWUmWM+LF0
GSMeLFPGiGfLljGie7kyRvyol7E3fZcv4x7zrlhG7/B15TLqYd7JZdzDsylh
/VZEz1YpYx19K5SxB8+jabHvfLUyeoq+Vct4lryT/3zWJqw19IC52oa1QVhN
+DsxZdSJvrXK6AUeNCrj3Ny5tnucW7+MOqk1LKMXeLCuPcgb+xxapxrRtwn/
rOI9Gzrras6BF2ht4X3MtZF1PgtNjbzP9byTOZqpjb4bW095XT3NvXNt3+c7
fr43Uw9aW6mH3u28mztbu8e5LZ2b2jR1TtXfRuZb+RyzbG1kxo7eQb/2esFc
21gnb6mPzLGtdfzYzripax3PdfAZ+m5vjZyf5/EzTn6mOd35mDf9DJSfA/Kv
i+CqYZ/hw+G8l4r/6uh/7DU1+PLCPfhymG7OwXPzHOw0fPlS8aP3P74c5ptz
cOqw2jDbiQ9fwzvgsxODTuQc3PhanoOlhkVubS8YYljiZe3RwDlWtxdM+3LW
4dRht+kFaw67Td69jMx3IzVzR+K/ieuqeX1r9G1aiTw2821YyQw6cQPv39hz
zAV73cx+zA53nVj3NAfcdgt1NveZtdxrXsnMOeeYF/66jfO1stbAe7gbFh/e
uq0zwWGTw0PDC++lBpjlrZy9neeae267SmbU2zkTe9t6Bzx0YtC3sRfzdvB5
Zu1ozhy7ViIvnfjzxKPv4Dnuhpnuok87eg6dO1cij93M+7k78eed9aOz51ZV
24Zq7uLd9IY77uvzcKjdnBtetatzwCzvo6Zu1jq4t7ce4F9i0LvbCx09fZ65
e5lzNww1fHTizxOPTtxXj7l/d3XCUO+vnj7m7azvVsn8eeLRD/QcDCos5gx1
9/Xuce7d43yw2YOd+7BKZHOZA375CDX3r0Q+Gn0DPYcHPDdIbwZ4Dj8O9xya
jrIXc8Nbw0fDr8NSw1TjwdGeY+4TPQdjDSsMMwyDfpx7+9uDHH6dvSG+j0He
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
a6sfFjvx6MQ11Lm2NfrBOK+nHtjqxKYT19G7Rp5DJ8x1Y3UyO7w0vtO7gbPC
WG+o5iY+s4J7TdTZ1HNoaK4XiUVv6rtp7N1oa+E57tjUHF4abniXWubPW6mz
pefQBjPdVi9aWWvo3ubqhL9ObDqxtZq39HnmaGeeWPHt1AaLnVj2rTyHHjjp
DrXMqG+tB+3N1/X+NmqmX2LWt/XcUmpoqN8dvJvesMg9nBX+dCc1w2R3cm6Y
6S5qhuveUd1d9K6N/iU2vbO90Lm7z6Onq3lixfdWDyx2Ytn38FwL79+hlhn1
burpbt7cekd10y8x63t5roP69vFsLzXzfZHPN59rZoW/3U/dcNj7Ojfc9EH6
Qr23utk7UN3w14lNP8Be6Ozr8+jpZ55Y8YHqga1OLPshnoOrhhs+vZYZ9UPV
M8B8V+/vo+6BtcysH+Y59obZCw8GeTcewFzDn8NqwyLDJMNsw1MfpU646qPV
PcQ8sehDaplFP7aWWXRyvIPnPqKWufTja5lFP1GtMNRD9eVka/3cO1nNp3ou
Me0n+P4Gq2eAPiU2/TSfSf+NRX5+g+bhegEPDRN8rZphqM+2H+zymeqBpx6h
T3DPZ6mZvfP1hV6JTT/XXui/wOfRPMo8seKXqgO2OrHsF3oOHXDYl9cyo36R
Xlxifoz3n6cv9EvM+mjPDVLHcP243Ls7+W56qRWu+irPwV9foT446XH2uMra
+e5dp1b8Sww68Wo13+DzaB5vzoz8HPTmWubPE49+o+eGef9YNU/0HJonmZ9h
fUwt8+eJR7/Jc2iFuZ7iuWnmPHeLOZrgrW+tZRb9FvXBUN9Vy1z6dDWzd6da
YbETg068TT/utIb+e+zFjPDQD6kTfnqGOazwi3o0w2fQDH99n3rgrx9Q30Pm
E927v5b585lqnmWO5tnmiTl/RD1zzNEHbz1HDXDWj9Uyf/54LfPnT9Qyfz63
lpn22bXMoj+pBjjrp9UABzxPfc9au9e9Z2uZOX+uljl2et3o8/eqGZ8Ss/6C
z6D5ZX1E8yvmaH7VPPHnr9Yyf/5aLfPnr9cyf/6G+mGu36xl/vytWubP365l
/vydWubP361l/vy9WubP33c+OOlPa5k/n68HC8zR/5H5i55N3Dkx8egfe449
WOQlal7oHYn3/kHNsJyfq/kLczR/aZ748y/VDE+9uJb5869qmT//upb5829q
mT//tpb58+9qmT//3nfwufMl/vxHNf9sjuZfzNH9u9oSf5549F89l3j+D9T8
h88kBhj2FW1w1n97P6z0n84NKw1Hvcj6X2pjj78cg37463/1CVb7H72g/p+a
YaXpxVyw0TDRaIazhqGGk4YbhhfGF/Z4Bv2w1zDYaOYcvDXalvM5fGGPc4k/
5w58gbMmRzOcNXlizmGt0QNbTY4+2GryxJ+Tw53DVsNaJ/68QT3z5+SJaV9J
X+Cs11QzbDV+oxWGuqHa1rVWuLduPTPn69Uzx04vPiNL2WMZfUrMeiOfwY8m
+oj+Dc3Rv5F54s83qmf+vGk98+cb1zN/3qye+XPyxJ831ws46xb1zJ9vWs/8
ect65s9b1TN/3trZYaK3qmf+vI3625rjxxbmjTybuHNi4tG3rGceG+64q/q3
8Y7Ee3dWP2x1e/VvZ47+7c0Tf759PfPnHeqZP+9Yz/z5DuqHw+5Uz/z5jvXM
n+9Uz/z5zr6P9s6X+PNd1N/FHP27mS/0a5HPV+LPE4++u+fwo5v68WlPc/R3
N0cnLPXe9cyid1cTXPW+9cyl76VO9nrpBYx1YtB72KuD9Z7qh7/u7Uyw0X3V
D2e9v7PDRB+iR/v7DN7AXPdRf+Ktu9jjYD06yHOJP++n5v725Sxc8klqgKce
qH6Y6wHOC6t8pPoHWuvp3hFqg7lODPoge/2PbS7j8+iErT7a+bjzxHrmzxOP
PsRz3by/v34c5zk0H2++s/kB9cyfJx79BM/BN8Lf/aj+oWpGP1zzKd5xmjl3
nm6e+PPT65k/P6Oe+fNh9cyfD69n/vzMeubPz6pn/vzseubPz6ln5vxcZ4KD
vkid/L3M89U50jwx5yP1j7OJKScmBn2U53o4x2B1X+IdifG+Vs2wp6PVfJl5
Ys4vq2fm/PJ6Zs7H1DNzPraemfMr6pk5v7KemfOr6pk5v1rN3H+N72C086F5
nPOh+XrzxJyTH+IzQ9UKY50Y9PGew48J1vBponlizieqDZ56svfD4t7k3PDR
0/VisrUr3LtF/TDXiVOfai903ubz6ISNvs254KFnqBueOjHoxNutwQU/o/67
PIf+u83Hev80dfJMYtDv8Rz3zLMX+u9zD80wyPerE4b6QbXNNE/M+cx6Zs4f
rmfmfFY9M+ez65k5f0RfH/SOxJ8/qh/w1o/VM08+V80w1o/rwVxzdD7lOXx8
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
/g==
           "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJzsunlUTvHf7h9lSjSgkVJCikrSQFxJRBSKpAyVIlKapTQPmud50jzP8zxq
TvOo+b43JQoZIzr7+fe31vNb61nrfM85f+if1rrWXrt97/f7c12v617x6jxW
0VtLQ0OTto6Ghpb8/arzv34I0Px/fv7p//R/+j/9n/5P/6f/0//p//R/+j/9
n/5P/6f/0//p//R/+j/9n/5P/6f/0//p//R/+j/9n/5P/6f/0//p//T/hG7l
YyEeFUzAdetx8RFlV2wNO/+pbZs7uJk/KcQ0EbjveYRRtPMaEnhLeR7Fq0Nv
j7bZcAeBbqF6gl9uPxT3Of78pSAIhe2tA4ztBOYf5T5pjZbFzosTjA5Ncvh/
7fP+0///9Tupz1ijFQmEZAnc+pATjkbGpl1CRBSObTObPmRLYIXhkt83UV+8
Pk9LV7k1ABLGinrDxQQYq8dFzz0wAXdzREVQlhl0fllNMzUQGPNc/3ZeQQtU
R4O5SD0deJh9Y/lL7olUV41E+eJR9I/Oqpq2Sv3bk//LOsepjdaUNQTe3575
oCGTiA/8CWEaVcl4xnT05N4DBBxZa07t3fAC7mnLf6qfx4O6bPdRzpXAn7nE
RL3dXthRI1mymOKLQ4N6cZ8LCIwv0ev2RZlhzN5Q85iAJXIiQiRrGwlsXNto
pmepCe6m+QGujXf+zf3/kC6y/4f6HwMq1kRWhawpzwML7Xsx3TcFiDx3D2la
VDAdXgp0lsvHSsMwmhwKcVKJ3m59HhUHnBm13//NAEPyahSnYw4iEk39BvUI
nLt2Pd7HNQiZsgz5TIyhyNpgdTshlcByL+t3Z5FnKA1pszs/ao9F3fbaH6Q/
OOXLfK65bALlLSW8r/3NkBp1qfFuMwEOxrwANlNV2Js1825bvoY4Genpb2S+
qEoO/Gm9w49rpfNzaev2/4/35Npt1cOspM80P2fYLmopi9nBN77UCDn8d/r/
a/P6n+oVa3hHT4OKjKUDv/OHCyDQ3eUXrViMqLbTDpJrqThUxxpsXlWMGi3O
o8l+ZahI/vViboiCqGy2t1/bSqF7RyPBZKYCL7YKTV7VpWKLL9u2xR35aN3G
oaOrXAghjlkBo3Ay31UO/U4Yc0ZmyNZ9asZu2M80y5NRRGDEPeVYg5Iphujj
bGpzzMGlKPiKi9Rtf6+1yC83BY9F7kCxgAW6gnkbXEoIpHlrD3S9McbxdKGt
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
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, BaseStyle -> 20, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {{
        FormBox["\"Latitude\"", TraditionalForm], None}, {
        FormBox["\"Longitude\"", TraditionalForm], None}}, 
     FrameTicks -> {{None, None}, {None, None}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Baskerville"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "GarnetDensityGradient", "GridLinesInFront" -> True}, 
     PlotRange -> {{2., 45.}, {3., 69.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
0fNJDLNwTv1tk0H8H6UOk6w=
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{
                    7.5, -47.471098265895954`}, 
                    Offset[{4., 0}, {7.5, -47.471098265895954`}]}, {{7.5, 
                    17.557803468208093`}, 
                    Offset[{4., 0}, {7.5, 17.557803468208093`}]}, {{7.5, 
                    82.58670520231213}, 
                    Offset[{4., 0}, {7.5, 82.58670520231213}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -99.49421965317919}, 
                    Offset[{2.5, 0.}, {7.5, -99.49421965317919}]}, {{
                    7.5, -86.48843930635837}, 
                    Offset[{2.5, 0.}, {7.5, -86.48843930635837}]}, {{
                    7.5, -73.48265895953757}, 
                    Offset[{2.5, 0.}, {7.5, -73.48265895953757}]}, {{
                    7.5, -60.47687861271676}, 
                    Offset[{2.5, 0.}, {7.5, -60.47687861271676}]}, {{
                    7.5, -34.46531791907514}, 
                    Offset[{2.5, 0.}, {7.5, -34.46531791907514}]}, {{
                    7.5, -21.459537572254334`}, 
                    Offset[{2.5, 0.}, {7.5, -21.459537572254334`}]}, {{
                    7.5, -8.453757225433526}, 
                    Offset[{2.5, 0.}, {7.5, -8.453757225433526}]}, {{7.5, 
                    4.552023121387283}, 
                    Offset[{2.5, 0.}, {7.5, 4.552023121387283}]}, {{7.5, 
                    30.5635838150289}, 
                    Offset[{2.5, 0.}, {7.5, 30.5635838150289}]}, {{7.5, 
                    43.569364161849705`}, 
                    Offset[{2.5, 0.}, {7.5, 43.569364161849705`}]}, {{7.5, 
                    56.57514450867052}, 
                    Offset[{2.5, 0.}, {7.5, 56.57514450867052}]}, {{7.5, 
                    69.58092485549133}, 
                    Offset[{2.5, 0.}, {7.5, 69.58092485549133}]}, {{7.5, 
                    95.59248554913295}, 
                    Offset[{2.5, 0.}, {7.5, 95.59248554913295}]}, {{7.5, 
                    108.59826589595376`}, 
                    Offset[{2.5, 0.}, {7.5, 108.59826589595376`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["50", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -47.471098265895954`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["100", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 17.557803468208093`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["150", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 82.58670520231213}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], FontFamily -> "Baskerville"], 
                    Directive[
                    Opacity[1], FontFamily -> "Baskerville"]}, StripOnInput -> 
                    False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], FontFamily -> "Baskerville"], 
                    Directive[
                    Opacity[1], FontFamily -> "Baskerville"]}, StripOnInput -> 
                    False]}, {}}, {
                    Directive[
                    Opacity[1], FontFamily -> "Baskerville"], 
                    Directive[
                    Opacity[1], FontFamily -> "Baskerville"]}, StripOnInput -> 
                   False], "GraphicsLabel", StripOnInput -> False]}, 
                "GraphicsTicks", StripOnInput -> False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Baskerville", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]}, 
      "BarLegend", DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"GarnetDensityGradient\"", ",", "#1"}], "]"}], 
                 "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", "172.61929321289062`"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Baskerville\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.708973834973796*^9, 3.708973842505178*^9}, 
   3.708974371759821*^9},ExpressionUUID->"7ce1547d-1f31-4745-aa41-\
fff05d1291d7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sea Level Pressure", "Subchapter",
 CellChangeTimes->{{3.708970424081317*^9, 
  3.708970452189996*^9}},ExpressionUUID->"2347d23c-e1b6-4fc9-a3ee-\
39a9ec69176b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/lambda/Documents/Data/NCEP_Reanalysis/SLP\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"year", "=", "1948"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"slp", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"\"\<slp.\>\"", "<>", 
       RowBox[{"ToString", "[", "year", "]"}], "<>", "\"\<.nc\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Datasets\>\"", ",", "\"\<slp\>\""}], "}"}]}], "]"}], "[", 
    
    RowBox[{"[", 
     RowBox[{";;", ",", 
      RowBox[{"13", ";;", "28"}], ",", 
      RowBox[{"89", ";;", "99"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mlat", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"\"\<slp.\>\"", "<>", 
       RowBox[{"ToString", "[", "year", "]"}], "<>", "\"\<.nc\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Datasets\>\"", ",", "\"\<lat\>\""}], "}"}]}], "]"}], "[", 
    
    RowBox[{"[", 
     RowBox[{"13", ";;", "28"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mlon", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"\"\<slp.\>\"", "<>", 
       RowBox[{"ToString", "[", "year", "]"}], "<>", "\"\<.nc\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Datasets\>\"", ",", "\"\<lon\>\""}], "}"}]}], "]"}], "[", 
    
    RowBox[{"[", 
     RowBox[{"89", ";;", "99"}], "]"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.708959791381815*^9, 3.7089598481785717`*^9}, {
   3.70895994790478*^9, 3.708959966839148*^9}, {3.7089600299907207`*^9, 
   3.708960030533599*^9}, {3.708961443788425*^9, 3.708961512203238*^9}, {
   3.708961567207197*^9, 3.708961596034856*^9}, {3.708961631086817*^9, 
   3.7089616527821283`*^9}, 3.708966973509227*^9, {3.708967264569398*^9, 
   3.7089672872645807`*^9}, {3.708967714332817*^9, 3.708967718787067*^9}, {
   3.7089678152001133`*^9, 3.708967830695567*^9}, {3.708967880671748*^9, 
   3.70896788139986*^9}, {3.7089679232224207`*^9, 3.708967923556682*^9}, {
   3.708968007786563*^9, 3.7089680079380007`*^9}, {3.70896804490545*^9, 
   3.708968064800374*^9}, {3.70896942808259*^9, 3.708969496832363*^9}, {
   3.7089695680766706`*^9, 3.708969688381474*^9}, {3.708969770018416*^9, 
   3.708969824127743*^9}, {3.708969877167251*^9, 3.708969994354363*^9}, {
   3.708970065555189*^9, 3.708970066377331*^9}, {3.708970289855582*^9, 
   3.708970374823195*^9}, {3.708970858610159*^9, 3.708970896511447*^9}, {
   3.708970993397737*^9, 3.7089709942844343`*^9}, {3.708971668039818*^9, 
   3.708971671967402*^9}, {3.7089717147794447`*^9, 3.708971746611197*^9}, {
   3.708971891555669*^9, 3.7089718925223017`*^9}, {3.7089719539205933`*^9, 
   3.708971968206773*^9}, {3.708972193485631*^9, 3.708972194371697*^9}, {
   3.708972809493424*^9, 3.708972809954966*^9}, {3.708972848370655*^9, 
   3.708972915519472*^9}, {3.708973319827838*^9, 3.708973371597005*^9}, {
   3.708973632389258*^9, 3.708973640500925*^9}, {3.708973732975754*^9, 
   3.70897375167938*^9}, {3.708974375948412*^9, 
   3.708974376643869*^9}},ExpressionUUID->"549ebc57-78e7-4749-944b-\
7642fe65feb8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"slp", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mlat", ",", "mlon"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
      "SetDirectory", "[", 
       "\"\</Users/lambda/Documents/Data/NCEP_Reanalysis/SLP\>\"", "]"}], ";",
       "\n", "\t", 
      RowBox[{"mlat", "=", 
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{
          RowBox[{"\"\<slp.\>\"", "<>", 
           RowBox[{"ToString", "[", "year", "]"}], "<>", "\"\<.nc\>\""}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Datasets\>\"", ",", "\"\<lat\>\""}], "}"}]}], "]"}], 
        "[", 
        RowBox[{"[", 
         RowBox[{"13", ";;", "28"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"mlon", "=", 
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{
          RowBox[{"\"\<slp.\>\"", "<>", 
           RowBox[{"ToString", "[", "year", "]"}], "<>", "\"\<.nc\>\""}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Datasets\>\"", ",", "\"\<lon\>\""}], "}"}]}], "]"}], 
        "[", 
        RowBox[{"[", 
         RowBox[{"89", ";;", "99"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", "data", "}"}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"data", "=", 
            RowBox[{
             RowBox[{"Import", "[", 
              RowBox[{
               RowBox[{"\"\<slp.\>\"", "<>", 
                RowBox[{"ToString", "[", "year", "]"}], "<>", "\"\<.nc\>\""}],
                ",", 
               RowBox[{"{", 
                RowBox[{"\"\<Datasets\>\"", ",", "\"\<slp\>\""}], "}"}]}], 
              "]"}], "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", 
               RowBox[{"13", ";;", "28"}], ",", 
               RowBox[{"89", ";;", "99"}]}], "]"}], "]"}]}], ";", "\n", 
           "\t\t", 
           RowBox[{"data", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"data", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ";;", 
                  RowBox[{"i", "+", "3"}]}], "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "data", "]"}], ",", "4"}], "}"}]}], 
             "]"}]}]}]}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{"year", ",", "1948", ",", "2006"}], "}"}]}], "]"}]}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.708959791381815*^9, 3.7089598481785717`*^9}, {
   3.70895994790478*^9, 3.708959966839148*^9}, {3.7089600299907207`*^9, 
   3.708960030533599*^9}, {3.708961443788425*^9, 3.708961512203238*^9}, {
   3.708961567207197*^9, 3.708961596034856*^9}, {3.708961631086817*^9, 
   3.7089616527821283`*^9}, 3.708966973509227*^9, {3.708967264569398*^9, 
   3.7089672872645807`*^9}, {3.708967714332817*^9, 3.708967718787067*^9}, {
   3.7089678152001133`*^9, 3.708967830695567*^9}, {3.708967880671748*^9, 
   3.70896788139986*^9}, {3.7089679232224207`*^9, 3.708967923556682*^9}, {
   3.708968007786563*^9, 3.7089680079380007`*^9}, {3.70896804490545*^9, 
   3.708968064800374*^9}, {3.70896942808259*^9, 3.708969496832363*^9}, {
   3.7089695680766706`*^9, 3.708969688381474*^9}, {3.708969770018416*^9, 
   3.708969824127743*^9}, {3.708969877167251*^9, 3.708969994354363*^9}, {
   3.708970065555189*^9, 3.708970066377331*^9}, {3.708970289855582*^9, 
   3.708970374823195*^9}, {3.708970858610159*^9, 3.708970896511447*^9}, {
   3.708970993397737*^9, 3.7089709942844343`*^9}, {3.708971668039818*^9, 
   3.708971671967402*^9}, {3.7089717147794447`*^9, 3.708971746611197*^9}, {
   3.708971891555669*^9, 3.7089718925223017`*^9}, {3.7089719539205933`*^9, 
   3.708971968206773*^9}, {3.708972193485631*^9, 3.708972194371697*^9}, {
   3.708972809493424*^9, 3.708972809954966*^9}, {3.708972848370655*^9, 
   3.708972915519472*^9}, {3.708973319827838*^9, 3.708973371597005*^9}, {
   3.708973632389258*^9, 3.708973640500925*^9}, {3.708973732975754*^9, 
   3.70897375167938*^9}, {3.708974375948412*^9, 3.708974376643869*^9}, {
   3.708974745300137*^9, 3.708974774027835*^9}, {3.708974821472052*^9, 
   3.708974966006084*^9}},ExpressionUUID->"a48a2a06-4b55-4cbd-a00c-\
a21158127388"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", 
  RowBox[{
   RowBox[{"Mean", "[", 
    RowBox[{"slp", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"1", ";;", "4"}], ",", ";;", ",", ";;"}], "]"}], "]"}], "]"}], 
   ",", "\n", "\t", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
   RowBox[{"BaseStyle", "\[Rule]", "20"}], ",", "\n", "\t", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\n", "\t", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Longitude\>\"", ",", "\"\<Latitude\>\""}], "}"}]}], ",", 
   "\n", "\t", 
   RowBox[{"FrameTicks", "\[Rule]", "None"}], ",", "\n", "\t", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.708961436851459*^9, 3.708961469913108*^9}, {
   3.708961521285824*^9, 3.708961558102747*^9}, {3.7089616045252047`*^9, 
   3.70896162535809*^9}, {3.708961661273682*^9, 3.708961665602247*^9}, {
   3.708963056808201*^9, 3.7089630843849583`*^9}, {3.708966619133608*^9, 
   3.708966673619586*^9}, {3.708967839372321*^9, 3.708967839558928*^9}, {
   3.708967948594029*^9, 3.708967950356448*^9}, {3.708969457423686*^9, 
   3.7089694576333313`*^9}, {3.708969747560224*^9, 3.708969749377286*^9}, {
   3.708969938205559*^9, 3.7089699415373*^9}, {3.708970000656273*^9, 
   3.708970020282168*^9}, 3.708970197750759*^9, {3.708970341060319*^9, 
   3.708970343031487*^9}, {3.7089703813540363`*^9, 3.708970396805833*^9}, {
   3.708970466415945*^9, 3.70897063147443*^9}, {3.7089706880134153`*^9, 
   3.7089707056197557`*^9}, {3.7089709364819613`*^9, 
   3.7089709487970657`*^9}, {3.708971276649775*^9, 3.708971328251451*^9}, {
   3.708971652731172*^9, 3.7089716926459227`*^9}, {3.708971902773859*^9, 
   3.708971906361368*^9}, {3.708972040308137*^9, 3.708972060615074*^9}, {
   3.708972189320063*^9, 3.708972189455698*^9}, {3.708972547365356*^9, 
   3.7089725478391037`*^9}, {3.708972831221846*^9, 3.7089728405767517`*^9}, {
   3.708973764089172*^9, 3.708973813302989*^9}, {3.7089738888094053`*^9, 
   3.708973946089912*^9}, {3.708974031927209*^9, 3.7089740446793528`*^9}, {
   3.708974381585163*^9, 
   3.708974383147728*^9}},ExpressionUUID->"3aad3c34-dbd9-4a54-bcad-\
0ce616da0e84"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    RasterBox[CompressedData["
1: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

     "], {{0, 0}, {11, 16}}, {0, 1}], BaseStyle -> 20, Frame -> True, 
    FrameLabel -> {
      FormBox["\"Latitude\"", TraditionalForm], 
      FormBox["\"Longitude\"", TraditionalForm]}, 
    FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Baskerville"}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic}],
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
PQqPxS7U8ngT/x+q84bV
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.500000000000002, -112.49999999999997`}, {
                7.500000000000002, 112.50000000000009`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.500000000000002, 102.24072660470989`}, 
                    
                    Offset[{4., 0}, {7.500000000000002, 
                    102.24072660470989`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["100000", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000002, 
                    102.24072660470989`}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], FontFamily -> "Baskerville"]}, StripOnInput -> 
                    False]}, {}}, {
                    Directive[
                    Opacity[1], FontFamily -> "Baskerville"]}, StripOnInput -> 
                   False], "GraphicsLabel", StripOnInput -> False]}, 
                "GraphicsTicks", StripOnInput -> False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Baskerville", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]}, 
      "BarLegend", DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   
                   RowBox[{
                    "System`PlotThemeDump`$ThemeStylesheetMatrix", ",", 
                    "#1"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.7416846148772661`", ",", "1.`"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Baskerville\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"0.9882216526302942`", ",", "100000.`"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.708973773043675*^9, 3.70897381391739*^9}, {
   3.708973854554984*^9, 3.708973946491226*^9}, 3.7089739906198387`*^9, {
   3.708974040420795*^9, 3.708974054675234*^9}, 
   3.708974383517585*^9},ExpressionUUID->"afb76fe1-7462-49f1-9940-\
749666e3f839"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0b4a03fc-221a-4d34-bc79-b8ad606e8df7"],

Cell[CellGroupData[{

Cell["Network Structure", "Section",
 CellChangeTimes->{{3.708958355050888*^9, 
  3.708958365784823*^9}},ExpressionUUID->"d95a58a0-7a32-4190-8bcd-\
ed383a44f65a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Precip", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tempt", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", "#", "]"}], ",", "NumberQ"}], "]"}], 
           "&"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"precip", ",", "1"}], "]"}]}], "]"}]}], ",", "m", ",", 
       "v"}], "}"}], ",", "\n", "\t ", 
     RowBox[{
      RowBox[{"v", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Variance", "[", "tempt", "]"}], "]"}]}], ";", "\n", "\t ", 
      RowBox[{"m", "=", 
       RowBox[{"Mean", "[", "tempt", "]"}]}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "-", "m"}], ")"}], "/", "v"}], "&"}], ",", "tempt"}], 
       "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Dimensions", "[", "Precip", "]"}]}], "Code",
 CellChangeTimes->{{3.708975250351869*^9, 3.70897531875828*^9}, {
   3.708976082779585*^9, 3.708976157561586*^9}, {3.708976307841687*^9, 
   3.7089763124593277`*^9}, 3.7089772055452433`*^9, {3.708977271737328*^9, 
   3.708977335398526*^9}},ExpressionUUID->"d8864132-f50b-4850-a22b-\
1332cd54b466"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21550", ",", "1450"}], "}"}]], "Output",
 CellChangeTimes->{3.70897723109519*^9, 3.708977313043192*^9, 
  3.70897735381214*^9},ExpressionUUID->"a8d79674-30a4-4105-b529-be677b1e2516"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SLP", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tempt", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"slp", ",", "1"}], "]"}]}], ",", "m", ",", "v"}], "}"}], ",",
      "\n", "\t", 
     RowBox[{
      RowBox[{"v", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Variance", "[", "tempt", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"m", "=", 
       RowBox[{"Mean", "[", "tempt", "]"}]}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "-", "m"}], ")"}], "/", "v"}], "&"}], ",", "tempt"}], 
       "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Dimensions", "[", "SLP", "]"}]}], "Code",
 CellChangeTimes->{{3.708975255455729*^9, 3.7089752586303797`*^9}, {
  3.7089753287833853`*^9, 3.708975342467791*^9}, {3.708976172845026*^9, 
  3.708976191847447*^9}, {3.7089772152207727`*^9, 3.708977224509725*^9}, {
  3.7089773179395723`*^9, 
  3.7089773779809237`*^9}},ExpressionUUID->"ad602826-45d8-4ee0-8f07-\
fd7af1c291e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21550", ",", "16", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{
  3.708975258903439*^9, 3.708975342986308*^9, {3.708976270803602*^9, 
   3.70897628543233*^9}, 3.7089772334765253`*^9, 
   3.7089773792244987`*^9},ExpressionUUID->"1792837f-cf99-4ee6-a91a-\
a4d47232df29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CNN", "=", 
  RowBox[{"NetInitialize", "[", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"1", ",", " ", "2"}], "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", "1"}], "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"1", ",", " ", "2"}], "]"}], ",", " ", "\n", "\t\t\t\t\t\t ", 
       
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", " ", "1"}], "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"FlattenLayer", "[", "]"}], ",", " ", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"DropoutLayer", "[", "]"}], ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"BatchNormalizationLayer", "[", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", "200", ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", "200", ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", "450", ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", "900", ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", "\n", 
       "\t\t\t\t\t\t ", "1450", ",", "\n", "\t\t\t\t\t\t ", 
       RowBox[{"BatchNormalizationLayer", "[", "]"}]}], "}"}], ",", "  ", 
     "\n", "\t\t\t\t\t", 
     RowBox[{"\"\<Input\>\"", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "16", ",", "11"}], "}"}]}]}], "]"}], "]"}]}]], "Code",\

 CellChangeTimes->CompressedData["
1:eJwdz30s1HEcB3BhHuch1SVPRUgYdaXV6dRvda07QrYcuoxDJzGK7DxUxFCT
kYdE6ZZS2loPUqudzkKhrqR5TChPcYxZOi6dfu/vH5+9/ni//3h/bIXxAVGa
Ghoa++iD02LtXOUlBbW+x6EA2jNcK6Ab21wCecPLTXBF7tQMk1JEQ3CeUUc0
qLq4DH93xaihz73XPou0dg4H/KCzd+seNW2c9S42TGddPwAHHndyYJUwkwfL
Px/yg7dPjojhr03cVCgsjRyAbzsOf4ch7hu7V2jVmtPEdnG1o2aWgsoRLhJr
Q7Y6atGyZo5vgbE1RSwYUdvgCbl7X1KwIWKMA/nyuq+b0dvf2gslLrkMR1qq
4CrRanZVuG2OgrJgjglhY6G03o32iNTzBczpzm6GvpbsFmh2aqIDSlpvdEJe
mmoYdpW1jcB8m/AZaO7FnIMZDbMqSPHZapj8XFfPnfaDJNgQ/tBfaw6rpiet
oYCf6QidDQeJ0aHMclic8ZNoo+ElgXN1OtXwYURlE1zyam+BPpw3Rttoe7VP
G8OYqfBmHnpR8e+gv0rUAxmidKLEJHEcSqe/TMKbqUZL0DXcjHi3e8TYm1bn
kaUp3DBfbQWDt8uIOaJvzjDuGMsFptfpesArfZHEbGkxFzbyFd4w82lnCOQE
Op2AqilRxVH8GZBVCWNk/Afw4EIiMXpyjZ0yT0EFTlgTddoSEuD7dqOz8I98
XTFs8z5XQfKWsgHYyjEdhJMZn/QXaYN4SmLS/A4buCJ7RSzRErChwdQSsT2s
Ucskn95B/SVeexJ/H3bolRJLfIX/VtPWcIeIRWFKgd8dBVV/2S4UhjLdhfDj
hbRYOBosT4aDMoEY1ui6xfnTJln0ElUeO8/D+X5eBkzpD/YIot0tjiAK5Wdy
od2t3DyoHl3og00FVv2w8FnmGLQf5Y7D/wNlDY8=
  
  "],ExpressionUUID->"5cf646f5-6dfe-4d55-b21d-a6a5990f6418"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 2, 2}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {2, 2}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {16, 11}, 
               "$OutputSize" -> {15, 10}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 16, 11}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 15, 10}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 15, 10}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 15, 10}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 15, 10}, NeuralNetworks`RealT]]], 
           "3" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {1, 1}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 1, "$InputSize" -> {15, 10}, 
               "$OutputSize" -> {14, 9}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 15, 10}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 14, 9}, NeuralNetworks`RealT]]], 
           "4" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 2, 2}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {2, 2}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {14, 9}, 
               "$OutputSize" -> {13, 8}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 14, 9}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 13, 8}, NeuralNetworks`RealT]]], 
           "5" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 13, 8}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 13, 8}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 13, 8}, NeuralNetworks`RealT]]], 
           "6" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {1, 1}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 1, "$InputSize" -> {13, 8}, 
               "$OutputSize" -> {12, 7}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 13, 8}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 12, 7}, NeuralNetworks`RealT]]], 
           "7" -> Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {84}, 
               "$InputSize" -> {1, 12, 7}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 12, 7}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]]], "8" -> 
           Association[
            "Type" -> "Dropout", "Arrays" -> Association[], "Parameters" -> 
             Association["DropoutProbability" -> 0.5], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]]], "9" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 84, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]]], "10" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{200, 84}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {200}, "$OutputSize" -> 200, "$InputSize" -> 
               84, "$InputDimensions" -> {84}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "11" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {200}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "12" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{200, 200}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {200}, "$OutputSize" -> 200, "$InputSize" -> 
               200, "$InputDimensions" -> {200}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "13" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {200}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "14" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{450, 200}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{450}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {450}, "$OutputSize" -> 450, "$InputSize" -> 
               200, "$InputDimensions" -> {200}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{450}, NeuralNetworks`RealT]]], "15" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {450}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{450}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{450}, NeuralNetworks`RealT]]], "16" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{900, 450}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{900}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {900}, "$OutputSize" -> 900, "$InputSize" -> 
               450, "$InputDimensions" -> {450}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{450}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{900}, NeuralNetworks`RealT]]], "17" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {900}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{900}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{900}, NeuralNetworks`RealT]]], "18" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1450, 900}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {1450}, "$OutputSize" -> 1450, 
               "$InputSize" -> 900, "$InputDimensions" -> {900}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{900}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT]]], "19" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT],
                "Beta" -> 
               NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 1450, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT]], 
             "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1450}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "12", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "13", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "14", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "15", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "16", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "17", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "19", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "18", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "19", "Outputs", "Output"]}, 
         "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{1, 16, 11}, 
             NeuralNetworks`RealT]], "Outputs" -> 
         Association[
          "Output" -> NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"16\"", "\"11\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"15\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"15\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"14\"", "\"9\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"13\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"13\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"12\"", "\"7\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"84\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"84\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"84\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"14\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"450\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"15\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"450\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"16\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"900\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"17\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"900\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"18\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1450\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"19\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1450\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1450\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{270., {153.4169921875, 158.5830078125}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{{3.708975945292562*^9, 3.70897598189459*^9}, 
   3.708976016673505*^9, {3.70897606040963*^9, 3.708976067313654*^9}, 
   3.708977387556271*^9, 3.708978031515252*^9, 3.7089781787048388`*^9, 
   3.708993964412718*^9, 3.708994628792252*^9, 3.708995282128604*^9, 
   3.70899537931745*^9},ExpressionUUID->"b36619a8-7473-4730-9375-\
04e3f77406ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "SLP", "]"}]], "Code",
 CellChangeTimes->{{3.708978743732592*^9, 
  3.70897874569932*^9}},ExpressionUUID->"892efb4f-77cb-4af5-97ca-\
8f5ebba48fdd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21550", ",", "16", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{
  3.70897874607178*^9},ExpressionUUID->"95edc650-194c-4fbf-9dea-9d1c0154d649"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ptraining", "=", 
  RowBox[{"Floor", "[", 
   RowBox[{
    RowBox[{"Length", "[", "SLP", "]"}], "*", "0.7"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.708978766100025*^9, 
  3.7089787811860447`*^9}},ExpressionUUID->"959b815f-055e-44b3-be36-\
8e9806e02522"],

Cell[BoxData["15084"], "Output",
 CellChangeTimes->{
  3.708978781551146*^9},ExpressionUUID->"595ae429-16f0-4cc1-8134-\
cd92561562c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ann", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"CNN", ",", "\n", "\t", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "#", "}"}], "&"}], ",", 
       RowBox[{"SLP", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "ptraining"}], "]"}], "]"}]}], "]"}], " ", "->", 
     " ", 
     RowBox[{"Precip", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "ptraining"}], "]"}], "]"}]}], ",", "\n", "\t", 
    RowBox[{"ValidationSet", "\[Rule]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"SLP", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "}"}], "\[Rule]", 
        RowBox[{"Precip", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "ptraining", ",", 
         RowBox[{"Length", "[", "SLP", "]"}]}], "}"}]}], "]"}]}], ",", "\n", 
    "\t", 
    RowBox[{"Method", "\[Rule]", "\"\<ADAM\>\""}], ",", "\n", "\t", 
    RowBox[{"BatchSize", "\[Rule]", "300"}], ",", "\n", "\t", 
    RowBox[{"MaxTrainingRounds", " ", "->", " ", "2000"}]}], "]"}]}]], "Code",\

 CellChangeTimes->{{3.70897625314581*^9, 3.708976264332445*^9}, {
   3.7089773971422043`*^9, 3.708977460332973*^9}, {3.708977492046638*^9, 
   3.70897749647648*^9}, {3.708977589378625*^9, 3.708977593669948*^9}, {
   3.708977682842225*^9, 3.708977683384712*^9}, {3.708978356739386*^9, 
   3.708978370149448*^9}, {3.708978750355654*^9, 3.7089788685375347`*^9}, {
   3.708978908762999*^9, 3.7089789133219967`*^9}, {3.708979163189739*^9, 
   3.708979163582695*^9}, 3.7089792075445232`*^9, {3.708979305341112*^9, 
   3.708979306014999*^9}, 3.708979365853984*^9, 3.70897951794587*^9, {
   3.708994231447915*^9, 3.7089942316481943`*^9}, {3.70899552823413*^9, 
   3.708995528746657*^9}},ExpressionUUID->"016a3e58-fa62-4dd5-9ccb-\
3932bba25613"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 2, 2}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {2, 2}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {16, 11}, 
               "$OutputSize" -> {15, 10}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 16, 11}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 15, 10}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 15, 10}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 15, 10}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 15, 10}, NeuralNetworks`RealT]]], 
           "3" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {1, 1}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 1, "$InputSize" -> {15, 10}, 
               "$OutputSize" -> {14, 9}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 15, 10}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 14, 9}, NeuralNetworks`RealT]]], 
           "4" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1, 1, 2, 2}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputChannels" -> 1, "KernelSize" -> {2, 2}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {14, 9}, 
               "$OutputSize" -> {13, 8}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 14, 9}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 13, 8}, NeuralNetworks`RealT]]], 
           "5" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {1, 13, 8}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 13, 8}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 13, 8}, NeuralNetworks`RealT]]], 
           "6" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {1, 1}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 1, "$InputSize" -> {13, 8}, 
               "$OutputSize" -> {12, 7}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 13, 8}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1, 12, 7}, NeuralNetworks`RealT]]], 
           "7" -> Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {84}, 
               "$InputSize" -> {1, 12, 7}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 12, 7}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]]], "8" -> 
           Association[
            "Type" -> "Dropout", "Arrays" -> Association[], "Parameters" -> 
             Association["DropoutProbability" -> 0.5], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]]], "9" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 84, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]]], "10" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{200, 84}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {200}, "$OutputSize" -> 200, "$InputSize" -> 
               84, "$InputDimensions" -> {84}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "11" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {200}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "12" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{200, 200}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {200}, "$OutputSize" -> 200, "$InputSize" -> 
               200, "$InputDimensions" -> {200}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "13" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {200}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]]], "14" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{450, 200}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{450}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {450}, "$OutputSize" -> 450, "$InputSize" -> 
               200, "$InputDimensions" -> {200}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{450}, NeuralNetworks`RealT]]], "15" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {450}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{450}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{450}, NeuralNetworks`RealT]]], "16" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{900, 450}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{900}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {900}, "$OutputSize" -> 900, "$InputSize" -> 
               450, "$InputDimensions" -> {450}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{450}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{900}, NeuralNetworks`RealT]]], "17" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {900}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{900}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{900}, NeuralNetworks`RealT]]], "18" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1450, 900}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {1450}, "$OutputSize" -> 1450, 
               "$InputSize" -> 900, "$InputDimensions" -> {900}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{900}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT]]], "19" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT],
                "Beta" -> 
               NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.001, "Channels" -> 1450, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT]], 
             "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1450}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "12", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "13", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "14", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "15", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "16", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "17", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "19", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "18", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "19", "Outputs", "Output"]}, 
         "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{1, 16, 11}, 
             NeuralNetworks`RealT]], "Outputs" -> 
         Association[
          "Output" -> NeuralNetworks`TensorT[{1450}, NeuralNetworks`RealT]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"16\"", "\"11\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"15\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"15\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"14\"", "\"9\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"13\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"13\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"12\"", "\"7\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"84\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"84\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"84\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"200\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"14\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"450\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"15\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"450\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"16\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"900\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"17\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"900\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"18\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1450\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"19\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1450\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1450\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{270., {153.4169921875, 158.5830078125}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.708978916432105*^9, 3.708979145242076*^9, 
  3.7089792047979803`*^9, 3.7089792926792307`*^9, 3.708979357179661*^9, 
  3.708979510146618*^9, 3.708993895021154*^9, 3.708993947643754*^9, 
  3.708994141151445*^9, 3.708994433556344*^9, 3.708994793857929*^9, 
  3.708995359614706*^9, 3.7089955195157433`*^9, 
  3.708995653871689*^9},ExpressionUUID->"0886b0de-1945-4f9e-bef5-\
8fce03cacdcc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"day", "=", "365"}], ";"}], "\n", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"Precip", "[", 
       RowBox[{"[", "day", "]"}], "]"}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"ann", "@", 
       RowBox[{"{", 
        RowBox[{"SLP", "[", 
         RowBox[{"[", "day", "]"}], "]"}], "}"}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Precip", "[", 
         RowBox[{"[", "day", "]"}], "]"}], ",", 
        RowBox[{"ann", "@", 
         RowBox[{"{", 
          RowBox[{"SLP", "[", 
           RowBox[{"[", "day", "]"}], "]"}], "}"}]}]}], "}"}], "]"}]}], "}"}],
    ",", "\n", "\t", 
   RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.70897759584734*^9, 3.70897767661819*^9}, {
  3.7089779968395576`*^9, 3.708978016454318*^9}, {3.708978076022711*^9, 
  3.708978140023714*^9}, {3.708994282965407*^9, 3.708994300530377*^9}, {
  3.708994439779907*^9, 3.7089946093177843`*^9}, {3.708994799821095*^9, 
  3.708994868691698*^9}, {3.708994899594088*^9, 3.7089950968775883`*^9}, {
  3.7089951302094517`*^9, 3.7089952003992443`*^9}, {3.708995233277501*^9, 
  3.70899526261383*^9}},ExpressionUUID->"d0aae44a-bd45-46c0-afa9-\
9364d8530135"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{}, {{{}, {
           {RGBColor[0.65, 0., 0.], PointSize[0.006944444444444445], 
            AbsoluteThickness[1.6], 
            StyleBox[PointBox[CompressedData["
1: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
k6PrSf/J0Py+qPPvoJek/2QEfVFqPWdA8yuSkVKV1iMzlM5XlYwvZzv/u32e
cG0yspz1p6gpk700JuPKwmOGA4xovdZk/G5Zs8Ijl/X7k/E4xELbawvZT0cy
8o+U7vF9TPJKpUAjerrnMWfCA1NgZqkglT6V6T8FRgf0nL950P4KKaj/6ct3
KaNxlRSsuJzheuEj6UcjBWPHGQ6zMSKsnYLluk4tqvWEdVIQsCXHdMAowkiB
4WLZ2NDHrP5LwZ8516yXsf6ZSQqqwoONL+kQPxYpyFgwwlBXm7BtCj5wfy/f
t5X4dknBL8sRXH3VBtJ/Cir66xsuViP+g1LwckfmLp01rP5LwaqXw8yMLFj9
l4KTWuEHa+WIT14Kauu3tHwsJ5yZgmVXCxumlhDOToHOs/46T34Tzk3BpK2V
qUZWtF6h5HzLL9qtsqD9ilOwIWx88Iy/zP9T4KwjLfUugfioSIFx2LV5U5n9
VaXgbRF/fY6QxmtToHXL7/OtLsKNKThhcL4ldjmL/ymI5owyfpXP7v8p2Hxl
28zAPoQ7UjBS4+jgy+ms/5eKkxZaaZfesfifCj2Ho7ekTzD9p6JY/bij3Fim
/1QEHB0SeOsB8auSirKO6d1nxr8m/adi0N2yGXY+pA/tVDwNj5PmVBD/Oqlw
Ku8fOn4J8YVUbNBaraDxgcYNUxFt16L1tZLWN0mFePjZIEtDwhapiLu413ju
alrfNhWGr044vlJl+pfMr7bcLYim9b1SIWd12p6Xy/w/FTmZGy3/vSD5OakY
td9nx9gylv9TceWYW5ssq2d4qfj5QWvYonuEM1PxusfbcMUD1v9PReHky9FH
VGg8NxWXuw4N62pj/Z9USN82ejF+JOv/pSKrLL6y0Ybd/1ORHdN+xIj1BytS
EfLzzAPddaz/kwoFnaBtF3cTv7WpcFYXIiaA6ofGVFRON526es+HXtyaiqlN
3dXXF1E/tD0Vuyv6CnY5E78dqdj62WL+WwXiSyoNkza9u7gxl/DANLi2RGWU
rSW+5dIgG/TxQMUesl+FNGg9GHJs2yR6XiUNMvaHpFtbaFwjDQbjfmncMSJ5
tNPw2uz36q3z2Pu/NFz+4/lsYyO7/6Vh+KXds6LXs/5fGmJnCHd5LGf9vzQs
WBtkuimR3f/S8N/2/+oj2fsY2zRk353w5+d0lv/T8EgYM/XRNcJeaTjjMvXd
7yh2/0/D/mHzeXpTiF9OGhp4s9f1c2T1fxqeB5fr5byv6+WTl4aF9tLzGite
9+LMNNxLf6/iY8G+z0rDPMv6vgPyia9cCR/rNOSPZREuTJPcd0vtc24RX8Vp
uDNa8+HmJBovT8M670UHDxVR/VSRhncvP8x9spv1f9Nw63BE3MNprP+bBkHM
Yl8rpWuk/zS83FJ4qWYc1WOtafDes+GPBns/0p6Gz1rhkX1uMP+X6CPy+pwd
z1n/Lx2zNR2arW+w/n86HJ8quv5h9blcOnTGBvbjNFM8UEjHx5ntW+/JsPif
joJpbzPNDWm+Rjri7FaYBR5n8T8dZduXfL29i57XSceBYwceK+5k9X86puk5
u7X/JPsxTIf/wxcfb3aRvZqkI1QvmPNhEvP/dFiq3X+X6s78Px1r47bOzUmg
cZd0yX3ZxKCUfV/llY7DRmuHtViy+J+OQ2Wc5W1lNJ+Tjqn71WVxgup1bjr+
i2sYvwbHyf/ToR83yXz9Wer3ZabjQVTl/TR2385OxyBZnDMNZf2/dDRu/R4y
Zza7/6fjqqr82ElZxaT/dCgFPf3iwt7nl6djgdluscxF4qMiHe3Wl4f2XGT9
n3Rsks7hlTtRPKtNh9PbOEPVdpb/JXyUdY2pyCfcmo6Ijuir5bqNpP90DIj6
3pKVR/GjIx1mirZ2Rn+ILykelhgO1J7zjNaX5kE+ro/W2v40PpAHvlz1uimT
iS9ZHnwv6std62TxgYcaj86dK7JpXJ6HZXn6mS+nsXjBg5ubkdavdrK3CTzM
bpRSG8L6dSo8vDTZ9/FxBNmHGg/2Kyv9TI6yfiIP+eueFm/hER8zJfsfmSD9
RZd9jy1Zb+FjP8Wsh73+ME9y/on/Pipcvd+LdXhoeBLmVM++/9HlYW3C4pSj
pmQP4AEX/0YrXCJ5VvLQ5m17fqESy0c87O3jad8zk/hZx0PkuJmXfbey/MTD
lUzFtdeFJP9mHmakjg0vf0fYgofBg75/+lhF61lJzqO89Rdfib2/4kEv52Qf
65LHvefdwYPFcpesuCiyXxce6macLKrZQ/rz4EFJ/7jKQy7rb/BQ8O1cym3W
H/fjwcbmwtJ8W+I/iIdMrWGx2wRkX2E8TFwkY/+7m/jk8LB5ev2nZR/oPLE8
bAwou9/t60/+wMMZrW+6d1897T1fCg+nhJ9PvFKh9xc8HuJPJPyu86d+hYiH
ipujJ4s3kLyZPOjISfd5yiW+9vPQ2lnU1Lcv4Wwetp25dbC6iM57lAeZ4zLP
x05i/sTDn9EtRgfNyR7yech6+OnLHfZ+oZCHCep/J0a/pvnnedC89rtffxt2
3+JhXqDP6oc+Jb3nLZPou2vZ7Z/6rP/Cw3OXBVK/d5N+b/JgPTjsWMcGwhU8
FIkU/wb60PoPeOCtj7h3p4nkq+JhQX5GTNMT4reGh6jFTuv73WP1Gg9TIxNL
C9sJ1/OQcVp7k+Af69/zkDI1PetnDMWHZh6eRipEZvU5Qf7Mg8BY2c5rPcn/
kYfSfeUj64V0nnYeuPWFx36dp/P84CF1/5ycHE06f4fEnjVrDjzMINzNw4Mh
sQM15Sk+SPHhcwmBb5l9SvPRcGe8ud0r1g/kY1xXv5r0yWQvsnw8SGzJK9zK
8gMf820zXNYOoPujPB920Yfn7Ctq7OVbgY/3izPiyne59eIJfChv7j5fLkf9
KRU+Vge7GpdtSCf/5yPQussmzIfsSYOPb0blC1Qe034z+cjreb7OWoX1FyXz
97/qfFxG55vHh6f9qsIxZ1m+4SNLem2aJuuH6PJhbzR/wb5TNA4+zhkP+PpD
kdZbyYduxq99ms/peUM+Bl3sbmx3oPF1fCilhZf/qCL/NuFjjqvqnWkdtN5m
PtSH5IzfPo3dV/jY9al9xcmPhK34+N6m8FDRltUvfJzcNWSb8AT5ww4+TpUn
Wxa3sHzGx+6ah3NKR5L8HnyM52RVn2PfJ3rx8axySFnpNuLbj48ezw2V1maE
g/go3BFoeECzqBeH8dEd++OHWjW7//Jxa1u0f1wmnS+WjwMaelMnDiV5uXwk
mjvIDPhM8qVI5Au7WOrVh57n8ZG7+21AzDBaT8THsc5IVY85NJ7Jx6jgKzV6
8mR/+/lIkDFL7Hua+T8ff2SMXy0Jofh2lA//9rh+B+aweoqPGX/9piXnnOg9
fz4f2R6r3wkOse+hJfjA6n82b2j/83xsXpb49OtGml/MR0mp9kuZvSRPGR82
mM9t/EW4XGI/IyrUz4jJ/m/y4WhTnNKeE07+z0d+1i3/vTU7yP/5CL8f5FyZ
TfOr+BjrHC17V4v2q+FDoFvavL6W5Ws+/BrzxgjT6Hz1fGyZuFRsZUp8NvKx
V277pi+zCDfzwTWY9TTwAeFWPkz/8debsf7eR8n+RgPMnU/Reu18dK4b8cNI
ifb7wcfFr10NPYvJPjsk+p+vm/Qgm+Tr5sN9jWx12uO3vXxKCWCrYlzVaU/1
rbQAp/OcHPRvlPbigQLoKTjyngwie5MVIOByV/3veOb/AhT5HRl7UkzxRF4A
5ZEHq/uUEFYQIDB6rl1MRB7lfwGaZA6U3xpG9bWKADtqdM6oPmL5X4B1E6a0
/Yqn82oIEFVyIG3ARJb/BfDKd1hlE03Pawvw77Dth8EGxM88AV7PsvwTL8X6
DQJUSl+o6aNJ/qYrAH9/jv0/adZ/EGBR2MNLAcW03koB+gUffTauhPWjBJjv
51svaCd51wmg9rKh61A16d9EAL8vN5u+2FF/dLMA3J+zil/YU760EKCi/eew
WT2U360EyJcf488ZRPWmrQDpCX3G3pYqp/wvwOITeg6n2O8NXQSYu+vV6A72
ewoPATz+yod+/kzreQnQbFBhOJJH/uEnQOms5afqP1H/NUiizzn2wrns/hMm
gMBcNee3Bsv/AlSXNKZyNZn/S/C2JId1Y1k/TIDoHwu/f9tKfKUIsNAxcYla
GuuPCZDmr9OTUkBYJOH32/SwV+/YfVmAM5HjDzm2E94vwN5Zy2blDWb9UwF2
B7xIGbWW9j8qAIzHDZD79KRXnlwBfhRonO6Y2EL+L0CN8a78PqvaenGhAN+9
Suae2ET1yHkBHOSWXpngRPZdLMCfSXfqNbuo/1smgKybz/Yxh+l7jHIBJg+S
2jdm4PNefFOAD6cKeF8+XuzFFQJ0fTJtXznfmPxfgL8GdTzfo6SPKgGuffm1
LD2Y5KkRYOi3ms4Byex9rQDTlvGUamYz/xdgzmorTtJs1r8RIHnAOYu8fOKv
WWIP7R/slxQRX60CdJ+sH7TUm8Y/SuzJvmyy0J593ynA7YJb63VL6PkfEnks
siyX9aPxDgGWfXRVPRV7uFeebgGmtH0suVtB/VcpIUoX2ehfGU79WWkhxs5I
11Zc/ZP8X4gY8dRus/f0PkRWiOKPRbatW+h5OSEOTNv9ferx9l4sL4SOc1lL
5DTSh4IQS98XNQqXF1L+F8Ka9/uF0hTiR0WItpy7nXFDmf8L0edY9YDCFRRv
NISwuhLySMWU5JkpxPn+aqbXLhCf2kIcXHl51VYDGp8nROS+FT+8zane1xHC
4nrWzAL2/byu5Lzqe1UmnmXfHwkxKLL6vx93ib+VQnTdbQnHI9aPEOKP2gSL
u+z7p3VC7Gt+seuJBetPC3Ho43nz1BCSf7MQfwX9PLvQSv4vRJ6qqk2oZyX5
vxAmsm9USi7QfcVWCENzi2mipGryfyGert2ictH9LPm/EItn7TRO0aH3xx5C
jF5tlG09gn3fKsRQudsa0y3oe1A/CZ9tQ5vDxrF+hxC3ZkkdqD9K78PChOhb
tbSkoya9dz+OEFXvsk3XWB0j/xfipvmHEwdH0X5cITZF2/d7Xkx8pQiRtuZK
pkwc+72CRN/DR7SbsN9TiIQosHmwZMM0wplCTFkfo7jKjOLZfiFSCrQsh7oz
/xdiYtuoPw6rCB8VojrJ0/iaHav/hfBJutv1qZbsMV8I9UKXkcp7v5P/C/Hv
++XvntHk7+eF4C74Xl1WSPoolvB3XmW3PntfVybE7XUPtj5dVEj5X4ghnad7
/ENZ/S8ZL5w3m3+ZvY8RYsKuIR80OsjeHgjxwtB9buNLun9WCbHuTJL1Xn/q
v9QIoWDe/E8nj+y/VogI3u/4rCbyt3oh1rT9tMtg/dVGIS7uqlv6lcP8Xwie
z1/ODVf2Pl+I4T0lXSNfs/wvxLtzbqbjVrP+rhBTlxa4bu0s7l3/hxAVU6fd
mZJI+aFDcj7v5qZUDtXb3UJcb6x1CH7Bvv8Qwa/G/0V/z07yfxHaV141iDf4
RP4vwsX0/14cGEP+LivC0/d7bAIriF85Ea5KG5UcDiZ9yItwOUaoOfgI2b+C
CJrYteXQKJJ/ggieX1c51yGe/F8Ed7UNZw2zyV7URKhXmNVUeoT41hCBv2fV
yPO59P53pghHDct2afWn+K0tgmFqbZb/V/KfeSJEzbGel7yP5X8RTIS2X664
sfpfhLBf3GOqV1j/SYQfr4/u7j7M8r8I41rtp6WpMf8XQcPNyfrgX/K3dSLo
1RteODWD/NdEhB0LdZccFERQ/hfB5YvuFrke9r2qCDbTDslFuxMfViLMNWg8
bf+D7NFWBIvP0Nt5/Q35vwhvU2ICjwgpv7mIYHdlZ8mF49292EOEF2d2h6vr
/6H8L8JG7mOZQf1/Uf4XQeH6L78BGfT+NEgEJYUHmm5HST9hIlzYd8MzV/s9
+b9EvhKF76+XkH5jRfB4ZOw+2fVdL+aK8G3s7fp7cXT+FBGmRL1zP21E9wue
CJ1V8sv/nbvXi0Ui/BuzuM8j9vuwTIk8Ewr869jvI/aLcJtf9ytw/Z3e57NF
yNAaMfdpUUEvPirCtJq0sPJyihe5InRdss8ZXUr6yBdh69qTIzaw7+0LRfhg
Lh/5ZiTxfV6E6qKgsydPUb4qFsFceOfEqyOEy0QYEK0//I4n8V8ugtZPk8bm
IX8p/4vA7Tvm0xkHet9fIcL6tlIL49PE5wMJvzfsrizMIj6rJPopzl35+3VH
L64RQXx8YaSaEumnVoTY8Miebqvf5P8irNgqzz+yjfZrFEHdbcyBEA/6PqBZ
hLaovudrMuh9d6sI478pDY6R+9yLP4rgluFzzayR6qF2EfZ3PvxV5kD+9UOE
utXTXdTzSb4OEbavm/HmzIsBvfJ0i+C6u3LIcHeyJykx9J/Lf7i+iOpPaTGi
dg/Rf1/P+sFirL5949Ogg8S/rBhH5OYltzJ/kRNj2OP68t/byP7kxbhx3Pzo
hvEkr4IYm56fftjYTfxPEGPX/GovB3uKNypiTKjf/zQ6is6nJsZLlfeP4vd0
9Y5riNE/a9/EH/PpfcdMMdTWaoYvm0vxXluML1ukfi1aSOvPE2NM2EHzbb6U
L3TE8LhhtvvGD4pnumIMuO4QWBJG8yGG9tfgy4PuUDxYKUbp2mP8Vanse3Qx
hr8POXZ2EPG5TowXU8L6WY0i/ZuIkeI236LOn9bfLEa/et2+eu9JXxZiLCy1
nSeVQf5iJcbFUcpfze/cIP8Xw2zN8SUK16jfsUOMvTOujilh9ZCLGK+VDi22
8SfsIcb4xqEzfXXovF5i9JmxPDBZROfzE2NS9/s46WDCQWLUJKxRvLaFzhMm
RurS8K1nZxA/HDGeuFbKH6zuIf8XY+PO/hFxF+vJ/8X4UFiz1YD101Mk8t5v
WL3yOtW/PDH+ztQena1H9w2RRL6Gi2PuTaZ+W6YYU9Z9jXF1pHp6vxgG+XNr
jZPo+6JsMX59rajNL6X6+6hkfRXFEaajSD+5Yiimr2wLVPpH+V+MNPM+cw52
k38WSvbLlZNqX0b+eV4Mqb7DU9sE5D/FYix4F5U6Rutk7/nKxPCtKw/i5lF9
VS5Zb/kk1y8n75L/S/g8stA6bjh9X1ohxu5rWREX7In/B2LE6j/0rR7E3s+L
wX05sCDBi/yxRgx5pw8Xxb/JXmvF8H9r5m98heqLegn/Gkaliy7R/bxRjGBh
rveD7XRfbhajc09k3QNdVv+LcZyrW9VlQ987fRRj7uuwnh1L6P7cLkaiHH/Z
Nh3S1w8xpouMOnN9aP8OMR7Ndc75XkL+2C3x98EjE16Ykv9JZWB9yIcbcYaU
b6QzMNp0TeDJz5cp/2fgDV7W9nWl902yGaiyOpO2/TPdb+Uy8PXEMvnxDyl/
yWdA/l2U8s6CBvL/DMwevTDI2pDi/4QMhOx2ivr+lfhTycCuzqNr+/+lfK2W
gYNSZmbBdiz/Z2DdMqHz4H/UX5yZgVfrPv7oO5y+99DOwCyLoUcmD6P73bwM
TOb/uVO3nb4v0smAyai5m7vHkn3oZuD7EJPfC/eQf0By3kJHBfPFH3vxygwM
jbi15end/F5smIE/LfxzsiXs/p+BlOFVQq7rGfL/DNyLEshoSJO9bc5A4t0H
OUvM6H2sRQY+fs99NVKB1rfKwNLX8ZaciN2969lm4OqNbUtftlL9uCMDodnO
bXs02feMGRjvs9LvwCLCHpL55l7h7QVUn3plQF913/XYwVTf+En4OikKvavP
fu+QgQt+s2s8k46R/2dggNJvqRjtKvJ/yX5yD54lvyb7jc3AwFz1tvK7ZD/c
DNyGUEkljfhMycCHkb6LnMZWUP7PwO4/x68X6lO+FmXAuHab2rQMss9MiT4t
rZeUOND6+zNwv/7kghRXsrfsDOTlhgw7YUH1x9EMyHI+LN9/js6Xm4EsE8/M
ftse6v0f9PkqyA==
              "]],
             FontFamily->"Baskerville"]}}, {}}}, {}, {}, {{}, {}}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0., 0},
       BaseStyle->{FontFamily -> "Baskerville"},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       LabelStyle->{FontFamily -> "Baskerville"},
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0., 1450.}, {-0.5225838750998866, 0.20469068407279753`}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}},
       Ticks->{Automatic, Automatic}], {193.5, -116.80842387373012}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
      GraphicsBox[{{}, {{{}, {
           {RGBColor[0.65, 0., 0.], PointSize[0.006944444444444445], 
            AbsoluteThickness[1.6], 
            StyleBox[PointBox[CompressedData["
1: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
              "]],
             FontFamily->"Baskerville"]}}, {}}}, {}, {}, {{}, {}}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0., 0},
       BaseStyle->{FontFamily -> "Baskerville"},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       LabelStyle->{FontFamily -> "Baskerville"},
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0., 1450.}, {-0.33560067415237427`, 0.76908178627491}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}},
       Ticks->{Automatic, Automatic}], {580.5, -116.80842387373012}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
      GraphicsBox[{{}, {{{}, {
           {RGBColor[0.65, 0., 0.], PointSize[0.005555555555555556], 
            AbsoluteThickness[1.6], 
            StyleBox[PointBox[CompressedData["
1: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
k6PrSf/J0Py+qPPvoJek/2QEfVFqPWdA8yuSkVKV1iMzlM5XlYwvZzv/u32e
cG0yspz1p6gpk700JuPKwmOGA4xovdZk/G5Zs8Ijl/X7k/E4xELbawvZT0cy
8o+U7vF9TPJKpUAjerrnMWfCA1NgZqkglT6V6T8FRgf0nL950P4KKaj/6ct3
KaNxlRSsuJzheuEj6UcjBWPHGQ6zMSKsnYLluk4tqvWEdVIQsCXHdMAowkiB
4WLZ2NDHrP5LwZ8516yXsf6ZSQqqwoONL+kQPxYpyFgwwlBXm7BtCj5wfy/f
t5X4dknBL8sRXH3VBtJ/Cir66xsuViP+g1LwckfmLp01rP5LwaqXw8yMLFj9
l4KTWuEHa+WIT14Kauu3tHwsJ5yZgmVXCxumlhDOToHOs/46T34Tzk3BpK2V
qUZWtF6h5HzLL9qtsqD9ilOwIWx88Iy/zP9T4KwjLfUugfioSIFx2LV5U5n9
VaXgbRF/fY6QxmtToHXL7/OtLsKNKThhcL4ldjmL/ymI5owyfpXP7v8p2Hxl
28zAPoQ7UjBS4+jgy+ms/5eKkxZaaZfesfifCj2Ho7ekTzD9p6JY/bij3Fim
/1QEHB0SeOsB8auSirKO6d1nxr8m/adi0N2yGXY+pA/tVDwNj5PmVBD/Oqlw
Ku8fOn4J8YVUbNBaraDxgcYNUxFt16L1tZLWN0mFePjZIEtDwhapiLu413ju
alrfNhWGr044vlJl+pfMr7bcLYim9b1SIWd12p6Xy/w/FTmZGy3/vSD5OakY
td9nx9gylv9TceWYW5ssq2d4qfj5QWvYonuEM1PxusfbcMUD1v9PReHky9FH
VGg8NxWXuw4N62pj/Z9USN82ejF+JOv/pSKrLL6y0Ybd/1ORHdN+xIj1BytS
EfLzzAPddaz/kwoFnaBtF3cTv7WpcFYXIiaA6ofGVFRON526es+HXtyaiqlN
3dXXF1E/tD0Vuyv6CnY5E78dqdj62WL+WwXiSyoNkza9u7gxl/DANLi2RGWU
rSW+5dIgG/TxQMUesl+FNGg9GHJs2yR6XiUNMvaHpFtbaFwjDQbjfmncMSJ5
tNPw2uz36q3z2Pu/NFz+4/lsYyO7/6Vh+KXds6LXs/5fGmJnCHd5LGf9vzQs
WBtkuimR3f/S8N/2/+oj2fsY2zRk353w5+d0lv/T8EgYM/XRNcJeaTjjMvXd
7yh2/0/D/mHzeXpTiF9OGhp4s9f1c2T1fxqeB5fr5byv6+WTl4aF9tLzGite
9+LMNNxLf6/iY8G+z0rDPMv6vgPyia9cCR/rNOSPZREuTJPcd0vtc24RX8Vp
uDNa8+HmJBovT8M670UHDxVR/VSRhncvP8x9spv1f9Nw63BE3MNprP+bBkHM
Yl8rpWuk/zS83FJ4qWYc1WOtafDes+GPBns/0p6Gz1rhkX1uMP+X6CPy+pwd
z1n/Lx2zNR2arW+w/n86HJ8quv5h9blcOnTGBvbjNFM8UEjHx5ntW+/JsPif
joJpbzPNDWm+Rjri7FaYBR5n8T8dZduXfL29i57XSceBYwceK+5k9X86puk5
u7X/JPsxTIf/wxcfb3aRvZqkI1QvmPNhEvP/dFiq3X+X6s78Px1r47bOzUmg
cZd0yX3ZxKCUfV/llY7DRmuHtViy+J+OQ2Wc5W1lNJ+Tjqn71WVxgup1bjr+
i2sYvwbHyf/ToR83yXz9Wer3ZabjQVTl/TR2385OxyBZnDMNZf2/dDRu/R4y
Zza7/6fjqqr82ElZxaT/dCgFPf3iwt7nl6djgdluscxF4qMiHe3Wl4f2XGT9
n3Rsks7hlTtRPKtNh9PbOEPVdpb/JXyUdY2pyCfcmo6Ijuir5bqNpP90DIj6
3pKVR/GjIx1mirZ2Rn+ILykelhgO1J7zjNaX5kE+ro/W2v40PpAHvlz1uimT
iS9ZHnwv6std62TxgYcaj86dK7JpXJ6HZXn6mS+nsXjBg5ubkdavdrK3CTzM
bpRSG8L6dSo8vDTZ9/FxBNmHGg/2Kyv9TI6yfiIP+eueFm/hER8zJfsfmSD9
RZd9jy1Zb+FjP8Wsh73+ME9y/on/Pipcvd+LdXhoeBLmVM++/9HlYW3C4pSj
pmQP4AEX/0YrXCJ5VvLQ5m17fqESy0c87O3jad8zk/hZx0PkuJmXfbey/MTD
lUzFtdeFJP9mHmakjg0vf0fYgofBg75/+lhF61lJzqO89Rdfib2/4kEv52Qf
65LHvefdwYPFcpesuCiyXxce6macLKrZQ/rz4EFJ/7jKQy7rb/BQ8O1cym3W
H/fjwcbmwtJ8W+I/iIdMrWGx2wRkX2E8TFwkY/+7m/jk8LB5ev2nZR/oPLE8
bAwou9/t60/+wMMZrW+6d1897T1fCg+nhJ9PvFKh9xc8HuJPJPyu86d+hYiH
ipujJ4s3kLyZPOjISfd5yiW+9vPQ2lnU1Lcv4Wwetp25dbC6iM57lAeZ4zLP
x05i/sTDn9EtRgfNyR7yech6+OnLHfZ+oZCHCep/J0a/pvnnedC89rtffxt2
3+JhXqDP6oc+Jb3nLZPou2vZ7Z/6rP/Cw3OXBVK/d5N+b/JgPTjsWMcGwhU8
FIkU/wb60PoPeOCtj7h3p4nkq+JhQX5GTNMT4reGh6jFTuv73WP1Gg9TIxNL
C9sJ1/OQcVp7k+Af69/zkDI1PetnDMWHZh6eRipEZvU5Qf7Mg8BY2c5rPcn/
kYfSfeUj64V0nnYeuPWFx36dp/P84CF1/5ycHE06f4fEnjVrDjzMINzNw4Mh
sQM15Sk+SPHhcwmBb5l9SvPRcGe8ud0r1g/kY1xXv5r0yWQvsnw8SGzJK9zK
8gMf820zXNYOoPujPB920Yfn7Ctq7OVbgY/3izPiyne59eIJfChv7j5fLkf9
KRU+Vge7GpdtSCf/5yPQussmzIfsSYOPb0blC1Qe034z+cjreb7OWoX1FyXz
97/qfFxG55vHh6f9qsIxZ1m+4SNLem2aJuuH6PJhbzR/wb5TNA4+zhkP+PpD
kdZbyYduxq99ms/peUM+Bl3sbmx3oPF1fCilhZf/qCL/NuFjjqvqnWkdtN5m
PtSH5IzfPo3dV/jY9al9xcmPhK34+N6m8FDRltUvfJzcNWSb8AT5ww4+TpUn
Wxa3sHzGx+6ah3NKR5L8HnyM52RVn2PfJ3rx8axySFnpNuLbj48ezw2V1maE
g/go3BFoeECzqBeH8dEd++OHWjW7//Jxa1u0f1wmnS+WjwMaelMnDiV5uXwk
mjvIDPhM8qVI5Au7WOrVh57n8ZG7+21AzDBaT8THsc5IVY85NJ7Jx6jgKzV6
8mR/+/lIkDFL7Hua+T8ff2SMXy0Jofh2lA//9rh+B+aweoqPGX/9piXnnOg9
fz4f2R6r3wkOse+hJfjA6n82b2j/83xsXpb49OtGml/MR0mp9kuZvSRPGR82
mM9t/EW4XGI/IyrUz4jJ/m/y4WhTnNKeE07+z0d+1i3/vTU7yP/5CL8f5FyZ
TfOr+BjrHC17V4v2q+FDoFvavL6W5Ws+/BrzxgjT6Hz1fGyZuFRsZUp8NvKx
V277pi+zCDfzwTWY9TTwAeFWPkz/8debsf7eR8n+RgPMnU/Reu18dK4b8cNI
ifb7wcfFr10NPYvJPjsk+p+vm/Qgm+Tr5sN9jWx12uO3vXxKCWCrYlzVaU/1
rbQAp/OcHPRvlPbigQLoKTjyngwie5MVIOByV/3veOb/AhT5HRl7UkzxRF4A
5ZEHq/uUEFYQIDB6rl1MRB7lfwGaZA6U3xpG9bWKADtqdM6oPmL5X4B1E6a0
/Yqn82oIEFVyIG3ARJb/BfDKd1hlE03Pawvw77Dth8EGxM88AV7PsvwTL8X6
DQJUSl+o6aNJ/qYrAH9/jv0/adZ/EGBR2MNLAcW03koB+gUffTauhPWjBJjv
51svaCd51wmg9rKh61A16d9EAL8vN5u+2FF/dLMA3J+zil/YU760EKCi/eew
WT2U360EyJcf488ZRPWmrQDpCX3G3pYqp/wvwOITeg6n2O8NXQSYu+vV6A72
ewoPATz+yod+/kzreQnQbFBhOJJH/uEnQOms5afqP1H/NUiizzn2wrns/hMm
gMBcNee3Bsv/AlSXNKZyNZn/S/C2JId1Y1k/TIDoHwu/f9tKfKUIsNAxcYla
GuuPCZDmr9OTUkBYJOH32/SwV+/YfVmAM5HjDzm2E94vwN5Zy2blDWb9UwF2
B7xIGbWW9j8qAIzHDZD79KRXnlwBfhRonO6Y2EL+L0CN8a78PqvaenGhAN+9
Suae2ET1yHkBHOSWXpngRPZdLMCfSXfqNbuo/1smgKybz/Yxh+l7jHIBJg+S
2jdm4PNefFOAD6cKeF8+XuzFFQJ0fTJtXznfmPxfgL8GdTzfo6SPKgGuffm1
LD2Y5KkRYOi3ms4Byex9rQDTlvGUamYz/xdgzmorTtJs1r8RIHnAOYu8fOKv
WWIP7R/slxQRX60CdJ+sH7TUm8Y/SuzJvmyy0J593ynA7YJb63VL6PkfEnks
siyX9aPxDgGWfXRVPRV7uFeebgGmtH0suVtB/VcpIUoX2ehfGU79WWkhxs5I
11Zc/ZP8X4gY8dRus/f0PkRWiOKPRbatW+h5OSEOTNv9ferx9l4sL4SOc1lL
5DTSh4IQS98XNQqXF1L+F8Ka9/uF0hTiR0WItpy7nXFDmf8L0edY9YDCFRRv
NISwuhLySMWU5JkpxPn+aqbXLhCf2kIcXHl51VYDGp8nROS+FT+8zane1xHC
4nrWzAL2/byu5Lzqe1UmnmXfHwkxKLL6vx93ib+VQnTdbQnHI9aPEOKP2gSL
u+z7p3VC7Gt+seuJBetPC3Ho43nz1BCSf7MQfwX9PLvQSv4vRJ6qqk2oZyX5
vxAmsm9USi7QfcVWCENzi2mipGryfyGert2ictH9LPm/EItn7TRO0aH3xx5C
jF5tlG09gn3fKsRQudsa0y3oe1A/CZ9tQ5vDxrF+hxC3ZkkdqD9K78PChOhb
tbSkoya9dz+OEFXvsk3XWB0j/xfipvmHEwdH0X5cITZF2/d7Xkx8pQiRtuZK
pkwc+72CRN/DR7SbsN9TiIQosHmwZMM0wplCTFkfo7jKjOLZfiFSCrQsh7oz
/xdiYtuoPw6rCB8VojrJ0/iaHav/hfBJutv1qZbsMV8I9UKXkcp7v5P/C/Hv
++XvntHk7+eF4C74Xl1WSPoolvB3XmW3PntfVybE7XUPtj5dVEj5X4ghnad7
/ENZ/S8ZL5w3m3+ZvY8RYsKuIR80OsjeHgjxwtB9buNLun9WCbHuTJL1Xn/q
v9QIoWDe/E8nj+y/VogI3u/4rCbyt3oh1rT9tMtg/dVGIS7uqlv6lcP8Xwie
z1/ODVf2Pl+I4T0lXSNfs/wvxLtzbqbjVrP+rhBTlxa4bu0s7l3/hxAVU6fd
mZJI+aFDcj7v5qZUDtXb3UJcb6x1CH7Bvv8Qwa/G/0V/z07yfxHaV141iDf4
RP4vwsX0/14cGEP+LivC0/d7bAIriF85Ea5KG5UcDiZ9yItwOUaoOfgI2b+C
CJrYteXQKJJ/ggieX1c51yGe/F8Ed7UNZw2zyV7URKhXmNVUeoT41hCBv2fV
yPO59P53pghHDct2afWn+K0tgmFqbZb/V/KfeSJEzbGel7yP5X8RTIS2X664
sfpfhLBf3GOqV1j/SYQfr4/u7j7M8r8I41rtp6WpMf8XQcPNyfrgX/K3dSLo
1RteODWD/NdEhB0LdZccFERQ/hfB5YvuFrke9r2qCDbTDslFuxMfViLMNWg8
bf+D7NFWBIvP0Nt5/Q35vwhvU2ICjwgpv7mIYHdlZ8mF49292EOEF2d2h6vr
/6H8L8JG7mOZQf1/Uf4XQeH6L78BGfT+NEgEJYUHmm5HST9hIlzYd8MzV/s9
+b9EvhKF76+XkH5jRfB4ZOw+2fVdL+aK8G3s7fp7cXT+FBGmRL1zP21E9wue
CJ1V8sv/nbvXi0Ui/BuzuM8j9vuwTIk8Ewr869jvI/aLcJtf9ytw/Z3e57NF
yNAaMfdpUUEvPirCtJq0sPJyihe5InRdss8ZXUr6yBdh69qTIzaw7+0LRfhg
Lh/5ZiTxfV6E6qKgsydPUb4qFsFceOfEqyOEy0QYEK0//I4n8V8ugtZPk8bm
IX8p/4vA7Tvm0xkHet9fIcL6tlIL49PE5wMJvzfsrizMIj6rJPopzl35+3VH
L64RQXx8YaSaEumnVoTY8Miebqvf5P8irNgqzz+yjfZrFEHdbcyBEA/6PqBZ
hLaovudrMuh9d6sI478pDY6R+9yLP4rgluFzzayR6qF2EfZ3PvxV5kD+9UOE
utXTXdTzSb4OEbavm/HmzIsBvfJ0i+C6u3LIcHeyJykx9J/Lf7i+iOpPaTGi
dg/Rf1/P+sFirL5949Ogg8S/rBhH5OYltzJ/kRNj2OP68t/byP7kxbhx3Pzo
hvEkr4IYm56fftjYTfxPEGPX/GovB3uKNypiTKjf/zQ6is6nJsZLlfeP4vd0
9Y5riNE/a9/EH/PpfcdMMdTWaoYvm0vxXluML1ukfi1aSOvPE2NM2EHzbb6U
L3TE8LhhtvvGD4pnumIMuO4QWBJG8yGG9tfgy4PuUDxYKUbp2mP8Vanse3Qx
hr8POXZ2EPG5TowXU8L6WY0i/ZuIkeI236LOn9bfLEa/et2+eu9JXxZiLCy1
nSeVQf5iJcbFUcpfze/cIP8Xw2zN8SUK16jfsUOMvTOujilh9ZCLGK+VDi22
8SfsIcb4xqEzfXXovF5i9JmxPDBZROfzE2NS9/s46WDCQWLUJKxRvLaFzhMm
RurS8K1nZxA/HDGeuFbKH6zuIf8XY+PO/hFxF+vJ/8X4UFiz1YD101Mk8t5v
WL3yOtW/PDH+ztQena1H9w2RRL6Gi2PuTaZ+W6YYU9Z9jXF1pHp6vxgG+XNr
jZPo+6JsMX59rajNL6X6+6hkfRXFEaajSD+5Yiimr2wLVPpH+V+MNPM+cw52
k38WSvbLlZNqX0b+eV4Mqb7DU9sE5D/FYix4F5U6Rutk7/nKxPCtKw/i5lF9
VS5Zb/kk1y8n75L/S/g8stA6bjh9X1ohxu5rWREX7In/B2LE6j/0rR7E3s+L
wX05sCDBi/yxRgx5pw8Xxb/JXmvF8H9r5m98heqLegn/Gkaliy7R/bxRjGBh
rveD7XRfbhajc09k3QNdVv+LcZyrW9VlQ987fRRj7uuwnh1L6P7cLkaiHH/Z
Nh3S1w8xpouMOnN9aP8OMR7Ndc75XkL+2C3x98EjE16Ykv9JZWB9yIcbcYaU
b6QzMNp0TeDJz5cp/2fgDV7W9nWl902yGaiyOpO2/TPdb+Uy8PXEMvnxDyl/
yWdA/l2U8s6CBvL/DMwevTDI2pDi/4QMhOx2ivr+lfhTycCuzqNr+/+lfK2W
gYNSZmbBdiz/Z2DdMqHz4H/UX5yZgVfrPv7oO5y+99DOwCyLoUcmD6P73bwM
TOb/uVO3nb4v0smAyai5m7vHkn3oZuD7EJPfC/eQf0By3kJHBfPFH3vxygwM
jbi15end/F5smIE/LfxzsiXs/p+BlOFVQq7rGfL/DNyLEshoSJO9bc5A4t0H
OUvM6H2sRQY+fs99NVKB1rfKwNLX8ZaciN2969lm4OqNbUtftlL9uCMDodnO
bXs02feMGRjvs9LvwCLCHpL55l7h7QVUn3plQF913/XYwVTf+En4OikKvavP
fu+QgQt+s2s8k46R/2dggNJvqRjtKvJ/yX5yD54lvyb7jc3AwFz1tvK7ZD/c
DNyGUEkljfhMycCHkb6LnMZWUP7PwO4/x68X6lO+FmXAuHab2rQMss9MiT4t
rZeUOND6+zNwv/7kghRXsrfsDOTlhgw7YUH1x9EMyHI+LN9/js6Xm4EsE8/M
ftse6v0f9PkqyA==
              "]],
             FontFamily->"Baskerville"]}}, {
           {RGBColor[0.0504678, 0.526626, 0.627561], PointSize[
            0.005555555555555556], AbsoluteThickness[1.6], 
            StyleBox[PointBox[CompressedData["
1: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
              "]],
             FontFamily->"Baskerville"]}}, {}}}, {}, {}, {{}, {}}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0., 0},
       BaseStyle->{FontFamily -> "Baskerville"},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       LabelStyle->{FontFamily -> "Baskerville"},
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0., 1450.}, {-0.5225838750998866, 0.6877789348363876}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}},
       Ticks->{Automatic, Automatic}], {967.5, -116.80842387373012}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}}, {}},
  ContentSelectable->True,
  ImageSize->1000,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.7089780170242043`*^9, {3.708978120229604*^9, 3.7089781406793413`*^9}, 
   3.708978351942336*^9, 3.708978734641618*^9, 3.708979147696343*^9, 
   3.708979294634166*^9, 3.708979358990858*^9, 3.708979511817746*^9, {
   3.708993897553608*^9, 3.70899390545557*^9}, 3.7089939493397493`*^9, 
   3.708994143918939*^9, {3.708994435498032*^9, 3.708994609767335*^9}, {
   3.70899479636803*^9, 3.708994869426672*^9}, {3.708994901392878*^9, 
   3.708995097788509*^9}, {3.708995131878499*^9, 3.7089952013962307`*^9}, {
   3.70899523474785*^9, 3.708995263445643*^9}, 3.708995362264698*^9, 
   3.708995522347488*^9, 
   3.708995656090167*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXWYndXVxn0ad8GDBUkhuAeXOvVSeFtoobyUGm2xAjWgSCAQT0hIQmYy
cXd394QYCXH3TJKZZOK6vvVbe699zoS8/a7r+/t7rmvk7PPIfrbc97K99o+f
e/1Pv3/xuddfeP65K773t+de+dMLz792xXdf/psWlf1aJlN2ZyaTWXlFhv9F
/42/zjh28+srxf9/6f/n0gvsT1kpKSmRAwcO2Cf7/vH4RVFRkZw6dSr7xc/j
F4WFhXLy5MnsF9eWvuPixYtl6dKlX73jlClTZOzYsbJly5bSdxw2bJgcPnz4
/7zjF198IV9++aV92hzLTp04ITvGj5cjO3ZkXoxl06dPl2nTpsnOnTszL8Wy
4/v3y/Zx4+RYUVHmmlim/1uZfpcZHctGjhz5/1qHVatW2adN9rucnNTzl37w
gRRoI8/785+9GjNmzJDdu0M7/29uNfTdqUbVWLaqbVvJ00uXNmyYuTK3amPG
yPF9+zJlYpl+b+etatPmrNXdFMuKtYojGzSQuc8/n/lm6dovW7ZMBg8eLGvW
rEm139S/v9V8wIUXytYRI3Jrv2PHjlK1X/3pp9JRT/3ivfdS7fcuWCBTn3hC
CqdNy1Twt9y3z2rPW16UU/uOsfb+RnqNXbtn3rz/+kaFWheqOObOO/2NKtmf
ynLoQIkcPXE6DurTckLHg3/iu8NHjmfKexV0NI4ePdoGnt96/8qVMu2Xv5Tt
o0dnbo5lJw4etE46ouPnwbM0x9P2u2LoTF5z71573t7PP5ep//M/smvqVK1Z
tim26TknDhyIdS5LE1hT0OHePIU6Zr0pJvyXptg9c6Z01mvH3nVXqm/RwoUy
8q67ZN4f/pCpHZon9ER1/XVS5kwdKz17DZA+vbrJpqKDcnzPBmnWtIVs3Llf
JgzrK131u17dusr4mUtpOr1hdqiv1Obh0+xYxlCnaQ5v3555NJZt7NXLxuXn
L7/8X5qr9OipbmXl09hf+NprsnPiRJoyjSJG1oxnnuGVtbHjvKA5tQuPl5Rk
FsSyUaNGWbfzaVYs26cDnSaZ89xzaaTu0+6nbPb//m+mine1Qp42uexfvjw1
585Jk6RTbOLYnJlzFeqOSYl2+P74U3LgkA20os1fSsuWn8lhhch188fLp3mD
5cTxI/LlshVy8GCxjBk5SvYcOaVvtl4aNvxY1u46UKqFHdC8hTcPGiT5+vQ5
2pmplocOpVa/3wfu8uU2cLU1/kurV7DBMeM3v7E5dNxbb//+KrEDGLMznn5a
ZuiteOzS99+P07NiOt3HN/Nip4K3/o2vUEmOFxfLNu0AAItjpY5txuec3/2O
ss/ttHIGOrNmzZLP9XF79uyZGYt3z54tXfTsXhUqyOxnn/X33a1nMt9H3Xxz
el/tcdkzf77sX7Ei9Uo12bt9lQzo21f6Dxgg/fv1lWFjJ8th7ZalMwZLk/aD
AwxsXy0tmjeVwqNSLt5M5Ki0bdpSPl+1s1RnOLJ7ZxxYu1ZmPfecbBs5MnXG
5oEDraXm/vGPmTf/z4avkm0t7bw1HTpYq8zWex3TFuNlaNmje/eWzXm/2NgJ
H0Hyqb/4BeAQy86RtXl5NmOWffihvR23pq0W/v3vsmPChNRZq1q3DiCjxMTB
d70rVbLmXvrhh9V9Qunp9B99OiH2ypAhQ2TJkiU2+XWoj8kZcSPvvFNmPfNM
bIxy9pLrOne2u2pvecW1k+xU7dOEvpxqHahTrXzOC47Q8+bolPxeLnJVkIXT
BkjrvpOt7kcL10mr1s1lx2EpE8dtcdFOWbt1jxwsXCPvv/ehrN5eEnuynLEc
78BgU6bz+oNdQPHhrVsTJpw6ehS41icUplY/qR1m523blipasnq1TH/qKdk6
bFj2hThPe4xZ+VrOQNDxnTMQzpXV7doZnnzZuLFhTR/tBQbD8mbNZK22nWHi
u+/amzLlEGcUI62XV+g5Vm+66IAjx7nWmF+8/75M+uEPZYu+qtZL1nXpIgMv
uUQmfuc79jwYl6NIcXTms8/aZLORofXh+cOuuYaZFrG4kp3PdfNffNHqweHD
Qz87QQO3x48ft08jI1LsVxAbeccdDA27bM/cuWEC33prml/pnN/8JjZhJTl1
7JjBfMmaNXYdsD3s2mulaxhOlePt9yHR6KWK3HZaoZIgNR2ttz9j2CyeNkga
fzY0TPwdq6RFi8ay60gaNiu+mCkt2naSXt27yeTZi+VU4rtyJh4glwICW7du
9WGzRaGLrpij4pQPG8cAQLpMThnnzdUyn13IVlb2pz+lIYJkOkaH1+bNm+MQ
qW+U06dWLZukG/v0kW5ly8qIm282dGaOTHvySXtpjtURS6arpDFNwYEJvqxR
I6vPgr/9zYYPaAyg0JVdIzjQvUzTgeedJ70rV5bpeu3MSAwcUCH14DrrQ52r
EIz+9Ve00aBCiUJYFHAqWbWG6kjqFGQ7uxRsss9t255NrOufAygjGBFPP51a
8atllWSvTpouYTSFmurEW9+9u/SqUoUR5327Z84cG3Qjb7opDKYvv9RbjLrj
Dq3rbH1RjgPr1smoe+6RuUpPNC6NM/KGG4xVfLQhYkVpMzwO4NJzOef2WE0G
LdXU+ygmlxqBuzcsllYtOwozZOPiKdKmfR9RAbVMHGXbVq+U+fOWyPYdhXLs
1GlnpFxhy2fVyQgwh7ZutYqUKBtN//WvZcvQoWkkMnOm/+pXBkzehoe2bDHK
p8xHogGYnrdtxIg0EtGTACzV5DKPxTIm/lbtq6N79qSZm1vmsoEz2uJ//1uW
N21qI2rJW2+ZLhXOOT8IizrSN/XrJ/3OPVc2KUkv+c9/pNvXvibTHnvMZIQZ
OrLzI9CtLSiwhu+uPz3oABXWBuh1sOaA88/nXqlOid5UhnaB8cuPP7ZhpzJI
AmmGrGo1xm9edzpvpt4T0YiD2cFzv/zoo7OqIT5eAe+CMGBSW3+1rI7s1ZlD
/fswPp+2OS7Fqg3zXr3Kl08oCfkUaTl9YzNOUbObnsOgHKODC90EkObzuHvv
lWLl5G5RMC1FwAr8vatWlTnPPuvDyYj19tuNWJNcO3lykGsbNCg9ZrWtTp+Q
2RMGyqChQ6Vrjz6yYktxgsXizWslr3UraaPi+8QFa3IHrMuuI2MZTFQQRSOX
2I0llTJg3TJnKSuXU+aacZUzz1MmvtvLFKYoQ+HPlXtd0/aBvLp9e2fBNGjW
fPZZKgt1qSdFixbJnD/9SWbqxOoSBx8NzmA6qR2EgUCFYisbfPnl0pO/l15q
n3nXRTp4rIO1c4BpUIVJycAe/8gjNnAnK0szIIZccYV14KJ//CMYHiLL0ltx
QIbmuDjZKwCqvBwx7qiP52CrMailGvP/8heTLDm4FiT3cxa+8YbdQ8d3uIcK
KFsDjA//L8Od1meqgHtJNtJzivRNdcjGssvScKflRt1yiz0CyPZprMPVhrIi
sYxR7J3z29+G4a7ndIv4W6Kc68OfFu6rcDKsfn0ZeeONaXqgvzGmFcvj6Koi
RRHDx+l9ETrjmLfzdysfmJRw221Js9cWMXlj1SqfAq6U7965Q/YfPBo/haEv
p0+rLndcjqmYcuLkydyh75rCAL9zFNIUexMeFWuF+2v3r+nYMd6yYnZIK0Zz
oO7lBX0pNmgVw/z8qENxnIzXHNm5E+wPdqYXXvBZkoQMnXU+Szb07Gll8196
6azaYZgl1WyUcx6SFYIDCg+zkHsC2UALsjBCwakTJ8rIrilTMjVkusoF4x96
SPpWr26nfP7KK9YNE775TZsciLMq+5tAMFNZZ6YinnZ3aISbwxweYwKWrOva
1ebdtCeekNk6MriEv1xG+fy//tVkjr06T2mYKH+kgU5tIRV6eqaC7dwXXjBQ
5XCJdt6f/2zPXPSvf9kIg7hWfvKJnQN55eV8RkqGKJ0cmPsdA6n4ZEECdsvn
kFjG4EOwAHC9H31i9MgRJujLDT16WDXG338/o7EMTac67agot/i8GNegQfgc
54WOY7uUhu5brVp2HkUlerRKOj4v9qgGzXnjH3wwyTl9VMkeqfeYoS3NHD6w
Zs23whzINQ8OVDF2tc7uAXHAgul5UXXl8AHMQHeZZotqHzxhyk9+wiANxeda
F3cOErFdyuDC1rB1+PB0K5p9/De+kcq4NdcsfP11kxd4tEJpogSDVr0HGnmu
ZsmwgE5uyekPZCUdHv9lAlxovDz7+edtrpl0fOGF9iqDVJHqpXLK0Kuussbn
nAWvvmrDyVVvRj7f9atd266ln/vXrCk9ypSRL5s0SaBpNuqJE+VEieuoFczw
ZVT5+9+bAsqQ0/ESvr5MvlSBviBiIbftXa6cNQuPX/Daa3Y7JhmPZTLO0rFA
2S7l+CTA67gZqUoE16Gjo1Ny/QgdZ4AgNID4NvH73+dzak5mAPdTZswMjz08
SGGK5punY1P128HxVEZ4VP3TYDhj1Hsx6N0tCjbKImWYYDroS4LMmwY9ZGGf
Fbzph7F3363CyQkDNJ8EHE4wfStV0npoqaISg9tlKxtfOi726jSGQHgpk78i
UfVROWy03lv59YxJ4GrgNhU6fBIcWL/eTJGo2RybfVL89rfxvSvLgQ0bZOKj
j1qtJ2uTHt6+3QQIAK2PTleVmGMTV01Gvs9feqnUTOit52EmParCjNmdRo2K
PFVWNubA/MtnGdG3xjKT1nU2YdK4wsq+KcsU5idp3TBFKHPI2k6dTP9DuuwZ
W8RMAkq5ACqzCV1Un2Vmitn67gov1gOjtJX5jrbgPIYh9VqgHIC0fzSYP4JO
G00dPmMAYSQPZjEzHZ0Zy+PnL78s/ZRLeB71YlYgkNGWlPPcGVrOSFjeuLEB
8grVADgggZlPPZVMLAhTs3Q2o+pxAOC0tY6gXP+ETcgDB9IIx2BE10Ps+/fv
7x97fh/6qOqd0JGNOwXTbmFkp573scjP6NtNRUT5lCHauiOuvx7hJ/Z8ra+M
cxOotMa0CNaP4SoMdY/yPhjGPbjnxgD8ZfhS36BrVh2OEnTloAoom3aNqhN2
+S4RO3gF5KZvlB7ruVqnMxnt5tpjmYhWjOM1+flGO/QndgWVTstwf30+wifK
DIKpyuWukDNrZiv2bx89OsyagQP1jp3tBaY9/ribK1UMESMtdDV0Rdri5JEj
drvDrvuC+zoKddT8t8G/WiX8jkEtTfCL2MRtD27cqEopZT+Qw3odZYc2bza8
ZDDPVS0AzGXAcyB+79QqIiHQZdABHDrhW9+yQQb8u+UVIwpVZdAv0QmBOoxR
hnt1iRrFtJ//3AY4A7tzjji+Ji9PuillDNehgszK4fQAHZlq2qSJgQSA0U37
c0WrVnL61CnT6YA25OpuEdbMtqgTAegzWllgnhK7h5tR0HrMS6eTHbBAosLq
DoAteftt2apippa5xOuC1KpPP83kqgxuBww4WdtGd+dcNSByQV/VhEfGWYQE
xOMR0pAIDO2VqjoHcojSc027l2vCHCZh4dbUEZVMN6gHOjJgC/OKaTMoRgQF
mN9BVYnjkd+V5JTWeV23btK7Rg3DDeoCPZrJ5/bbb4yvR6sN1yrPVYg/56uz
prTqe5FsHjw4yQCDL7vMGhY7zCwVrHlrOmqbjmdacdL3vpeUGsb5Dh00DFIO
WgSrHPNjugpqBYElkuasc5xpgfRVMU7O9ToOO2TMQGkil13yyitnM0n7NAFp
kI5w2vqtV7RoEXD81Ve19UMZwwLhDqU8iCb3mofnMz2PYcIU8uE9/LrrzN+B
DbJzVI6xUU7U6WLqoQ5xn1rgdNc4LkC7QXXqJMtHryj2wB1811unHFORY6Vi
fucoaNKaSIk8Bw6CGxjKTEGEVXiUlkSQZwpzHs9Ak96o0kSnKJmuaN5cxqok
PuXHPzZzuo6lJKXBZUxbzuUeHMplAfeCEMfBa3F7aEbLfNagd1OskzVzNkV7
QARuOACrby8FDUakfVbw7hlrrIpBQmLQGc9KmklhFoVJc64BtdGJDi8krqH1
6gUxSicODeG6MseJeDnnYpwfredwHn9Vt4iacUW7rkvORKSh43VJOGESDdNJ
P+fZZ1WolmRv4vXH3X332WbQ6jgvnXeojg3tzZuTLAmDTNMxxFhY27lz6JYq
acLQGONUw8mL4gEH5vpogyoXZzzzcKrOJySfQ653q+QR4zUqxtNQBaY89phs
VkELsOl33nkm9iOsKba/GuuJ/Z4ogk2bNmWui2VAKfPkyK5daT55GQxXLjYl
8lKvihVlXUGB1eKYX5fcTxXSnGPsIdvE+Rfe/VIT3ag4gq6LUfxd9M9/ynhV
v3n/ZcosGBrp7eUq+gFODOFhV18tM3TgEGywXId9b60KPkEXa1cqq9DT2KvG
3ncfU62M+XDOScYctH6EC2YzUhtEgS0eycDPGXjBBUF1V7GAOWD+YFUoFOvC
W1QzwMdYgAEBEGFyAZtu/xl+7bXSo2xZm/CmLWgnKL9A1ZgsTN3VWbA/ag/+
lG45tAp/GPoqzu1Q/AAbEPiSIV77oo8+/ot33qHN3aCO6G1NXlycuvLgpk2y
sW9fpIaMCZ0qwh8/elj2lxwUP06eOC4nT56Kn07HmCn+nk72x9zJ/2ks4xVG
6MzR8Zs5z8rOCZYslQbMonajMZJRGZ8pt9mNO02vo0+7BpCw81SrDwDx1FPl
YmMXI1cqlblhjMZ39oRvwJv1Kl+aP+XXv/aBiE1uqN7du7VbEG+dR6kQFYDr
h3z96zJaRwVtDAzMfvbZ8+L77dKx1jkgUEIGWCwC15nIgAligOr9KoYnZNgc
PXCK6qkpAZduygw6xpLd3c9zwwgvMFXRG92Rg3FKVVyWNzLVGjsmYF5imnz+
4oupybHfwYxurg6gWN7wo2tkLGBfsSXjCIFfhWCH3bt3J4RYEwXTRTmCqQur
S956KyEEde2cyTqEMWObQPvmm8muhO+lU+AV2aA8URDfyRGDOWl+MexKN8nA
iy6yOTVI/9KPTFtmf0Gs/gDFOR6HkGe2ABXaEJLcqNcrkjekfXjbNpmhE4pr
l6pSh2sKzORafGTYeDtFkl2rCoPNZ5WbmbBmGonP61+7tolBKHsgWec476Pl
Pb7qNebIxC4JPoAHQy69NNzj3HOTbWTI5ZdLf/0MqqH/uJ2E5mWS99ZhvaF3
7+BdUBUDYJj47W8bZLnzE9Ddrs9BpgZAOoUuTWEtgA5mHbMctmnjYLFEsePM
oDYcAnlBXsi0crjb/KX07tFV+irUjZgajJMDureT/hOCS/70sUMyfkBn+aBZ
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
Ry4bvBnRoXDjSunavZ8MHdhLxk6bb8lFfIhvXTlPOvQeo6L82b1J78QyrBFY
mqc99lhCFtYMWNnPf55WMBonKBcQqR5DZfTMHmblN5GjUiXDWl+HmUwPyivg
KgG7YDXPY+wOD1yR2gB2jWJ74odu2fskAY3rh2ndsMCZ8Bw4y6nBrbUWQq70
ZTTHKfqogL8Xm5nCApxiKLnf5qCKG349tmVUbsIEUXdH6PDNMbqEReQ5VGEO
Mz2PaiExq+jinnxG11CtsduZ0Y6tSuvXl0p1YFXYsCHjdieMbv6I3mEldsT0
8un89RElFPOzq291dPM85A8OOKRrxiPqleOx5sTXla/yxFcdYDVCNoQooniO
AG6Bgg1wePgo5/laMVUIqsVbMm7Nyvrqq9klqirlMlcPbtqUTH5YO7kU3zCY
NeE73wFLyp1xSXZlVFlz5ljZ5s0Zj4gClvKCCJkIBVkedWTnxIlxvW4FGTkw
T3pPMlO6FK6YJS0+6yRHJKUyOHUq2KKnD+0ln/UdzxrzWNPKKUYRe+CmzZYr
y4IHJnzjG/YG2Jm9P7AKRHu0nYcUBAdiyXEGYXaBxKzLMNuzzn5eF/QBLUBL
C/v58ENrTSKziF4G9bDC4442pNMZSCdwwM7dooKA7MnhYe+gMuPSm3SLPoOm
tPopSlK/MdFWTeAnndo5sgcxae6WRO7tEsVnt7sTN8j/qMB48e0eOi14D4zC
xp6vv26IRpsQVIlr3acwhmqz/sQILYIDQeesT/AyS7EB82AXdbkcOwLGbhjF
kCSGE7nWACubWqksaqyucgTs6qxjETCK6Baer8hPEAhWJBhQGSZFpmHxYvp7
1oBg78+38ARXkkBv7st4IBQLiMDXhOiHnhADaE3VxQ+ZH7WeCY88Ym2H9jNV
Z4Gdpxq2+1thVgySpBVxpkCiiBqQnYPfAuZY3a5d5q04/I8e2i+Fe4rjwI9l
2t/RtZKm09kYAkSP0n125W20e2v7x7JyyYaNsjns6qsDiFcKXjlFU4Zy9/h/
jrLhuJ67fM2fODrHdBNUh0gMvZx8PEwpSyPZVBZpCT+WcV8wpyK7L+cxDUFx
khgHDmgAyN+qEoWV/+pXGV9pmb5T8ZZ1FsPjui7XFixyV+VuW0mnlGFvgqag
iGbag85XXyLkcJZj6olVrRwsVDq/PBYDrkCXdGls7N13pz4oijg/K1nkq8me
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
SllzaaPiL3z99diId1rNTSFQZEfk5A0AEyxfW3M21nBDD7IcwIO923dXWh7X
kVluGhVBPQAC0Rtwce+QpanSKcK74DV2+Y/VGy4QMcOxraNEwUxY/nzVsilD
9BpxuTG4Gy+1pTVXxX3ZBx+ETrrAyATJmlv5Qhh0LuxT9opxKSO6MHvyoFtD
aggwzBQUDF+InVhlx46acYxRO8t4HOMYconHPfNehhgBJNPK+r9zEHC0RlUs
3+4AoZWnZjXCq2xZuwUox62fbGsKZQB0FyQNAgMIxoUxfGm4o//JANsmtuES
xyfiuoTjC9BpiWW0E9AjCCLjtdBTMCR2DecGa14IffOV4xAFYzE//u8r29e6
IapsrkUpqR04v/IyWSsT2kz7jCVpy5yNdExbztQJpLN3v9ySN1S+16iDifcd
7r5fyjfqKl//e1MZFm0oI3LUkkRCp0PIyurCIqn78ofy7UafyUq91+Lps4NK
oiAeUttDNeVkgLZKwSPfkpvaD5IneowqY9n6K1gkbUra4+6SJUvKWERZZWsc
AmiZ71ihEJOT8qO1nfrTn2bTUMTAY7B8r46DVVqb9Tt3y6GNG+ToyVMyT2vW
ps6lWJIynj4ELd+WEOobsiEi4lasQtp+IDfWzTmifIQt10zMcoSoHpOmeeoM
guY3Dx7soXHmJolr4nlbhp/ii0GJsaEbTBhn9izFew8hMJUglJn6j3hrFA8f
RbUBq5PzEZYqi83T79M5p0+XzXlEvF3ALatAUiYgIb1o/EMPZbOT+MryZ58N
crFdUWon5AqycEqWe44UrnXu8Ti21QunypS5y2R4x09kxtL1bp/H7TFp0iTZ
oP28c+fOxDo6u93OzIHEw3wgWs6byndqymY9KmsOfK7LOvsrmNTsm4kRV89h
XdPV2Dk/k9a0ZFzyNeeEQiPLFD11lLmvdVYTN2YIo3jGrcnKik2oc7h9GCA1
E4ugGgGVhl8qu4NxPHKSqjdYxnEjcKAKcT46Sm6mthiOkAQHz0CEc//82FqI
oWCj59k1s1TYfCHTIF43U4WTUaxDVN3G9xa2ACwFv2TK0nuTuT2uavaYE0+Q
xGINSw5vy3VJq3WemaocyDx9NXmmMXeRkpKFSyRYAVdZQktH8NpY5Meo3ISd
BlIkEsAe2atMmczlib8s6VaNGiYNdw7AZhIxU8ymHxlH485CeNwtR9y//502
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
9x+Sm9sPlKcGTlbJ5aTRyJqiEtmoNHIoTqelhcVS5sMucneB791xrpnfzJVE
APneErm+/SC5/5mXZVClSvLp/Y9IhYYF8nDPcXIANNTzPlbaKGOM+J70hl5U
DYjRKJFNq5RacYsdbzDNGXUfCzvUuaN1Oj/23d647/3oO+/MehaUN7gMs50P
QNNtuDRZ58qbGga/oMhHLM+4sm98FM63R5vGEa/39Mg5+G+DmWfOfPJJpwdz
R2kR7qiapenBAyV27dqV6AHfhucdcFxMkRK/+lWcNhcYV5vZR6cMIUO+zgRb
ProXUrGHQRCtZkb4Z54xfubwqDYkdGKd7X9P3Vcp+aFwR2Cjca8Qj9Vh7jYS
THGLopIy5/nnXUjzzSznKZCnwAesbzxEJ044LygqOCAMAVX0dQcKzkrbnzyu
Q/PNqtyfDq/xkph/dHSk9a4oJspL2EqSL8n5IGWtKGcDiJeK/qkKZ56alsSG
W36uNVPQTBQDrbl4a1CggjgKDJa3+yJ8TB4zRj6hS37wA3sUec9wv1q+HB3z
5ruOqxrxUyNSWtnFF5srB8UCxIW+YHtirVGlLRaoQQNzVeEKMnup1g8bWbeo
sHJ/D2PHlUumPGgUWmMfYl/JyvmsGDwSQzRt3ag2H63KcLH8QKpweCJLnt85
h1AQ5akrfn9WzDpU07yWFCLursMM6KP0inWSHjT1U9vLLJHvvBNIplba8cmj
4DnVvG0Kfx4MB9lYlufFYT9gzx+gpJMb2IRZlRwpHmwBFPB0VhPRgmT/ZUSr
opJqjVxVEIVYWglLFy3HTCAtgSVnOucc+6v6Ua632R6nIp4TDGKbZypVHTyX
YDyu4bZEMJ4swjQTxQkmtMMJlmSLv7v2WoMZPruz0UJlVA110umVW4aTUf9v
VRvHTlO557nXAuFcb4CLEQySuOd/XzPnR1/9aXFBHanRqLOc2zDfyARyqRIJ
iNv319u1PucCufq1JnKFfl/z465SU0moWjzvipc+lO73PyRj120zVeZ6iOz8
i6WKkk0NJaBqem6Vj7vb+U5u9V/6wAiBOPf+ShZt735Ayr6bLw3y0gY1tMMp
bY0lO/dK+fc7yb35QzPWbMo7excF+xnRiG0b6KWNe5p21DvzNelSpqwUPPRN
2bT/oJ63SPppdzS55AqLhrwvb6hsHzbUlulhNd+3anXG1gjiq4g8l2svmxrc
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
bZyob4d0gmEklnp0f/jDFC2uTTtMgDA+AGbTe6a1tNQ8GWKXZHCBG9OA1H6+
E3VKDLukavHcjTx0phfUrnKonb7bAL62oiI6yfrUgd/+VmfhBltNsRtlcFkd
PMBKbFd5uelGimjRE0wfIELLw8OpkR/o86HMlFjqGxArmj9fFrksLMyCkdmv
W2ctFfANidUPzLnAQNP/8STDpBAbVvmv1deblLjLrMqmDR9Ozba32AA5As5y
gZccn+Offy7rVcYYpfCnP5WzNHx9viu9FZclCTzQXRL79VMNGn9OUf36i7nP
f+gI2nTvFOosOy+Vy+F3byxj2jVxEm2cNJGKCk/R7SwIpVr3ZytY9XqcKlva
qJiF5T2sTt3Jsv0513CZBqIkhrgl0D3/XEpJU6dJW46S44WsVvXXsv8Baue3
zh29ESGp0PKD8WXMqlibGQJXE4I9oNJMZrVv/tQHaezKaGsajGN8WH37eJGU
j4Sso+LDx5jc9qGwJ56S8+0qr5L41KlM3j0Zf8bycW9dHinq3OO//1JUKHzQ
ZxFYBvhc/+hj1HnqJPnffqeoR5Pm+UquKoBjIks6xMpe1M4ZkPTLLe10if9g
jIFEK8p9LHFnVLCp7kUSZRJBMxm/ig4dAQ2gHUx3zbHg9DE6FLBu2DLlzsJ4
7nmW6gxEj/zLnTbfPYECUVaE1+y5iPWK/DxBZyCceYoosF7droQ4AAWAAxMd
VLAzDE4ojjJdsn2TJZ8WsTlQn6b+70JKfekVyimrFPCAFxKnRuiueO94e5gR
pVCKLvI++Qc/ASuTF4V94B3E8gODj1XW0SSeE9KA8+GNQ+7UUgWAz+owXyTs
QJX8d8AZKn426EhGdZNImcXSMkz2qUe3lkn30LZ33sV3s/qiTgE3qqr0Hekr
6hDkoVQPra42sIPUEEBRDmtEymOm2WR/OrozlbwT8+TEXTWl5OXjTlUdZCzs
cHblbdtAwUGBFLZmLbX1XHcxWGN6UiIZhP8/R58Mzi28nLt++Ut9iXdLcYSU
0aPFy4K0GpjZpIMuj8VpDST7Rz+SwF3piNuvn9jMjNiQol0wsXV2isograBn
zqTTvr4iGLA/ehwi3BX9k6T1lengMVy6XiWNGGEtjuLbWr3a+raQarOHxZBM
iSEMziZrxRsoKAAyjzAUY4UDSsAItP3tt9VZbhezqgCArgRh1CeEA8OXCACB
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
hCBr8gUvjv1GeV36/7rq+8r/AAIK6W4=\
\>"],ExpressionUUID->"0d8c21c0-590c-49a3-98e3-767df1130b86"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"2b5f5186-a5bd-4702-b7ca-2447af88c268"],

Cell[CellGroupData[{

Cell["Second level section heading", "Subsection",ExpressionUUID->"91281155-3829-486b-9ee8-a4b38dc64b2f"],

Cell[CellGroupData[{

Cell["Third level section heading", "Subsubsection",ExpressionUUID->"50700d2f-e8d5-43d5-be8f-f89b268eeaff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"BesselJ", "[", 
       RowBox[{"n", ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",ExpressionUUID->\
"64419f24-509b-408d-aaba-91942494d3de"],

Cell[BoxData[
 GraphicsBox[
  GraphicsComplexBox[{{2.04082 10^(-7), 1.02041 10^(-7)}, {0.196287, 
    0.0976714}, {0.409084, 0.200293}, {0.607779, 0.290072}, {0.802576, 
    0.369834}, {1.01388, 0.444534}, {1.21109, 0.501105}, {1.42481, 
    0.546286}, {1.63463, 0.573086}, {1.83035, 0.581841}, {2.04257, 
    0.573618}, {2.2407, 0.549859}, {2.43493, 0.512496}, {2.64567, 0.457825}, {
    2.84231, 0.39548}, {3.05546, 0.318107}, {3.26471, 0.235125}, {3.45986, 
    0.154205}, {3.67151, 0.0656445}, {3.86907, -0.0149736}, {
    4.08314, -0.0971192}, {4.29331, -0.169744}, {4.48938, -0.228186}, {
    4.70196, -0.279492}, {4.90044, -0.314759}, {5.09502, -0.336703}, {
    5.30611, -0.346019}, {5.5031, -0.341265}, {5.7166, -0.322169}, {
    5.9262, -0.290546}, {6.1217, -0.251057}, {6.33371, -0.199337}, {
    6.53162, -0.144816}, {6.72563, -0.0876546}, {6.93616, -0.0239493}, {
    7.13258, 0.0347435}, {7.34551, 0.095045}, {7.54434, 0.146092}, {7.73927, 
    0.189439}, {7.95071, 0.227322}, {8.14805, 0.252928}, {8.3619, 0.269183}, {
    8.57186, 0.27313}, {8.76771, 0.266177}, {8.98007, 0.247609}, {9.17833, 
    0.220837}, {9.3727, 0.186926}, {9.58357, 0.143181}, {9.78034, 
    0.0975788}, {10., 0.0434728}, {0.0981434, 0.0490126}, {0.908231, 
    0.408873}, {1.11249, 0.474516}, {1.31795, 0.525884}, {1.52972, 
    0.561915}, {1.73249, 0.579436}, {1.93646, 0.58001}, {2.14164, 0.563625}, {
    2.33781, 0.532841}, {2.5403, 0.486875}, {2.74399, 0.427886}, {
    4.39135, -0.200203}, {4.59567, -0.25551}, {4.8012, -0.298714}, {
    4.99773, -0.327324}, {5.20057, -0.343248}, {5.40461, -0.345237}, {
    5.60985, -0.333464}, {5.8214, -0.307855}, {6.02395, -0.271904}, {
    6.22771, -0.226214}, {7.6418, 0.16869}, {7.84499, 0.20966}, {8.04938, 
    0.241359}, {8.25498, 0.262586}, {8.46688, 0.272649}, {8.66978, 
    0.270915}, {8.87389, 0.258274}, {9.0792, 0.235291}, {9.27552, 0.204748}, {
    9.89017, 0.0707978}, {0.0490718, 0.0245285}, {0.855404, 0.389757}, {
    1.06319, 0.459937}, {1.26452, 0.514031}, {1.47726, 0.554652}, {1.68356, 
    0.576754}, {1.8834, 0.5815}, {2.09211, 0.569101}, {2.28926, 0.541777}, {
    2.48761, 0.500132}, {2.69483, 0.44318}, {4.34233, -0.18527}, {
    4.54253, -0.242253}, {4.75158, -0.289493}, {4.94908, -0.321437}, {
    5.14779, -0.340449}, {5.35536, -0.346031}, {5.55647, -0.337812}, {
    5.769, -0.315399}, {5.97508, -0.281514}, {6.17471, -0.238909}, {7.59307, 
    0.157611}, {7.79213, 0.199858}, {8.00005, 0.234643}, {8.20152, 
    0.258136}, {8.41439, 0.27129}, {8.62082, 0.272341}, {8.8208, 0.262579}, {
    9.02964, 0.241727}, {9.22692, 0.213019}, {9.83526, 0.0842767}, {1.16179, 
    0.488246}, {1.37138, 0.536642}, {1.58217, 0.568062}, {1.78142, 
    0.581131}, {1.98952, 0.577379}, {2.19117, 0.557205}, {2.38637, 
    0.523073}, {4.64882, -0.26793}, {4.85082, -0.307139}, {
    5.04637, -0.332414}, {5.25334, -0.345103}, {5.45385, -0.343645}, {
    5.66322, -0.328243}, {5.8738, -0.299561}, {7.89785, 0.218821}, {8.09872, 
    0.247458}, {8.30844, 0.26627}, {8.51937, 0.273261}, {8.71875, 0.268857}, {
    8.92698, 0.253278}, {9.12877, 0.228321}, {9.94509, 0.0571829}, {0.024536, 
    0.0122671}, {0.82899, 0.379894}, {1.03854, 0.452337}, {1.23781, 
    0.507701}, {1.45104, 0.550606}, {1.65909, 0.575043}, {1.85687, 
    0.581815}, {2.06734, 0.57148}, {2.26498, 0.545926}, {2.46127, 0.506427}, {
    2.67025, 0.450586}, {4.31782, -0.17758}, {4.51595, -0.235319}, {
    4.72677, -0.284589}, {4.92476, -0.318196}, {5.12141, -0.338694}, {
    5.33073, -0.346126}, {5.52979, -0.339651}, {5.7428, -0.318882}, {
    5.95064, -0.286104}, {6.1482, -0.245054}, {7.5687, 0.151905}, {7.7657, 
    0.194724}, {7.97538, 0.231057}, {8.17478, 0.255626}, {8.38815, 0.27033}, {
    8.59634, 0.272816}, {8.79426, 0.264467}, {9.00486, 0.244738}, {9.20263, 
    0.216986}, {9.8078, 0.0909524}, {1.13714, 0.481489}, {1.34466, 
    0.531401}, {1.55595, 0.565128}, {1.75695, 0.580407}, {1.96299, 
    0.578836}, {2.1664, 0.560532}, {2.36209, 0.52806}, {4.62224, -0.261826}, {
    4.82601, -0.303026}, {5.02205, -0.329969}, {5.22695, -0.344294}, {
    5.42923, -0.34454}, {5.63654, -0.330961}, {5.8476, -0.3038}, {7.87142, 
    0.214322}, {8.07405, 0.244486}, {8.28171, 0.264524}, {8.49313, 
    0.273048}, {8.69427, 0.269964}, {8.90044, 0.255861}, {9.10399, 
    0.231872}, {9.91763, 0.0640048}, {1.50349, 0.558422}, {1.70802, 
    0.578218}, {1.90993, 0.580898}, {2.11687, 0.566482}, {
    4.97341, -0.32448}, {5.17418, -0.341966}, {5.37998, -0.345734}, {
    5.58316, -0.335748}, {8.22825, 0.260456}, {8.44064, 0.272063}, {8.6453, 
    0.271707}, {8.84735, 0.260514}, {1.6084, 0.570715}, {1.80588, 0.581609}, {
    2.01605, 0.575639}, {5.0707, -0.334659}, {5.27972, -0.345678}, {
    5.47848, -0.342553}, {8.33517, 0.267823}, {8.54561, 0.273288}, {8.74323, 
    0.267594}, {9.97254, 0.0503372}, {0.0122681, 0.00613394}, {0.815783, 
    0.374888}, {1.02621, 0.44846}, {1.22445, 0.504436}, {1.43792, 0.54848}, {
    1.64686, 0.574095}, {1.84361, 0.581864}, {2.05496, 0.57258}, {2.25284, 
    0.54792}, {2.4481, 0.50949}, {2.65796, 0.454226}, {4.30557, -0.17368}, {
    4.50267, -0.231778}, {4.71437, -0.282065}, {4.9126, -0.316502}, {
    5.10821, -0.337728}, {5.31842, -0.346098}, {5.51644, -0.340487}, {
    5.7297, -0.32055}, {5.93842, -0.288344}, {6.13495, -0.248073}, {7.55652, 
    0.149012}, {7.75249, 0.1921}, {7.96305, 0.229208}, {8.16142, 0.2543}, {
    8.37503, 0.26978}, {8.5841, 0.272993}, {8.78098, 0.265345}, {8.99246, 
    0.246191}, {9.19048, 0.218926}, {9.79407, 0.0942721}, {1.12481, 
    0.478029}, {1.33131, 0.528677}, {1.54283, 0.563557}, {1.74472, 
    0.579952}, {1.94972, 0.579458}, {2.15402, 0.562108}, {2.34995, 
    0.530476}, {4.60896, -0.258694}, {4.8136, -0.300895}, {
    5.00989, -0.328671}, {5.21376, -0.3438}, {5.41692, -0.344913}, {
    5.62319, -0.33224}, {5.8345, -0.30585}, {7.85821, 0.212011}, {8.06172, 
    0.242942}, {8.26834, 0.263579}, {8.48, 0.272872}, {8.68203, 0.270459}, {
    8.88716, 0.257089}, {9.09159, 0.233598}, {9.9039, 0.0674052}, {1.49038, 
    0.556572}, {1.69579, 0.577517}, {1.89667, 0.581235}, {2.10449, 
    0.567821}, {4.96125, -0.322983}, {5.16099, -0.341237}, {
    5.36767, -0.345908}, {5.56982, -0.336808}, {8.21488, 0.25932}, {8.42752, 
    0.271699}, {8.63306, 0.272044}, {8.83407, 0.261568}, {1.59529, 
    0.569424}, {1.79365, 0.581401}, {2.00278, 0.576544}, {
    5.05854, -0.333561}, {5.26653, -0.34542}, {5.46616, -0.343123}, {8.32181, 
    0.267071}, {8.53249, 0.273298}, {8.73099, 0.268245}, {9.95881, 
    0.0537627}, {1.67132, 0.575929}, {1.87014, 0.581693}, {
    5.1346, -0.339601}, {5.34305, -0.346104}, {8.40127, 0.270833}, {8.60858, 
    0.272598}, {1.76918, 0.5808}, {1.97625, 0.578143}, {5.24014, -0.344728}, {
    5.44154, -0.344117}, {8.29508, 0.265421}, {8.50625, 0.273178}, {8.70651, 
    0.26943}, {1.72025, 0.578858}, {1.9232, 0.58049}, {5.18737, -0.342637}, {
    5.39229, -0.34551}, {8.45376, 0.272379}, {8.65754, 0.271331}, {1.81811, 
    0.581756}, {5.29292, -0.345878}, {8.55874, 0.273232}, {9.98627, 
    0.046907}, {0.00613415, 0.00306706}, {0.80918, 0.372367}, {1.02005, 
    0.446503}, {1.21777, 0.502778}, {1.43137, 0.547391}, {1.64074, 
    0.573598}, {1.83698, 0.581862}, {2.04877, 0.573107}, {2.24677, 
    0.548896}, {2.44151, 0.511}, {2.65181, 0.456031}, {4.29944, -0.171717}, {
    4.49602, -0.229988}, {4.70816, -0.280784}, {4.90652, -0.315636}, {
    5.10162, -0.337223}, {5.31227, -0.346065}, {5.50977, -0.340883}, {
    5.72315, -0.321366}, {5.93231, -0.28945}, {6.12833, -0.24957}, {7.55043, 
    0.147555}, {7.74588, 0.190774}, {7.95688, 0.22827}, {8.15474, 0.25362}, {
    8.36847, 0.269487}, {8.57798, 0.273066}, {8.77435, 0.265767}, {8.98627, 
    0.246905}, {9.18441, 0.219885}, {9.78721, 0.0959271}, {1.11865, 
    0.476279}, {1.32463, 0.527289}, {1.53627, 0.562744}, {1.7386, 0.579702}, {
    1.94309, 0.579743}, {2.14783, 0.562874}, {2.34388, 0.531665}, {
    4.60231, -0.257108}, {4.8074, -0.29981}, {5.00381, -0.328004}, {
    5.20716, -0.343531}, {5.41076, -0.345081}, {5.61652, -0.332859}, {
    5.82795, -0.306858}, {7.8516, 0.21084}, {8.05555, 0.242156}, {8.26166, 
    0.263088}, {8.47344, 0.272766}, {8.6759, 0.270692}, {8.88053, 0.257687}, {
    9.0854, 0.234449}, {9.89704, 0.0691026}, {1.48382, 0.555621}, {1.68967, 
    0.577143}, {1.89003, 0.581377}, {2.0983, 0.568469}, {
    4.95516, -0.322216}, {5.15439, -0.34085}, {5.36151, -0.345975}, {
    5.56315, -0.337317}, {8.2082, 0.258734}, {8.42095, 0.2715}, {8.62694, 
    0.272198}, {8.82744, 0.262079}, {1.58873, 0.568752}, {1.78753, 
    0.581274}, {1.99615, 0.57697}, {5.05246, -0.332994}, {
    5.25993, -0.345269}, {5.46001, -0.34339}, {8.31512, 0.266676}, {8.52593, 
    0.273285}, {8.72487, 0.268556}, {9.95195, 0.0554735}, {1.66521, 
    0.575494}, {1.86351, 0.581763}, {5.128, -0.339155}, {
    5.33689, -0.346121}, {8.39471, 0.270587}, {8.60246, 0.272712}, {1.76307, 
    0.580611}, {1.96962, 0.578498}, {5.23355, -0.344518}, {
    5.43538, -0.344334}, {8.28839, 0.264978}, {8.49969, 0.273119}, {8.70039, 
    0.269702}, {1.71414, 0.578546}, {1.91656, 0.580703}, {
    5.18078, -0.342309}, {5.38614, -0.345628}, {8.4472, 0.272227}, {8.65142, 
    0.271524}, {1.812, 0.58169}, {5.28632, -0.345785}, {8.55218, 0.273266}, {
    9.97941, 0.0486227}, {1.85024, 0.581848}, {5.32458, -0.346118}, {8.59022, 
    0.272909}, {1.75084, 0.580187}, {5.22035, -0.344054}, {
    5.42307, -0.344733}, {8.48656, 0.272966}, {1.9033, 0.581076}, {
    5.37383, -0.345827}, {8.43408, 0.271887}, {1.79976, 0.581513}, {
    5.27313, -0.345557}, {8.53905, 0.273299}, {1.87677, 0.581606}, {
    5.3492, -0.346074}, {1.7753, 0.580973}, {8.51281, 0.273225}, {
    5.39845, -0.34538}, {8.46032, 0.27252}, {1.82423, 0.581806}, {
    5.29951, -0.345956}, {8.5653, 0.273187}, {9.99314, 0.0451904}, {
    0.00306718, 0.00153359}, {0.805878, 0.371102}, {1.01697, 0.44552}, {
    1.21443, 0.501944}, {1.42809, 0.546841}, {1.63769, 0.573344}, {1.83366, 
    0.581854}, {2.04567, 0.573364}, {2.24374, 0.54938}, {2.43822, 0.51175}, {
    2.64874, 0.456929}, {4.29638, -0.170731}, {4.4927, -0.229089}, {
    4.70506, -0.28014}, {4.90348, -0.315199}, {5.09832, -0.336965}, {
    5.30919, -0.346043}, {5.50644, -0.341076}, {5.71987, -0.321769}, {
    5.92926, -0.289999}, {6.12502, -0.250315}, {7.54738, 0.146824}, {7.74257, 
    0.190108}, {7.9538, 0.227797}, {8.1514, 0.253275}, {8.36519, 0.269336}, {
    8.57492, 0.273099}, {8.77103, 0.265973}, {8.98317, 0.247258}, {9.18137, 
    0.220362}, {9.78378, 0.0967534}, {1.11557, 0.475399}, {1.32129, 
    0.526589}, {1.533, 0.562332}, {1.73554, 0.579571}, {1.93978, 0.579879}, {
    2.14473, 0.563251}, {2.34085, 0.532255}, {4.59899, -0.256311}, {
    4.8043, -0.299264}, {5.00077, -0.327665}, {5.20386, -0.343392}, {
    5.40768, -0.34516}, {5.61319, -0.333163}, {5.82468, -0.307358}, {7.8483, 
    0.210251}, {8.05247, 0.241759}, {8.25832, 0.262839}, {8.47016, 
    0.272709}, {8.67284, 0.270804}, {8.87721, 0.257982}, {9.0823, 0.234871}, {
    9.8936, 0.0699504}, {1.48054, 0.555139}, {1.68662, 0.57695}, {1.88672, 
    0.581441}, {2.0952, 0.568787}, {4.95212, -0.321828}, {
    5.15109, -0.340651}, {5.35844, -0.346005}, {5.55981, -0.337566}, {8.20486,
     0.258436}, {8.41767, 0.271396}, {8.62388, 0.272271}, {8.82412, 
    0.26233}, {1.58545, 0.568409}, {1.78447, 0.581205}, {1.99283, 0.577177}, {
    5.04941, -0.332706}, {5.25664, -0.345188}, {5.45693, -0.343519}, {8.31178,
     0.266475}, {8.52265, 0.273275}, {8.72181, 0.268708}, {9.94852, 
    0.0563284}, {1.66215, 0.57527}, {1.86019, 0.581791}, {
    5.1247, -0.338926}, {5.33381, -0.346125}, {8.39143, 0.27046}, {8.5994, 
    0.272765}, {1.76001, 0.580511}, {1.9663, 0.578669}, {
    5.23025, -0.344408}, {5.43231, -0.344439}, {8.28505, 0.264753}, {8.49641, 
    0.273085}, {8.69733, 0.269834}, {1.71108, 0.578384}, {1.91325, 
    0.580803}, {5.17748, -0.34214}, {5.38306, -0.345683}, {8.44392, 
    0.272146}, {8.64836, 0.271617}, {1.80894, 0.581652}, {
    5.28302, -0.345734}, {8.54889, 0.273279}, {9.97597, 0.0494801}, {1.84693, 
    0.581858}, {5.3215, -0.34611}, {8.58716, 0.272952}, {1.74778, 0.580072}, {
    5.21706, -0.343929}, {5.41999, -0.344824}, {8.48328, 0.27292}, {1.89998, 
    0.581157}, {5.37075, -0.345869}, {8.4308, 0.271795}, {1.79671, 
    0.581459}, {5.26983, -0.34549}, {8.53577, 0.2733}, {1.87345, 0.581652}, {
    5.34612, -0.34609}, {1.77224, 0.580889}, {8.50953, 0.273203}, {
    5.39537, -0.345447}, {8.45704, 0.272451}, {1.82117, 0.581783}, {
    5.29622, -0.345919}, {8.56202, 0.273211}, {9.9897, 0.0460488}, {1.84029, 
    0.581865}, {5.31534, -0.346083}, {8.58104, 0.273031}, {8.47672, 
    0.27282}, {5.36459, -0.345943}, {1.79059, 0.58134}, {8.52921, 0.273293}, {
    1.86682, 0.581731}, {5.33997, -0.346114}, {8.50297, 0.27315}, {1.81506, 
    0.581725}, {5.28962, -0.345833}, {8.55546, 0.273251}, {1.85356, 
    0.581834}, {5.32766, -0.346124}, {8.54233, 0.273295}, {1.88009, 
    0.581555}, {5.35228, -0.346054}, {8.51609, 0.273245}, {1.82729, 
    0.581826}, {5.30281, -0.345989}, {8.56858, 0.27316}, {9.99657, 
    0.0443317}, {2.04082 10^(-7), 5.20616 10^(-15)}, {0.196287, 0.00480061}, {
    0.409084, 0.0206285}, {0.607779, 0.0447693}, {0.802576, 0.0762803}, {
    1.01388, 0.117836}, {1.21109, 0.161935}, {1.42481, 0.213464}, {1.63463, 
    0.265571}, {1.83035, 0.313438}, {2.04257, 0.362261}, {2.2407, 0.402936}, {
    2.43493, 0.436482}, {2.64567, 0.464106}, {2.84231, 0.480351}, {3.05546, 
    0.486498}, {3.26471, 0.480293}, {3.45986, 0.463414}, {3.67151, 
    0.433287}, {3.86907, 0.394739}, {4.08314, 0.342788}, {4.29331, 0.28308}, {
    4.48938, 0.221325}, {4.70196, 0.1499}, {4.90044, 0.0811388}, {5.09502, 
    0.0138431}, {5.30611, -0.0567339}, {5.5031, -0.118241}, {
    5.7166, -0.177998}, {5.9262, -0.227762}, {6.1217, -0.264814}, {
    6.33371, -0.293625}, {6.53162, -0.30916}, {6.72563, -0.313476}, {
    6.93616, -0.306072}, {7.13258, -0.288333}, {7.34551, -0.258296}, {
    7.54434, -0.221372}, {7.73927, -0.178323}, {7.95071, -0.125855}, {
    8.14805, -0.0734058}, {8.3619, -0.0150604}, {8.57186, 0.0414226}, {
    8.76771, 0.0913899}, {8.98007, 0.140569}, {9.17833, 0.180122}, {9.3727, 
    0.211627}, {9.58357, 0.236537}, {9.78034, 0.250359}, {10., 0.25463}, {
    0.0981434, 0.00120305}, {0.302685, 0.0113651}, {0.508431, 0.0316223}, {
    0.705178, 0.0596233}, {0.908231, 0.0962027}, {2.33781, 0.420589}, {2.5403,
     0.451533}, {2.74399, 0.473446}, {2.94888, 0.484967}, {3.16008, 
    0.484934}, {3.36228, 0.473186}, {3.56568, 0.449852}, {3.77029, 
    0.415215}, {3.97611, 0.369996}, {5.8214, -0.204092}, {
    6.02395, -0.24749}, {6.22771, -0.280756}, {6.43267, -0.302791}, {
    6.62863, -0.31267}, {6.8309, -0.311321}, {7.03437, -0.298463}, {
    7.23904, -0.274641}, {7.44492, -0.240814}, {9.0792, 0.161206}, {9.27552, 
    0.196843}, {9.47813, 0.225347}, {9.68196, 0.244615}, {9.89017, 
    0.253974}, {0.0490718, 0.000300945}, {0.249486, 0.00774012}, {0.458757, 
    0.0258489}, {0.656478, 0.0519616}, {0.855404, 0.0860132}, {2.28926, 
    0.411971}, {2.48761, 0.444305}, {2.69483, 0.469073}, {2.89559, 
    0.483039}, {3.10777, 0.486099}, {3.31349, 0.477074}, {3.51277, 
    0.457015}, {3.7209, 0.424559}, {3.92259, 0.382688}, {5.769, -0.191335}, {
    5.97508, -0.237918}, {6.17471, -0.273163}, {6.38319, -0.298555}, {
    6.58013, -0.311254}, {6.77827, -0.31279}, {6.98526, -0.302589}, {
    7.18581, -0.28183}, {7.39522, -0.249812}, {9.02964, 0.151092}, {9.22692, 
    0.188717}, {9.42542, 0.218797}, {9.63276, 0.240865}, {9.83526, 
    0.252536}, {0.147215, 0.00270414}, {0.355884, 0.0156653}, {0.558105, 
    0.0379343}, {2.38637, 0.428767}, {2.59298, 0.458141}, {2.79315, 
    0.47721}, {3.00217, 0.486123}, {3.21239, 0.483}, {3.41107, 0.468631}, {
    3.6186, 0.441939}, {6.07283, -0.25646}, {6.28071, -0.287581}, {
    6.48215, -0.306327}, {6.67713, -0.31341}, {6.88353, -0.309078}, {
    7.08347, -0.293706}, {7.29228, -0.266788}, {9.32411, 0.204485}, {9.53085, 
    0.231265}, {9.73115, 0.247781}, {9.94509, 0.254671}, {0.024536, 
    0.0000752482}, {0.222886, 0.00618412}, {0.43392, 0.0231687}, {0.632129, 
    0.0483057}, {0.82899, 0.0810879}, {2.26498, 0.407504}, {2.46127, 
    0.440467}, {2.67025, 0.466663}, {2.86895, 0.481789}, {3.08161, 
    0.486394}, {3.2891, 0.478768}, {3.48631, 0.46031}, {3.69621, 0.429001}, {
    3.89583, 0.388795}, {5.7428, -0.184737}, {5.95064, -0.232912}, {
    6.1482, -0.269082}, {6.35845, -0.296177}, {6.55587, -0.310292}, {
    6.75195, -0.313231}, {6.96071, -0.304411}, {7.15919, -0.285169}, {
    7.37036, -0.254119}, {9.00486, 0.14588}, {9.20263, 0.184477}, {9.39906, 
    0.215288}, {9.60817, 0.238773}, {9.8078, 0.25154}, {0.122679, 
    0.00187892}, {0.329285, 0.0134315}, {0.533268, 0.0347119}, {2.36209, 
    0.424735}, {2.56664, 0.454916}, {2.76857, 0.475405}, {2.97552, 
    0.485642}, {3.18624, 0.484063}, {3.38667, 0.470992}, {3.59214, 
    0.445989}, {6.04839, -0.252051}, {6.25421, -0.284265}, {
    6.45741, -0.304646}, {6.65288, -0.313125}, {6.85721, -0.310296}, {
    7.05892, -0.296162}, {7.26566, -0.270796}, {9.29981, 0.200725}, {9.50449, 
    0.228386}, {9.70655, 0.246272}, {9.91763, 0.254415}, {0.0736076, 
    0.000676954}, {0.276085, 0.00946752}, {2.71941, 0.471335}, {2.92224, 
    0.484098}, {3.13392, 0.485613}, {3.33789, 0.475214}, {
    6.40793, -0.30076}, {6.60438, -0.312047}, {6.80458, -0.312153}, {
    7.00981, -0.300605}, {9.65736, 0.242813}, {9.86271, 0.253348}, {0.171751, 
    0.00367824}, {2.81773, 0.478859}, {3.02881, 0.486409}, {3.23855, 
    0.481743}, {6.50688, -0.307831}, {6.70138, -0.313527}, {
    6.90984, -0.30767}, {9.75575, 0.249144}, {9.97254, 0.254743}, {0.0122681, 
    0.0000188131}, {0.209586, 0.00547074}, {0.421502, 0.021881}, {0.619954, 
    0.0465224}, {0.815783, 0.0786692}, {2.25284, 0.405233}, {2.4481, 
    0.438493}, {2.65796, 0.465403}, {2.85563, 0.481094}, {3.06853, 0.48647}, {
    3.2769, 0.479551}, {3.47308, 0.461886}, {3.68386, 0.431164}, {3.88245, 
    0.391788}, {5.7297, -0.181385}, {5.93842, -0.230355}, {
    6.13495, -0.266971}, {6.34608, -0.294923}, {6.54375, -0.309747}, {
    6.73879, -0.313378}, {6.94843, -0.305262}, {7.14589, -0.286773}, {
    7.35794, -0.256224}, {8.99246, 0.143237}, {9.19048, 0.182314}, {9.38588, 
    0.213477}, {9.59587, 0.237673}, {9.79407, 0.250972}, {0.110411, 
    0.00152228}, {0.315985, 0.0123773}, {0.52085, 0.0331504}, {2.34995, 
    0.422676}, {2.55347, 0.453244}, {2.75628, 0.474445}, {2.9622, 0.485328}, {
    3.17316, 0.484523}, {3.37448, 0.472109}, {3.57891, 0.447944}, {
    6.03617, -0.249789}, {6.24096, -0.282535}, {6.44504, -0.30374}, {
    6.64075, -0.312919}, {6.84405, -0.310832}, {7.04664, -0.297332}, {
    7.25235, -0.272739}, {9.28766, 0.198799}, {9.49131, 0.226886}, {9.69426, 
    0.245462}, {9.9039, 0.254218}, {0.0613397, 0.000470173}, {0.262786, 
    0.00858247}, {2.70712, 0.470223}, {2.90892, 0.483592}, {3.12085, 
    0.48588}, {3.32569, 0.476165}, {6.39556, -0.299679}, {
    6.59225, -0.311671}, {6.79142, -0.312496}, {6.99754, -0.301617}, {9.64506,
     0.241857}, {9.84899, 0.252965}, {0.159483, 0.00317262}, {2.80544, 
    0.478054}, {3.01549, 0.486291}, {3.22547, 0.482395}, {
    6.49451, -0.307101}, {6.68926, -0.31349}, {6.89668, -0.308398}, {9.74345, 
    0.248481}, {9.95881, 0.25473}, {0.0368039, 0.000169297}, {2.88227, 
    0.482437}, {3.09469, 0.486271}, {6.568, -0.310794}, {
    6.76511, -0.313035}, {9.82153, 0.252061}, {0.134947, 0.00227289}, {
    2.98885, 0.485907}, {3.19932, 0.483556}, {6.66501, -0.313289}, {
    6.87037, -0.309711}, {9.93136, 0.254566}, {0.0858755, 0.000921259}, {
    2.93556, 0.484556}, {3.147, 0.485298}, {6.6165, -0.31238}, {
    6.81774, -0.311761}, {9.87644, 0.253684}, {3.04213, 0.486478}, {
    6.71351, -0.313523}, {9.98627, 0.25471}, {0.00613415, 4.70347 10^(-6)}, {
    0.202937, 0.00513026}, {0.415293, 0.0212503}, {0.613866, 0.0456421}, {
    0.80918, 0.077471}, {2.24677, 0.404087}, {2.44151, 0.437492}, {2.65181, 
    0.464759}, {2.84897, 0.480728}, {3.06199, 0.48649}, {3.2708, 0.479928}, {
    3.46647, 0.462656}, {3.67769, 0.432231}, {3.87576, 0.393269}, {
    5.72315, -0.179696}, {5.93231, -0.229063}, {6.12833, -0.265899}, {
    6.3399, -0.294279}, {6.53769, -0.309459}, {6.73221, -0.313433}, {
    6.9423, -0.305672}, {7.13923, -0.287559}, {7.35172, -0.257264}, {8.98627, 
    0.141906}, {9.18441, 0.181221}, {9.37929, 0.212557}, {9.58972, 
    0.237109}, {9.78721, 0.250671}, {0.104277, 0.00135799}, {0.309335, 
    0.0118659}, {0.51464, 0.0323822}, {2.34388, 0.421636}, {2.54688, 
    0.452393}, {2.75013, 0.47395}, {2.95554, 0.485154}, {3.16662, 0.484735}, {
    3.36838, 0.472653}, {3.5723, 0.448904}, {6.03006, -0.248644}, {
    6.23433, -0.281651}, {6.43885, -0.303271}, {6.63469, -0.3128}, {
    6.83747, -0.311083}, {7.04051, -0.297902}, {7.2457, -0.273695}, {9.28159, 
    0.197825}, {9.48472, 0.226122}, {9.68811, 0.245043}, {9.89704, 
    0.254102}, {0.0552058, 0.000380863}, {0.256136, 0.00815595}, {2.70097, 
    0.469653}, {2.90225, 0.483321}, {3.11431, 0.485996}, {3.31959, 
    0.476625}, {6.38938, -0.299123}, {6.58619, -0.311468}, {
    6.78484, -0.312649}, {6.9914, -0.302108}, {9.63891, 0.241366}, {9.84212, 
    0.252756}, {0.153349, 0.00293373}, {2.79929, 0.477637}, {3.00883, 
    0.486213}, {3.21893, 0.482704}, {6.48833, -0.306719}, {
    6.68319, -0.313455}, {6.89011, -0.308744}, {9.7373, 0.248136}, {9.95195, 
    0.254707}, {0.03067, 0.000117572}, {2.87561, 0.482119}, {3.08815, 
    0.486339}, {6.56194, -0.310548}, {6.75853, -0.313139}, {9.81466, 
    0.251806}, {0.128813, 0.00207124}, {2.98219, 0.48578}, {3.19278, 
    0.483816}, {6.65894, -0.313212}, {6.86379, -0.310009}, {9.92449, 
    0.254497}, {0.0797416, 0.000794418}, {2.9289, 0.484333}, {3.14046, 
    0.485461}, {6.61044, -0.312218}, {6.81116, -0.311963}, {9.86958, 
    0.253522}, {3.03547, 0.48645}, {6.70745, -0.31353}, {9.97941, 0.254732}, {
    0.0184021, 0.0000423283}, {3.07507, 0.486438}, {6.74537, -0.313311}, {
    2.96886, 0.485491}, {6.64682, -0.313027}, {9.91076, 0.254322}, {0.0674737,
     0.000568871}, {3.12739, 0.485753}, {6.59831, -0.311864}, {
    6.798, -0.31233}, {9.85585, 0.253162}, {3.02215, 0.486356}, {
    6.69532, -0.313514}, {9.96568, 0.254742}, {0.0429379, 0.000230422}, {
    3.10123, 0.486191}, {6.77169, -0.312919}, {2.99551, 0.486021}, {
    6.67107, -0.313355}, {9.93822, 0.254625}, {3.04879, 0.486495}, {
    6.71957, -0.313505}, {9.99314, 0.254676}, {0.00306718, 1.17595 10^(-6)}, {
    0.199612, 0.00496408}, {0.412188, 0.0209383}, {0.610823, 0.0452048}, {
    0.805878, 0.0768747}, {2.24374, 0.403512}, {2.43822, 0.436988}, {2.64874, 
    0.464434}, {2.84564, 0.480541}, {3.05872, 0.486496}, {3.26776, 
    0.480112}, {3.46316, 0.463037}, {3.6746, 0.43276}, {3.87242, 0.394005}, {
    5.71987, -0.178848}, {5.92926, -0.228413}, {6.12502, -0.265358}, {
    6.33681, -0.293954}, {6.53465, -0.309311}, {6.72892, -0.313456}, {
    6.93923, -0.305873}, {7.1359, -0.287947}, {7.34862, -0.257781}, {8.98317, 
    0.141238}, {9.18137, 0.180673}, {9.37599, 0.212093}, {9.58665, 
    0.236824}, {9.78378, 0.250516}, {0.10121, 0.00127935}, {0.30601, 
    0.0116142}, {0.511536, 0.0320012}, {2.34085, 0.421114}, {2.54359, 
    0.451965}, {2.74706, 0.473699}, {2.95221, 0.485062}, {3.16335, 
    0.484836}, {3.36533, 0.472921}, {3.56899, 0.44938}, {
    6.02701, -0.248068}, {6.23102, -0.281205}, {6.43576, -0.303032}, {
    6.63166, -0.312736}, {6.83419, -0.311203}, {7.03744, -0.298184}, {
    7.24237, -0.274169}, {9.27855, 0.197335}, {9.48143, 0.225736}, {9.68503, 
    0.24483}, {9.8936, 0.254039}, {0.0521388, 0.00033973}, {0.252811, 
    0.0079467}, {2.6979, 0.469364}, {2.89892, 0.483182}, {3.11104, 
    0.486049}, {3.31654, 0.476851}, {6.38628, -0.29884}, {
    6.58316, -0.311362}, {6.78155, -0.312721}, {6.98833, -0.302349}, {9.63584,
     0.241117}, {9.83869, 0.252648}, {0.150282, 0.00281777}, {2.79622, 
    0.477425}, {3.0055, 0.48617}, {3.21566, 0.482853}, {6.48524, -0.306524}, {
    6.68016, -0.313434}, {6.88682, -0.308912}, {9.73422, 0.24796}, {9.94852, 
    0.25469}, {0.027603, 0.0000952345}, {2.87228, 0.481956}, {3.08488, 
    0.486368}, {6.55891, -0.310421}, {6.75524, -0.313187}, {9.81123, 
    0.251674}, {0.125746, 0.00197391}, {2.97885, 0.485713}, {3.18951, 
    0.483941}, {6.65591, -0.31317}, {6.8605, -0.310154}, {9.92106, 
    0.254457}, {0.0766746, 0.000734514}, {2.92557, 0.484217}, {3.13719, 
    0.485539}, {6.60741, -0.312134}, {6.80787, -0.312059}, {9.86615, 
    0.253436}, {3.03214, 0.486431}, {6.70441, -0.31353}, {9.97597, 
    0.254739}, {0.0153351, 0.000029395}, {3.0718, 0.486456}, {
    6.74208, -0.313346}, {2.96553, 0.485411}, {6.64379, -0.312974}, {9.90733, 
    0.254271}, {0.0644067, 0.000518348}, {3.12412, 0.485818}, {
    6.59528, -0.311769}, {6.79471, -0.312414}, {9.85242, 0.253065}, {3.01882, 
    0.486325}, {6.69229, -0.313503}, {9.96225, 0.254738}, {0.0398709, 
    0.000198685}, {3.09796, 0.486232}, {6.7684, -0.312978}, {2.99218, 
    0.485966}, {6.66804, -0.313323}, {9.93479, 0.254597}, {3.04546, 
    0.486488}, {6.71654, -0.313515}, {9.9897, 0.254694}, {0.00920113, 
    0.0000105825}, {3.06526, 0.486482}, {6.7355, -0.313407}, {3.01216, 
    0.486253}, {6.68623, -0.313474}, {9.95538, 0.25472}, {0.0337369, 
    0.000142259}, {3.09142, 0.486306}, {6.66197, -0.313251}, {9.92792, 
    0.254533}, {3.0388, 0.486466}, {6.71048, -0.313528}, {9.98284, 
    0.254722}, {0.021469, 0.0000576127}, {3.07834, 0.486418}, {3.02548, 
    0.486384}, {6.69835, -0.313522}, {9.96911, 0.254744}, {
    6.6741, -0.313384}, {9.94165, 0.25465}, {3.05212, 0.486498}, {
    6.7226, -0.313492}, {9.99657, 0.254654}, {2.04082 10^(-7), 0.}, {0.196287,
     0.000157175}, {0.409084, 0.00141139}, {0.607779, 0.00457031}, {0.802576, 
    0.0103434}, {1.01388, 0.0203536}, {1.21109, 0.0337368}, {1.42481, 
    0.0529914}, {1.63463, 0.0767767}, {1.83035, 0.103139}, {2.04257, 
    0.135803}, {2.2407, 0.169444}, {2.43493, 0.204539}, {2.64567, 0.243859}, {
    2.84231, 0.280522}, {3.05546, 0.318784}, {3.26471, 0.353342}, {3.45986, 
    0.381557}, {3.67151, 0.406409}, {3.86907, 0.42307}, {4.08314, 0.432927}, {
    4.29331, 0.433484}, {4.48938, 0.425385}, {4.70196, 0.407013}, {4.90044, 
    0.380988}, {5.09502, 0.347571}, {5.30611, 0.30325}, {5.5031, 0.255321}, {
    5.7166, 0.197621}, {5.9262, 0.136814}, {6.1217, 0.0780239}, {6.33371, 
    0.0139011}, {6.53162, -0.0445152}, {6.72563, -0.098782}, {
    6.93616, -0.152559}, {7.13258, -0.196443}, {7.34551, -0.2357}, {
    7.54434, -0.263463}, {7.73927, -0.281604}, {7.95071, -0.290639}, {
    8.14805, -0.288964}, {8.3619, -0.276387}, {8.57186, -0.2538}, {
    8.76771, -0.224483}, {8.98007, -0.184996}, {9.17833, -0.142338}, {
    9.3727, -0.0966097}, {9.58357, -0.0444552}, {9.78034, 0.00481369}, {10., 
    0.0583793}, {0.0981434, 0.0000196825}, {0.302685, 0.000574439}, {0.508431,
     0.00269418}, {0.705178, 0.00708132}, {0.908231, 0.0148197}, {1.11249, 
    0.026533}, {1.31795, 0.0427349}, {1.52972, 0.0642859}, {3.36228, 
    0.368012}, {3.56568, 0.394813}, {3.77029, 0.415592}, {3.97611, 
    0.429123}, {4.18823, 0.434377}, {4.39135, 0.430492}, {4.59567, 
    0.417445}, {4.8012, 0.395051}, {4.99773, 0.365222}, {5.20057, 0.326398}, {
    7.03437, -0.175345}, {7.23904, -0.217235}, {7.44492, -0.250711}, {
    7.6418, -0.27369}, {7.84499, -0.287523}, {8.04938, -0.291015}, {
    8.25498, -0.284043}, {8.46688, -0.266306}, {8.66978, -0.240072}, {
    8.87389, -0.205647}, {9.89017, 0.0319199}, {0.0490718, 2.46144 10^(-6)}, {
    0.249486, 0.00032226}, {0.458757, 0.00198513}, {0.656478, 0.00573707}, {
    0.855404, 0.0124543}, {1.06319, 0.0233176}, {1.26452, 0.0380794}, {
    1.47726, 0.0584876}, {3.31349, 0.360808}, {3.51277, 0.388382}, {3.7209, 
    0.411206}, {3.92259, 0.426371}, {4.13568, 0.43394}, {4.34233, 0.432251}, {
    4.54253, 0.421727}, {4.75158, 0.401298}, {4.94908, 0.373346}, {5.14779, 
    0.33724}, {6.98526, -0.164153}, {7.18581, -0.20712}, {
    7.39522, -0.243482}, {7.59307, -0.268863}, {7.79213, -0.284913}, {
    8.00005, -0.291132}, {8.20152, -0.28685}, {8.41439, -0.271657}, {
    8.62082, -0.247177}, {8.8208, -0.215305}, {9.83526, 0.0184298}, {0.147215,
     0.0000663784}, {0.355884, 0.000931633}, {0.558105, 0.00355169}, {
    0.753877, 0.00861348}, {0.961058, 0.0174498}, {1.16179, 0.0300047}, {
    3.6186, 0.400829}, {3.81968, 0.419552}, {4.02962, 0.431313}, {4.24077, 
    0.434227}, {4.44036, 0.428204}, {4.64882, 0.412539}, {4.85082, 
    0.388279}, {7.29228, -0.226768}, {7.49463, -0.257375}, {
    7.69054, -0.27794}, {7.89785, -0.289432}, {8.09872, -0.290291}, {
    8.30844, -0.280551}, {8.51937, -0.260348}, {9.94509, 0.0452482}, {
    0.024536, 3.07719 10^(-7)}, {0.222886, 0.000229964}, {0.43392, 
    0.00168218}, {0.632129, 0.00513218}, {0.82899, 0.0113677}, {1.03854, 
    0.0218045}, {1.23781, 0.0358692}, {1.45104, 0.0557016}, {3.2891, 
    0.357107}, {3.48631, 0.385017}, {3.69621, 0.408858}, {3.89583, 
    0.424788}, {4.10941, 0.433505}, {4.31782, 0.432933}, {4.51595, 
    0.423634}, {4.72677, 0.404222}, {4.92476, 0.377228}, {5.12141, 
    0.342471}, {6.96071, -0.158405}, {7.15919, -0.20185}, {
    7.37036, -0.23966}, {7.5687, -0.266234}, {7.7657, -0.283345}, {
    7.97538, -0.290962}, {8.17478, -0.287994}, {8.38815, -0.274101}, {
    8.59634, -0.25055}, {8.79426, -0.219956}, {9.8078, 0.0116353}, {0.122679, 
    0.0000384294}, {0.329285, 0.000738802}, {0.533268, 0.00310358}, {0.729527,
     0.00782328}, {0.934644, 0.0161011}, {1.13714, 0.0282365}, {3.59214, 
    0.397874}, {3.79499, 0.417626}, {4.00287, 0.43029}, {4.2145, 0.434376}, {
    4.41586, 0.429414}, {4.62224, 0.41507}, {4.82601, 0.39173}, {
    7.26566, -0.222076}, {7.46978, -0.254115}, {7.66617, -0.275888}, {
    7.87142, -0.288565}, {8.07405, -0.290729}, {8.28171, -0.282382}, {
    8.49313, -0.263402}, {9.91763, 0.0386065}, {0.0736076, 8.30577 10^(-6)}, {
    0.276085, 0.000436334}, {0.483594, 0.00232191}, {0.680828, 0.00638635}, {
    3.94935, 0.427817}, {4.16196, 0.434231}, {4.36684, 0.431437}, {4.5691, 
    0.419664}, {7.61744, -0.271348}, {7.81856, -0.286305}, {
    8.02472, -0.29115}, {8.22825, -0.285533}, {0.171751, 0.000105355}, {
    0.382484, 0.00115511}, {4.05638, 0.432193}, {4.26704, 0.43393}, {4.46487, 
    0.426861}, {7.7149, -0.279845}, {7.92428, -0.290124}, {
    8.12339, -0.289703}, {8.33517, -0.278553}, {9.97254, 0.0518406}, {
    0.0122681, 3.84669 10^(-8)}, {0.209586, 0.000191274}, {0.421502, 
    0.00154287}, {0.619954, 0.00484595}, {0.815783, 0.0108478}, {1.02621, 
    0.0210713}, {1.22445, 0.0347933}, {1.43792, 0.054337}, {3.2769, 
    0.355232}, {3.47308, 0.383299}, {3.68386, 0.407646}, {3.88245, 
    0.423946}, {4.09628, 0.433234}, {4.30557, 0.433225}, {4.50267, 
    0.424529}, {4.71437, 0.405634}, {4.9126, 0.379123}, {5.10821, 0.345037}, {
    6.94843, -0.155494}, {7.14589, -0.199164}, {7.35794, -0.237697}, {
    7.55652, -0.264866}, {7.75249, -0.282497}, {7.96305, -0.29082}, {
    8.16142, -0.288501}, {8.37503, -0.275264}, {8.5841, -0.25219}, {
    8.78098, -0.222235}, {9.79407, 0.00822757}, {0.110411, 0.00002802}, {
    0.315985, 0.0006532}, {0.52085, 0.00289414}, {0.717353, 0.00744635}, {
    0.921437, 0.0154521}, {1.12481, 0.0273767}, {3.57891, 0.396357}, {3.78264,
     0.416623}, {3.98949, 0.429724}, {4.20136, 0.434394}, {4.4036, 0.42997}, {
    4.60896, 0.416277}, {4.8136, 0.393407}, {7.25235, -0.219674}, {
    7.45735, -0.252431}, {7.65399, -0.274807}, {7.85821, -0.288066}, {
    8.06172, -0.290891}, {8.26834, -0.283234}, {8.48, -0.264873}, {9.9039, 
    0.0352685}, {0.0613397, 4.80708 10^(-6)}, {0.262786, 0.000376434}, {
    0.471176, 0.00214918}, {0.668653, 0.00605608}, {3.93597, 0.427111}, {
    4.14882, 0.434104}, {4.35458, 0.431861}, {4.55581, 0.420715}, {
    7.60525, -0.270123}, {7.80535, -0.285631}, {8.01238, -0.29116}, {
    8.21488, -0.286213}, {0.159483, 0.0000843744}, {0.369184, 0.00103941}, {
    4.043, 0.431771}, {4.25391, 0.434097}, {4.45262, 0.427549}, {
    7.70272, -0.278911}, {7.91107, -0.2898}, {8.11105, -0.290016}, {
    8.32181, -0.279573}, {9.95881, 0.0485508}, {0.0368039, 1.03849 10^(-6)}, {
    0.236186, 0.000273531}, {4.12255, 0.433741}, {4.33008, 0.432609}, {
    7.77892, -0.284151}, {7.98771, -0.291066}, {8.18815, -0.287444}, {
    0.134947, 0.0000511393}, {0.342585, 0.000831522}, {4.01624, 0.430819}, {
    4.22763, 0.43432}, {7.88464, -0.289021}, {8.08638, -0.290529}, {0.0858755,
     0.0000131876}, {0.289385, 0.000502243}, {4.17509, 0.434322}, {
    8.03705, -0.291102}, {0.184019, 0.000129546}, {4.06976, 0.432579}, {
    4.28018, 0.433726}, {7.9375, -0.290403}, {8.13572, -0.289352}, {9.98627, 
    0.0551169}, {0.00613415, 4.80864 10^(-9)}, {0.202937, 0.000173669}, {
    0.415293, 0.00147617}, {0.613866, 0.00470682}, {0.80918, 0.0105937}, {
    1.02005, 0.0207105}, {1.21777, 0.0342626}, {1.43137, 0.0536618}, {3.2708, 
    0.354289}, {3.46647, 0.382431}, {3.67769, 0.40703}, {3.87576, 0.423512}, {
    4.08971, 0.433085}, {4.29944, 0.433359}, {4.49602, 0.424962}, {4.70816, 
    0.406328}, {4.90652, 0.38006}, {5.10162, 0.346308}, {6.9423, -0.154029}, {
    7.13923, -0.197807}, {7.35172, -0.236703}, {7.55043, -0.264169}, {
    7.74588, -0.282056}, {7.95688, -0.290734}, {8.15474, -0.288738}, {
    8.36847, -0.275831}, {8.57798, -0.252999}, {8.77435, -0.223363}, {9.78721,
     0.00652137}, {0.104277, 0.0000236066}, {0.309335, 0.000612981}, {0.51464,
     0.00279299}, {0.711265, 0.00726236}, {0.914834, 0.0151338}, {1.11865, 
    0.0269529}, {3.5723, 0.395588}, {3.77647, 0.416111}, {3.9828, 0.429428}, {
    4.19479, 0.43439}, {4.39747, 0.430235}, {4.60231, 0.416866}, {4.8074, 
    0.394233}, {7.2457, -0.218459}, {7.45114, -0.251576}, {
    7.6479, -0.274253}, {7.8516, -0.2878}, {8.05555, -0.290958}, {
    8.26166, -0.283644}, {8.47344, -0.265594}, {9.89704, 0.0335955}, {
    0.0552058, 3.50452 10^(-6)}, {0.256136, 0.000348649}, {0.464967, 
    0.00206608}, {0.662566, 0.00589518}, {3.92928, 0.426745}, {4.14225, 
    0.434027}, {4.34846, 0.43206}, {4.54917, 0.421226}, {
    7.59916, -0.269497}, {7.79874, -0.285277}, {8.00621, -0.291151}, {
    8.2082, -0.286537}, {0.153349, 0.0000750175}, {0.362534, 0.000984545}, {
    4.03631, 0.431547}, {4.24734, 0.434167}, {4.44649, 0.42788}, {
    7.69663, -0.27843}, {7.90446, -0.289622}, {8.10489, -0.290158}, {
    8.31512, -0.280067}, {9.95195, 0.046901}, {0.03067, 6.00997 10^(-7)}, {
    0.229536, 0.00025112}, {4.11598, 0.433628}, {4.32395, 0.432775}, {
    7.77231, -0.283754}, {7.98155, -0.291019}, {8.18147, -0.287725}, {
    0.128813, 0.0000444825}, {0.335935, 0.000784256}, {4.00956, 0.430559}, {
    4.22107, 0.434352}, {7.87803, -0.288799}, {8.08022, -0.290634}, {
    0.0797416, 0.0000105594}, {0.282735, 0.00046852}, {4.16852, 0.434281}, {
    8.03088, -0.291131}, {0.177885, 0.000117035}, {4.06307, 0.43239}, {
    4.27361, 0.433833}, {7.93089, -0.290269}, {8.12955, -0.289532}, {9.97941, 
    0.0534804}, {0.0184021, 1.29822 10^(-7)}, {4.10284, 0.433374}, {
    7.96921, -0.290896}, {0.116545, 0.0000329514}, {4.20793, 0.43439}, {
    8.06788, -0.290815}, {0.0674737, 6.39791 10^(-6)}, {4.15539, 0.434172}, {
    8.01855, -0.29116}, {0.165617, 0.0000944774}, {4.26047, 0.434019}, {
    7.91767, -0.289967}, {0.0429379, 1.64903 10^(-6)}, {4.12912, 0.433845}, {
    7.99388, -0.291104}, {0.141081, 0.0000584285}, {4.2342, 0.434278}, {
    0.0920095, 0.0000162191}, {4.18166, 0.434354}, {8.04322, -0.291063}, {
    7.94411, -0.290527}, {9.99314, 0.0567499}, {
    0.00306718, 6.0114 10^(-10)}, {0.199612, 0.000165285}, {0.412188, 
    0.00144354}, {0.610823, 0.00463824}, {0.805878, 0.0104681}, {1.01697, 
    0.0205316}, {1.21443, 0.0339991}, {1.42809, 0.053326}, {3.26776, 
    0.353816}, {3.46316, 0.381995}, {3.6746, 0.40672}, {3.87242, 0.423292}, {
    4.08643, 0.433007}, {4.29638, 0.433423}, {4.4927, 0.425174}, {4.70506, 
    0.406672}, {4.90348, 0.380525}, {5.09832, 0.346941}, {
    6.93923, -0.153295}, {7.1359, -0.197126}, {7.34862, -0.236203}, {
    7.54738, -0.263817}, {7.74257, -0.281831}, {7.9538, -0.290688}, {
    8.1514, -0.288852}, {8.36519, -0.27611}, {8.57492, -0.253401}, {
    8.77103, -0.223924}, {9.78378, 0.00566771}, {0.10121, 0.0000215852}, {
    0.30601, 0.000593502}, {0.511536, 0.0027433}, {0.708221, 0.00717147}, {
    0.911532, 0.0149763}, {1.11557, 0.0267425}, {3.56899, 0.395201}, {3.77338,
     0.415852}, {3.97945, 0.429277}, {4.19151, 0.434384}, {4.39441, 
    0.430364}, {4.59899, 0.417157}, {4.8043, 0.394643}, {
    7.24237, -0.217848}, {7.44803, -0.251145}, {7.64485, -0.273973}, {
    7.8483, -0.287663}, {8.05247, -0.290988}, {8.25832, -0.283845}, {
    8.47016, -0.265951}, {9.8936, 0.032758}, {0.0521388, 2.95235 10^(-6)}, {
    0.252811, 0.000335282}, {0.461862, 0.00202534}, {0.659522, 0.00581578}, {
    3.92593, 0.426559}, {4.13897, 0.433985}, {4.34539, 0.432157}, {4.54585, 
    0.421478}, {7.59612, -0.269181}, {7.79543, -0.285096}, {
    8.00313, -0.291143}, {8.20486, -0.286695}, {0.150282, 0.00007061}, {
    0.359209, 0.000957847}, {4.03297, 0.431431}, {4.24405, 0.434198}, {
    4.44343, 0.428043}, {7.69358, -0.278186}, {7.90116, -0.289528}, {
    8.1018, -0.290226}, {8.31178, -0.280311}, {9.94852, 0.046075}, {
    0.027603, 4.38133 10^(-7)}, {0.226211, 0.000240387}, {4.1127, 0.433568}, {
    4.32088, 0.432855}, {7.769, -0.283551}, {7.97846, -0.290992}, {
    8.17813, -0.287861}, {0.125746, 0.0000413822}, {0.33261, 0.000761305}, {
    4.00621, 0.430425}, {4.21778, 0.434365}, {7.87473, -0.288683}, {
    8.07713, -0.290683}, {0.0766746, 9.38758 10^(-6)}, {0.27941, 
    0.000452237}, {4.16524, 0.434257}, {8.0278, -0.291142}, {0.174818, 
    0.000111093}, {4.05973, 0.432293}, {4.27032, 0.433883}, {
    7.92759, -0.290198}, {8.12647, -0.289619}, {9.97597, 0.0526609}, {
    0.0153351, 7.51295 10^(-8)}, {4.09956, 0.433305}, {7.96613, -0.290859}, {
    0.113478, 0.0000304192}, {4.20465, 0.434393}, {8.0648, -0.290854}, {
    0.0644067, 5.56466 10^(-6)}, {4.1521, 0.434139}, {8.01547, -0.291161}, {
    0.16255, 0.0000893308}, {4.25719, 0.434059}, {7.91437, -0.289885}, {
    0.0398709, 1.32033 10^(-6)}, {4.12583, 0.433794}, {7.9908, -0.291086}, {
    0.138014, 0.0000547031}, {4.23092, 0.4343}, {0.0889425, 0.0000146512}, {
    4.17837, 0.434339}, {8.04013, -0.291084}, {7.9408, -0.290466}, {9.9897, 
    0.0559338}, {0.00920113, 1.62286 10^(-8)}, {7.95996, -0.290778}, {4.19808,
     0.434393}, {8.05863, -0.290926}, {0.0582727, 4.12157 10^(-6)}, {4.14554, 
    0.434066}, {8.0093, -0.291157}, {4.25062, 0.434133}, {
    0.0337369, 7.99916 10^(-7)}, {7.98463, -0.291044}, {4.22435, 0.434337}, {
    0.0828085, 0.0000118249}, {4.17181, 0.434303}, {8.03397, -0.291117}, {
    0.021469, 2.0615 10^(-7)}, {4.21121, 0.434384}, {
    0.0705406, 7.31041 10^(-6)}, {8.02163, -0.291156}, {
    0.0460048, 2.0282 10^(-6)}, {7.99696, -0.291119}, {4.23749, 0.434254}, {
    4.18494, 0.434366}, {8.0463, -0.291041}, {9.99657, 0.0575651}, {
    2.04082 10^(-7), 0.}, {0.196287, 3.85829 10^(-6)}, {0.409084, 
    0.0000723237}, {0.607779, 0.000348833}, {0.802576, 0.00104614}, {1.01388, 
    0.00261339}, {1.21109, 0.0052039}, {1.42481, 0.00968794}, {1.63463, 
    0.0162427}, {1.83035, 0.0246606}, {2.04257, 0.0366558}, {2.2407, 
    0.0507906}, {2.43493, 0.0675299}, {2.64567, 0.0889326}, {2.84231, 
    0.111819}, {3.05546, 0.139499}, {3.26471, 0.169092}, {3.45986, 
    0.198273}, {3.67151, 0.230867}, {3.86907, 0.261341}, {4.08314, 0.29338}, {
    4.29331, 0.322724}, {4.48938, 0.347196}, {4.70196, 0.369475}, {4.90044, 
    0.385336}, {5.09502, 0.395464}, {5.30611, 0.399641}, {5.5031, 0.396615}, {
    5.7166, 0.385416}, {5.9262, 0.36628}, {6.1217, 0.341287}, {6.33371, 
    0.306794}, {6.53162, 0.268268}, {6.72563, 0.225352}, {6.93616, 
    0.174104}, {7.13258, 0.123083}, {7.34551, 0.06577}, {7.54434, 
    0.0118407}, {7.73927, -0.0399953}, {7.95071, -0.0934759}, {
    8.14805, -0.139379}, {8.3619, -0.183258}, {8.57186, -0.219074}, {
    8.76771, -0.24501}, {8.98007, -0.264173}, {9.17833, -0.27317}, {
    9.3727, -0.273473}, {9.58357, -0.264369}, {9.78034, -0.247405}, {
    10., -0.219603}, {0.0981434, 2.41493 10^(-7)}, {0.302685, 0.0000217592}, {
    0.508431, 0.000171782}, {0.705178, 0.00062812}, {0.908231, 0.00170012}, {
    1.11249, 0.00374831}, {1.31795, 0.00719894}, {1.52972, 0.0126705}, {
    1.73249, 0.0201526}, {1.93646, 0.030266}, {2.14164, 0.0433575}, {2.33781, 
    0.0587999}, {4.59567, 0.358956}, {4.8012, 0.378056}, {4.99773, 
    0.391114}, {5.20057, 0.39848}, {5.40461, 0.398989}, {5.60985, 0.39206}, {
    5.8214, 0.376853}, {6.02395, 0.354629}, {6.22771, 0.324965}, {6.43267, 
    0.288248}, {8.25498, -0.16217}, {8.46688, -0.202142}, {
    8.66978, -0.232994}, {8.87389, -0.255797}, {9.0792, -0.269764}, {
    9.27552, -0.274376}, {9.47813, -0.270129}, {9.68196, -0.256875}, {
    9.89017, -0.234609}, {0.0490718, 1.50989 10^(-8)}, {0.249486, 
    0.0000100577}, {0.458757, 0.000114137}, {0.656478, 0.000473342}, {
    0.855404, 0.00134405}, {1.06319, 0.00314372}, {1.26452, 0.00614349}, {
    1.47726, 0.0111089}, {1.68356, 0.0181253}, {1.8834, 0.0273676}, {2.09211, 
    0.0399163}, {2.28926, 0.0547053}, {4.54253, 0.353223}, {4.75158, 
    0.373922}, {4.94908, 0.388399}, {5.14779, 0.397199}, {5.35536, 
    0.399528}, {5.55647, 0.394597}, {5.769, 0.381387}, {5.97508, 0.360668}, {
    6.17471, 0.333363}, {6.38319, 0.297706}, {8.20152, -0.150976}, {
    8.41439, -0.192935}, {8.62082, -0.226267}, {8.8208, -0.250701}, {
    9.02964, -0.26724}, {9.22692, -0.274038}, {9.42542, -0.272106}, {
    9.63276, -0.260873}, {9.83526, -0.241293}, {0.147215, 1.22182 10^(-6)}, {
    0.355884, 0.00004151}, {0.558105, 0.000248748}, {0.753877, 0.000817524}, {
    0.961058, 0.00212096}, {1.16179, 0.00443304}, {1.37138, 0.00837789}, {
    1.58217, 0.0143796}, {1.78142, 0.0223295}, {4.64882, 0.364379}, {4.85082, 
    0.381865}, {5.04637, 0.393473}, {5.25334, 0.399297}, {5.45385, 0.39802}, {
    5.66322, 0.389}, {5.8738, 0.371817}, {8.51937, -0.21086}, {
    8.71875, -0.239246}, {8.92698, -0.260291}, {9.12877, -0.271741}, {
    9.32411, -0.274187}, {9.53085, -0.267547}, {9.73115, -0.252382}, {
    9.94509, -0.227373}, {0.024536, 9.43781 10^(-10)}, {
    0.222886, 6.41096 10^(-6)}, {0.43392, 0.0000914571}, {0.632129, 
    0.000407567}, {0.82899, 0.00118823}, {1.03854, 0.00286964}, {1.23781, 
    0.00565969}, {1.45104, 0.0103813}, {1.65909, 0.0171662}, {1.85687, 
    0.0259905}, {2.06734, 0.0382636}, {2.26498, 0.0527255}, {4.51595, 
    0.350245}, {4.72677, 0.371737}, {4.92476, 0.38691}, {5.12141, 0.396387}, {
    5.33073, 0.399637}, {5.52979, 0.395671}, {5.7428, 0.383464}, {5.95064, 
    0.363528}, {6.1482, 0.337385}, {6.35845, 0.302297}, {
    8.17478, -0.145227}, {8.38815, -0.188154}, {8.59634, -0.222728}, {
    8.79426, -0.247929}, {9.00486, -0.265774}, {9.20263, -0.27367}, {
    9.39906, -0.272866}, {9.60817, -0.262685}, {9.8078, -0.244422}, {
    0.122679, 5.89421 10^(-7)}, {0.329285, 0.0000304509}, {0.533268, 
    0.00020762}, {0.729527, 0.000718212}, {0.934644, 0.00190202}, {1.13714, 
    0.00408028}, {1.34466, 0.0077725}, {1.55595, 0.0135062}, {1.75695, 
    0.0212221}, {4.62224, 0.361707}, {4.82601, 0.380002}, {5.02205, 
    0.392339}, {5.22695, 0.398947}, {5.42923, 0.398559}, {5.63654, 
    0.390595}, {5.8476, 0.374398}, {8.49313, -0.206563}, {
    8.69427, -0.23618}, {8.90044, -0.25812}, {9.10399, -0.270821}, {
    9.29981, -0.274348}, {9.50449, -0.268913}, {9.70655, -0.254689}, {
    9.91763, -0.231059}, {0.0736076, 7.64261 10^(-8)}, {0.276085, 
    0.0000150726}, {0.483594, 0.00014077}, {0.680828, 0.00054668}, {0.881817, 
    0.00151441}, {1.08784, 0.00343636}, {4.97341, 0.3898}, {5.17418, 
    0.397896}, {5.37998, 0.399312}, {5.58316, 0.393394}, {
    8.84735, -0.253324}, {9.05442, -0.26857}, {9.25122, -0.274273}, {
    9.45177, -0.271193}, {0.171751, 2.26268 10^(-6)}, {0.382484, 
    0.0000553277}, {0.582942, 0.000295652}, {0.778227, 0.000926635}, {5.0707, 
    0.394515}, {5.27972, 0.399528}, {5.47848, 0.397372}, {
    9.15355, -0.272524}, {9.3484, -0.273896}, {9.55721, -0.266032}, {
    9.97254, -0.223553}, {0.0122681, 5.89896 10^(-11)}, {
    0.209586, 5.0138 10^(-6)}, {0.421502, 0.0000814717}, {0.619954, 
    0.000377352}, {0.815783, 0.00111552}, {1.02621, 0.00273933}, {1.22445, 
    0.00542835}, {1.43792, 0.0100304}, {1.64686, 0.0167001}, {1.84361, 
    0.0253197}, {2.05496, 0.0374541}, {2.25284, 0.0517524}, {4.50267, 
    0.348729}, {4.71437, 0.370615}, {4.9126, 0.386133}, {5.10821, 0.39594}, {
    5.31842, 0.399652}, {5.51644, 0.396159}, {5.7297, 0.384456}, {5.93842, 
    0.364917}, {6.13495, 0.339351}, {6.34608, 0.304557}, {
    8.16142, -0.142315}, {8.37503, -0.185721}, {8.5841, -0.220915}, {
    8.78098, -0.246488}, {8.99246, -0.26499}, {9.19048, -0.273437}, {
    9.38588, -0.273189}, {9.59587, -0.263543}, {9.79407, -0.245932}, {
    0.110411, 3.86775 10^(-7)}, {0.315985, 0.0000258324}, {0.52085, 
    0.000189069}, {0.717353, 0.000672049}, {0.921437, 0.00179899}, {1.12481, 
    0.00391174}, {1.33131, 0.0074818}, {1.54283, 0.0130837}, {1.74472, 
    0.0206827}, {4.60896, 0.360341}, {4.8136, 0.37904}, {5.00989, 0.391738}, {
    5.21376, 0.398728}, {5.41692, 0.398787}, {5.62319, 0.391344}, {5.8345, 
    0.375641}, {8.48, -0.204368}, {8.68203, -0.234602}, {
    8.88716, -0.256977}, {9.09159, -0.270309}, {9.28766, -0.274379}, {
    9.49131, -0.26954}, {9.69426, -0.255797}, {9.9039, -0.232851}, {
    0.0613397, 3.68599 10^(-8)}, {0.262786, 0.0000123759}, {0.471176, 
    0.000126933}, {0.668653, 0.000509032}, {0.86861, 0.00142736}, {1.07551, 
    0.00328768}, {4.96125, 0.38911}, {5.16099, 0.397562}, {5.36767, 
    0.399433}, {5.56982, 0.394012}, {8.83407, -0.252031}, {
    9.04203, -0.267922}, {9.23907, -0.274172}, {9.4386, -0.271669}, {
    0.159483, 1.68257 10^(-6)}, {0.369184, 0.0000480485}, {0.570523, 
    0.000271447}, {0.766052, 0.000870818}, {5.05854, 0.394005}, {5.26653, 
    0.399427}, {5.46616, 0.39771}, {9.14116, -0.27215}, {
    9.33625, -0.274058}, {9.54403, -0.266808}, {9.95881, -0.225479}, {
    0.0368039, 4.77766 10^(-9)}, {0.236186, 8.08117 10^(-6)}, {0.446339, 
    0.000102329}, {5.1346, 0.396807}, {5.34305, 0.399595}, {
    9.21478, -0.27387}, {9.41224, -0.272505}, {0.134947, 8.62835 10^(-7)}, {
    0.342585, 0.0000356607}, {0.545687, 0.000227493}, {5.24014, 0.399136}, {
    5.44154, 0.398303}, {9.11638, -0.271298}, {9.31196, -0.274284}, {
    0.0858755, 1.41575 10^(-7)}, {0.289385, 0.0000181868}, {5.18737, 
    0.398202}, {5.39229, 0.399164}, {9.26337, -0.274341}, {
    0.184019, 2.98113 10^(-6)}, {0.395784, 0.0000634011}, {5.29292, 
    0.399599}, {9.16594, -0.272865}, {9.36055, -0.273701}, {
    9.98627, -0.221594}, {0.00613415, 3.68712 10^(-12)}, {
    0.202937, 4.40773 10^(-6)}, {0.415293, 0.000076796}, {0.613866, 
    0.000362884}, {0.80918, 0.00108042}, {1.02005, 0.00267582}, {1.21777, 
    0.00531527}, {1.43137, 0.00985811}, {1.64074, 0.0164703}, {1.83698, 
    0.0249887}, {2.04877, 0.0370536}, {2.24677, 0.0512701}, {4.49602, 
    0.347965}, {4.70816, 0.370047}, {4.90652, 0.385737}, {5.10162, 
    0.395705}, {5.31227, 0.39965}, {5.50977, 0.396392}, {5.72315, 0.38494}, {
    5.93231, 0.365602}, {6.12833, 0.340323}, {6.3399, 0.305679}, {
    8.15474, -0.14085}, {8.36847, -0.184493}, {8.57798, -0.219998}, {
    8.77435, -0.245754}, {8.98627, -0.264586}, {9.18441, -0.273308}, {
    9.37929, -0.273336}, {9.58972, -0.26396}, {9.78721, -0.246673}, {
    0.104277, 3.07746 10^(-7)}, {0.309335, 0.0000237305}, {0.51464, 
    0.000180271}, {0.711265, 0.000649809}, {0.914834, 0.00174904}, {1.11865, 
    0.00382939}, {1.32463, 0.00733939}, {1.53627, 0.0128759}, {1.7386, 
    0.0204165}, {4.60231, 0.359651}, {4.8074, 0.378551}, {5.00381, 
    0.391429}, {5.20716, 0.398607}, {5.41076, 0.398892}, {5.61652, 
    0.391706}, {5.82795, 0.376251}, {8.47344, -0.203259}, {
    8.6759, -0.233802}, {8.88053, -0.256392}, {9.0854, -0.270041}, {
    9.28159, -0.274382}, {9.48472, -0.269839}, {9.68811, -0.25634}, {
    9.89704, -0.233735}, {0.0552058, 2.41847 10^(-8)}, {0.256136, 
    0.0000111718}, {0.464967, 0.000120408}, {0.662566, 0.000490947}, {
    0.862007, 0.00138524}, {1.06935, 0.00321511}, {4.95516, 0.388757}, {
    5.15439, 0.397384}, {5.36151, 0.399484}, {5.56315, 0.394309}, {
    8.82744, -0.25137}, {9.03583, -0.267585}, {9.233, -0.274109}, {
    9.43201, -0.271892}, {0.153349, 1.43841 10^(-6)}, {0.362534, 
    0.0000446899}, {0.564314, 0.000259913}, {0.759965, 0.00084386}, {5.05246, 
    0.393742}, {5.25993, 0.399366}, {5.46001, 0.397868}, {
    9.13496, -0.27195}, {9.33018, -0.274127}, {9.53744, -0.267182}, {
    9.95195, -0.22643}, {0.03067, 2.3041 10^(-9)}, {
    0.229536, 7.20989 10^(-6)}, {0.44013, 0.0000967791}, {5.128, 0.396601}, {
    5.33689, 0.399619}, {9.2087, -0.273774}, {9.40565, -0.27269}, {
    0.128813, 7.1639 10^(-7)}, {0.335935, 0.0000329789}, {0.539477, 
    0.000217387}, {5.23355, 0.399045}, {5.43538, 0.398434}, {
    9.11018, -0.271064}, {9.30588, -0.27432}, {0.0797416, 1.05261 10^(-7)}, {
    0.282735, 0.000016575}, {5.18078, 0.398053}, {5.38614, 0.399241}, {
    9.25729, -0.274311}, {0.177885, 2.60337 10^(-6)}, {0.389134, 
    0.0000592618}, {5.28632, 0.399568}, {9.15975, -0.272699}, {
    9.35448, -0.273802}, {9.97941, -0.222578}, {
    0.0184021, 2.98625 10^(-10)}, {0.216236, 5.68026 10^(-6)}, {5.32458, 
    0.399648}, {9.19656, -0.273557}, {0.116545, 4.80123 10^(-7)}, {0.322635, 
    0.0000280706}, {5.22035, 0.398841}, {9.29374, -0.274367}, {
    0.0674737, 5.39643 10^(-8)}, {0.269436, 0.0000136745}, {5.37383, 
    0.399376}, {9.24515, -0.274227}, {0.165617, 1.95655 10^(-6)}, {5.27313, 
    0.399482}, {9.34233, -0.273981}, {0.0429379, 8.85096 10^(-9)}, {5.3492, 
    0.399565}, {9.22085, -0.273958}, {0.141081, 1.03065 10^(-6)}, {5.24674, 
    0.39922}, {9.31803, -0.27424}, {0.0920095, 1.86558 10^(-7)}, {
    9.26944, -0.274363}, {0.190153, 3.39855 10^(-6)}, {5.29951, 0.399624}, {
    9.99314, -0.220602}, {0.00306718, 2.30476 10^(-13)}, {
    0.199612, 4.12616 10^(-6)}, {0.412188, 0.0000745348}, {0.610823, 
    0.000355807}, {0.805878, 0.00106318}, {1.01697, 0.00264447}, {1.21443, 
    0.00525937}, {1.42809, 0.00977277}, {1.63769, 0.0163563}, {1.83366, 
    0.0248243}, {2.04567, 0.0368543}, {2.24374, 0.05103}, {4.4927, 
    0.347581}, {4.70506, 0.369761}, {4.90348, 0.385537}, {5.09832, 
    0.395586}, {5.30919, 0.399646}, {5.50644, 0.396504}, {5.71987, 
    0.385179}, {5.92926, 0.365942}, {6.12502, 0.340806}, {6.33681, 
    0.306237}, {8.1514, -0.140115}, {8.36519, -0.183877}, {
    8.57492, -0.219537}, {8.77103, -0.245383}, {8.98317, -0.26438}, {
    9.18137, -0.27324}, {9.37599, -0.273405}, {9.58665, -0.264166}, {
    9.78378, -0.247041}, {0.10121, 2.73116 10^(-7)}, {0.30601, 
    0.0000227288}, {0.511536, 0.000175989}, {0.708221, 0.000638896}, {
    0.911532, 0.00172445}, {1.11557, 0.00378869}, {1.32129, 0.00726892}, {
    1.533, 0.0127729}, {1.73554, 0.0202843}, {4.59899, 0.359304}, {4.8043, 
    0.378304}, {5.00077, 0.391272}, {5.20386, 0.398544}, {5.40768, 
    0.398941}, {5.61319, 0.391884}, {5.82468, 0.376553}, {
    8.47016, -0.202701}, {8.67284, -0.233399}, {8.87721, -0.256096}, {
    9.0823, -0.269903}, {9.27855, -0.27438}, {9.48143, -0.269985}, {
    9.68503, -0.256608}, {9.8936, -0.234173}, {0.0521388, 1.92421 10^(-8)}, {
    0.252811, 0.0000106038}, {0.461862, 0.000117242}, {0.659522, 
    0.000482085}, {0.858705, 0.00136453}, {1.06627, 0.00317927}, {4.95212, 
    0.388579}, {5.15109, 0.397292}, {5.35844, 0.399506}, {5.55981, 
    0.394454}, {8.82412, -0.251037}, {9.03274, -0.267413}, {
    9.22996, -0.274074}, {9.42871, -0.272}, {0.150282, 1.3268 10^(-6)}, {
    0.359209, 0.000043078}, {0.56121, 0.000254285}, {0.756921, 0.000830615}, {
    5.04941, 0.393608}, {5.25664, 0.399332}, {5.45693, 0.397945}, {
    9.13187, -0.271847}, {9.32714, -0.274158}, {9.53415, -0.267366}, {
    9.94852, -0.226902}, {0.027603, 1.51174 10^(-9)}, {
    0.226211, 6.80164 10^(-6)}, {0.437025, 0.00009409}, {5.1247, 0.396495}, {
    5.33381, 0.399629}, {9.20567, -0.273723}, {9.40235, -0.272779}, {
    0.125746, 6.50586 10^(-7)}, {0.33261, 0.000031696}, {0.536373, 
    0.000212462}, {5.23025, 0.398997}, {5.43231, 0.398497}, {
    9.10708, -0.270943}, {9.30285, -0.274335}, {0.0766746, 8.99802 10^(-8)}, {
    0.27941, 0.0000158104}, {5.17748, 0.397976}, {5.38306, 0.399277}, {
    9.25426, -0.274293}, {0.174818, 2.42855 10^(-6)}, {0.385809, 
    0.0000572695}, {5.28302, 0.399549}, {9.15665, -0.272613}, {
    9.35144, -0.27385}, {9.97597, -0.223066}, {0.0153351, 1.44015 10^(-10)}, {
    0.212911, 5.33924 10^(-6)}, {5.3215, 0.399651}, {9.19352, -0.273498}, {
    0.113478, 4.31559 10^(-7)}, {0.31931, 0.0000269341}, {5.21706, 
    0.398785}, {9.2907, -0.274374}, {0.0644067, 4.48025 10^(-8)}, {0.266111, 
    0.0000130131}, {5.37075, 0.399405}, {9.24211, -0.2742}, {
    0.16255, 1.81569 10^(-6)}, {5.26983, 0.399455}, {9.33929, -0.27402}, {
    0.0398709, 6.58048 10^(-9)}, {5.34612, 0.399581}, {9.21781, -0.273915}, {
    0.138014, 9.4395 10^(-7)}, {5.24344, 0.399179}, {9.315, -0.274263}, {
    0.0889425, 1.62905 10^(-7)}, {9.2664, -0.274353}, {
    0.187086, 3.18472 10^(-6)}, {5.29622, 0.399613}, {9.9897, -0.221099}, {
    0.00920113, 1.86652 10^(-11)}, {5.31534, 0.399652}, {
    0.107344, 3.45569 10^(-7)}, {9.28463, -0.274381}, {
    0.0582727, 3.00232 10^(-8)}, {5.36459, 0.399459}, {9.23604, -0.274141}, {
    5.26323, 0.399397}, {0.0337369, 3.37339 10^(-9)}, {5.33997, 0.399608}, {
    0.13188, 7.87061 10^(-7)}, {9.30892, -0.274303}, {
    0.0828085, 1.22411 10^(-7)}, {9.26033, -0.274327}, {5.28962, 0.399584}, {
    0.021469, 5.53233 10^(-10)}, {5.32766, 0.399643}, {9.29677, -0.274359}, {
    0.0705406, 6.44641 10^(-8)}, {9.24818, -0.274251}, {
    0.0460048, 1.16637 10^(-8)}, {5.35228, 0.399547}, {
    0.0950764, 2.12698 10^(-7)}, {9.27248, -0.274371}, {5.30281, 0.399633}, {
    9.99657, -0.220104}, {7.58887, 0.}, {10., 0.}, {6.38081, 0.}, {9.76112, 
    0.}, {10., 0.}, {5.13642, 0.}, {8.41789, 0.}, {2.04082 10^(-7), 0.}, {10.,
     0.}, {3.83238, 0.}, {7.01631, 0.}, {2.04082 10^(-7), 0.}, {10., 0.}}, {{{{
       {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwV0jtIlXEYwOEvlwQ1hOx4KfOoaCAZCELQkJe8NDt693TZvIxqKtSSk4Km
lUIQBIJQmi2VXbRGdTIrh8pupqCDtZRm9HzDw/t73z8H5XCyY+01bXFBEBzg
CdvxQbBFij5ChMceS/igh2jgLKnhZ9xL+aiHaaSEZbdafuv7dJLGU7cyPukb
NFHKG7c6/ugHdJHOrFs5a3qEZtbtrSQwZy9jRdezq6foZsfeSYQFewbP9Dk+
61F29VWyaLH/MNtIZN5+0JczoE+G/4f9rdnAnj7sbUxP60Bf13lcsf40u0gl
w9tdc9E9UQ/rIrPIzDUnzTPmUe/PdQUn7F/syeZNe3E47Xv6GqfsUTPTvGee
NmPeN3Q7Bfak8O+bd8xX3uL1oC4kqifC78L9ndnIX53iPq4fhr8J3a/z6bH/
MrtJY8l+jBe6kq/6FhfYtHdwiNf2Ct7rJvb1DL1k8tKtim/6NhepZNWtmX/6
EX0cZ86tmu96jEtUkcW8+3nW9TiXqSZKNjnk8h/qEVqM
           "]]}]}}}, {{
       {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwt0slLVWEYB+BTadehMjWFwIQyWiSCcJ2H/ggth3LVrhKjQV3mpnl2IbgQ
BLFyaLKyTdPSoqzUJmuVtgvTZjfa80GLh9/vfc/5LvfeczbvPVjTsjKKohU8
+Z9zSVH0lUw9g3TWk0Y1TVzmEzscuM86vYo9XOJjuNd+lLV6O8P8odFugkp9
NxeZDuft7rFGb2OI3zTYvaZCf0yK3swXGs0X+ECl+S6p+jOy9HbmaTVvlSdY
ZtD8i3r9FeV6vjzPan/II3OPnq0nywPM0mBfYten58hcWSA75GI473rc3KWn
yffmbbLCfIcUc7l5QN8iC2Wh7AzfWz51vVffqG+Q+bJNfuOoa/0y1y5PHmeJ
AftumWH/U6/TX1Kmb5fnSHTtoTlJ388M9eZN8hh/w33md+H76SMk62Nkhv+P
OY6Yr/GDXeZxSvUHxPR9fKbOfJa3lJlv45WKDnOV7+y0e0FJ+CzO8IZSu1vE
9ENcYYFau+cUh7OcZio8D7ub4bnpReE+TjFJsf2N8Pv1BFYR3vc4NZxkIpxz
z3X+ATNqWbo=
           "]], PolygonBox[CompressedData["
1:eJwl0klL1GEABvB/40IFZQZCZRATmqOm1kQQ1AfIPf0GWbmWtt3ay4LqUlDQ
wTY3hDqWttzMJQ2srmXbKXPJDi0Xo34vHn48z/O+ozP/YeJ1bbWtsSiKljDG
3NIomiep73Lx0EWu3CZvslJ/6269fpo/XLKfk6438oUa+zA9/KDW2Su26lso
YQ9tdDNPjftxivWLPCPNbuAz1XYrXXwPf+9sjCK9naek2vV8osoeZbV+nDkO
2Z3hOam2X7JZf0O2forfXLDz5VVSPfMTO0U/wEcqwzPI6yx3P2Jn6seY5aC9
Ubbzl/v2LZnptbN6QlbZoxTaO+0Heo5MyqS8IVfI1+63y047W64Ln1melL84
736H3atvkAlZIq/IFDngvkPP0mMyX+6XH6hw1yfjzorlNZbpw87v6mv0VfIo
M7Q4j4fvhwXu2TNU6iMU6BOs1U/wk3N2nrxMzP/rD783fR+TlNtDZOhHmKY5
vD/TVNjD4XPrZ3kcLf5g63hPmdnEHb5R7myIhH6GR/xjr7N3lOqN3GaKMmcv
yNN30xC+L75S6nyQTXouOfwHCiFgfQ==
           "]]}]}}}, {{
       {Hue[0.906068, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwV0E0s1nEAB/CfstINIV2yttpEObDZpK1DdbC60BZCRXGpUJ1RobhTi/Jy
0SUHntLWOmhzMNGLO5X3zt56WS+f/+Gz7/f7+/2fZ//nOVjTUFK/I4QQR4zv
CSGsUeqwjHLmdoZwnUSm7Cc0cZF5ZzdI4r3dQzObdiuZLNgjVPDFvkky03Yv
LWzZbRxh0R6lkq92PXuZsZ+yKz6ELruAdfsu23o7WSzZMRI912ef4o9dxTe9
gRQ+2OmeGdLP8szebXfrx8nVx+WG80P6qF7KPfuHfEA2Oe7eymXnB/QXepEs
lifklDwvX7pPkv32GXla5ssJWSz/us+UY/Y5WSFPyhl5QV5yv6A3Rr/JTpVH
5Rv50d1+/Xn02ej99UnZ5zxBf6QXkqe/k5vOD+sxvYz79k/5MPpOVuwM98N6
Ca/sZHsgenf+2ZdZ1G+Rxie7nz2eexz9drbsVn7pHRxj1R7jCkv2bfbx2R6g
jd92Z/Tfsma/pppl+w7pzNqDtFPDVa5RSx3/AcsrX4U=
           "]]}]}}}, {{
       {Hue[0.906068, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwVzzsvQ2EAx+G3GERHFkWii8RURGKqmEgkXUoiEpNF3Re3T+BuZ2xdYjJJ
3GKRmCQWt2+A09oZ3J4zPPm9//ecJj3p8fn8XFUIIUGBqDaECvHlSE0I99Uh
9OmY5vRM2zWheb3VHh3Qfi1pg175/bDe2Vkd0kE90Vb98PzaOePcpTv8sel+
VE9p8+zLvnHudu7VPZLOR+5zzsek7Be7xXmFMrPxR8X/iSL13rl0V6HT3uaX
DfuTrPMudd47tJ9ptpeJmLEvKNNhb/HDun3AE032Eu9M2+dEZOLv4ps1e59H
UvYib0zZq5R4oNHdAq9M2gUm+Acj3zhn
           "]], PolygonBox[CompressedData["
1:eJwV00dsT3EAB/DXRY22JxzMtmhCJIQaEao1W6MUPUjs7aD2rHk1WmrFOCFG
0TpIiK1mIrHpsm6CluJiHHx+h8//+/2+95L/y/u/f+qcooKlsVEUxdDMxxDj
c2IUfaJQn8oUJlPAJIo5xCNS4qJoCfVMtDdykIckO7aYOvLtSj6SYW/nFxvs
AzwgyV5ELRPsCj7Q3d7GT9bbPxiol5EQH0X77fu0thdSw3j7Hzn6MVJcd8Ge
qJfT0X5vd9O38oN1dqG8SLrzTfZNvY8+QO4lXt8X7lcfpOfJMfKkbCfvOZcv
r9g9ZSuZIxfIasaFZ2o/1ofKaXKsvCQz5N9wj7LKzpTZcoQ8KpPl+fDc9cF6
vjxLB/2d41f1XnpXuYUm1obvk5WkOffd7q/vIc4us3P1E7S179ot9fm8Cfdm
/2GYfoQk15yz35Jub+Y7a+xvZOqlxLpur11FC3ser8mzy6knzd7EN1bbe7hD
oj2XV+TaZ6kj1S6mkVV2Kbdpbs/hZfgt7NGMYiQjGB7eA1ZSwi2auXY2L8i2
V7A7/N4kODaL5wyzz1BLF3sjDSy3d3GDeHsmz8iyT1ND5/B+85VldiP99BJi
PJ+d9nXi7Bk8De+E/Zss/TCtXXfKnqCfob1dbXcK/wW+UBT+o7KCVOcbwn3p
vfW+cjeRviP8T/SB+hg5Wh6XbeS18B3yst1DxobnIqfLJ/wHPv6Asw==
           
           "]]}]}}}, {{
       {Hue[0.142136, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwV0LdPVmEAhfFXpHxYwMQyqYjiLFaai7JoxMZgQkRMiC0xgokY/UTsyo4F
pKigLqDiSrcyoYkC6qCDiSVRsAB/AL87PHnOOe+9N/fezPLK4oqEEMIMDOBH
LITvOJ0YQhxnkJIcQl1SCGvxW+9CM6oRc3bdvg5jejdakGFvt23DTLyznUWq
/Ya+HuN6D+5gmb3DVoREvLfVYJb9pr4Bf/RerLJ163sxH3dtmbZH8nYkYdiW
a3spH8BinLPNtt2Sc/BX36QPycfQp2frPXIpFuCebbntsbwDydiiD3MVRpzn
6a/kg9gv/+Il2C1/5hockSf5vOvnyPXyUc7lPfyV/znbLL+RT3AFl/N49Azu
d76ae/XjvC96T/7J1bww+n7+xKc4zod5gi9wq/tX8JPoe3knl/A3TsFWeYRP
YtS1+fpr+RCWolj/Ev3H6HnO5+oNch7+64X6W7kSA/oavU8uwyK02bJsnfIu
xPDBVmAbjN4VGbhoS7PdlvMxoT/Dfay0P43+LVLx0XYJ6fZGvQCT+nM8wGXM
c9Zk34gp/QUe4gqu4hpqMQ2M2GHt
           "]]}]}}}, {{
       {Hue[0.142136, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{2278, 2279, 1161, 1665, 1524, 1641, 1407, 1502, 1619, 
           1312, 1384, 1479, 1596, 1240, 1290, 1362, 1457, 1574, 1190, 1219, 
           1269, 1341, 1436, 1553, 1160}}], PolygonBox[CompressedData["
1:eJwV1GVsVmcYBuDTIiGB4c4gwd1h/MJdAmQwKA7FobQUKRrcobgv6HDbcPiD
BXeWsAVnONuC/MD1en9cvZ/7Oe+XfHJOC8cn/ZwYG0VRDO39iUsbRY8zRNEI
mcJwhjGUIfzKIf6lSrooWkD69FGUrK/kIM+pbD+fdK4N1q8SqzdjK4XsV9gd
4BmV7OaR1j5Jv0KM3pQtFLRfbpfd3JHDVLDbb/eUivpc0tgl6gXMPTlBDbvL
dpG5CZv50W6ZXTZzBw5R3m6fXYL5AnX0J3oFcyqx+iB9rPkWrfX88jldzfEy
WR6XP8lLzo6TL/VecqgcJv+UjeU310fJh3qcbCwT5CZZQC51fbx8rfeRI2WK
/Fu2kFnlEzqZ42SSPCjLyb1e+7+5h3mgPE9t82P7++ZfzOXlHGLMCfZjzDdp
pecLr+UY1fWL4fc3X6OR/lVvZN5Ifn2JnsXcngOUtdtj94hy+myi8F70C3yh
od0G8tkv1nfzkLJ2s/jGAP08n2mg/0Ze5xfpf/CAMnYz+Up/fSG/8w+l7Wbw
hX56X/rQm170JJ4edGcBu8J3RCmvmc5nuunz2ck9StpN41P47fVzfKK+vp48
3uM8fQd3KWE3lY900c/ykXr6OnI7P1ffzh2K203hA531M3ygrr6WXM6n6pnN
7dhPGbttdrcppk/mfbg/9NO8p46+hpzOztF/CPcC+yhtt9XuFkX1SbwLz5ue
V3bnKNWcO2WXbL5KQ/2dXtu8mhz6bH2E+S+a65lkW/ZSSt/i+gDzOWrpN/Ui
5om8Dc+kPlreoKXreeSz8N2Zu8kjVDWfdO5FeNbD/xl5hQbmt+HeCPejuZZc
RXbzLPtX5t7mFDlcXpfNZEY5Ojwj4TPLNjIx3MeypNwcnn35X/guZH85RJ6V
NeUN10fKe+GzysLh/pUT5Bu+A2nWtOc=
           "]]}]}}}, {{
       {Hue[0.378204, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwV0jdMVWEYBuBf2sVJYYIJrhV0YGAwgIWYOFkGB0siKuiMolIsuwK2gE6g
gyYKooKaYGIwAY2J0QuoMSR2RBcVsWDdeP7hyfd+77l/Ts65J1mzZ2NtWghh
FgPcygrhY3YIH+iSu7nCNvuLRAh7KeST7hE9VLn2UldHks+6x9Trf9qbKSON
q/rt+lfyPubxRZeiQT9tb6GcdK7pd+hfy/uZz6TuqC6DDvtahnWN9l9yKxVk
cF2/U/9GPsACvuqO6TLptK9jRNdk/y0fZzkX7AX0y5m0yXO4JG+KzyIXMyj3
Ol8tv5XruSmXsFDuMPPolQfNFUz5fbOZxSjnXLtjLovPynp7VzzPGAP2B+Zq
xuMZ5w+af/Qp84TZb5bG/yLew37RLOQ5t+33zcp4T7ndnMtl+a5Zzub4vs0l
DMl97lEjv5MbWESnPZ8++ZvrLXKC8/YNPNEdsv+VT7KSBGd0OfGbkrdww+92
xWeRG1nMd91TDuv/2U+xiuz4PvW79e/lJor4oXvGEf1/+2kqmc1ZXS7d8tb4
HchLuSc/NNcwwQwmfWqU
           "]]}]}}}, {{
       {Hue[0.378204, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwV1HmUjmUYB+BvdE7J1mKrLB3ltCKEdOrUqWStMGihVbuKtn/aCyEVxjIj
bbbRol0qhBYM7cUw0qaxte+btev3xzX3ff/e75vzve/7PE+LwcOKh9YoFApF
PO3P8L0LheqahcJT6hzKmc0sZrKKbRy6T6EwjCoG+fwM2Uq20lw2lHUMdG26
rIItNJPdwFoucO1JWZG+M2P4jVvlK+SbaWq+nkrOlz8hK+hPYDS/cot8ubyn
fhp7mUexSdbEfB1rOE/2uGyAvpx65hL2yOabm+c+6KQfxS/cbF7m+iJ9yzwX
eug7qQt4RP+RWoP7qfbZr9STWcoLrn+mNmYah5jXq214mSHm99TV6rnqY76/
Ue1CRf5HnqN6FHPpbz5RfZPZ+k/Uukxgt++eqr7Dq641y7Ono769Oj+/Uf8z
N+nf9fmF+sP1c+iun0qRfiTfuv68uVHuk4P11+Z+GGB+1PV++lnUMY9nl6yD
eSQ/cWN+j6ybvoyCeQQbZQeZr+FT+uf5yHZyvHkEP2aNyd+WfUNj89W5Z/rl
N8l20N48nB+y7uRvyb6mkfkqPqZYPlVWRilTmMwkJlLCBMYzjqV5jzT03Svz
junrfzwsW8KXNJBdwYf0ce0h2WK+oL7scj6gt2sPyrbTznwf32cf5D3KNnCg
eTDvc458rOw/2prv5bvsA/ki2eccYL4sa4ez5Q/I/uU48z1sy7qXL5StZ3/z
paziLPkY2T+0Md/NVoZkTcu66kvZk+cqq5Ltp7+ElfSSjZb9TWvzXWzJ2pC/
ITtTP4XduVfZOlk9/cVU0DP7U1asn0lt8zj+krUy38nmrA3Z67Iu+snsyrOQ
rZXV1V/ECnpkXcv66mdQK++JP2XzzE1zznCs/g42ZR2ZX3P9DP0kdua5ySpl
z+kbZr1QR38hy+mefZH3rz9S/yx99NPZN++fP1x/xdwkZxXH6NtlP3K7vjpr
MnvR5xboD9OXc7q+Y54fE/U78l70a3xurr6Bvoza+tbqSwzSL6Nb9lTuJecm
i2VHqM/QW9856ybPQF8za5Hfff6U7K2cQ/LVOZtyPnK0ua06j9uyJnMWZB/k
PrK31NNyLub3yivVFjmPkps3qB3y7ijJ/lC3Z53knMveUU9iSZ5h9r9an1Jq
mavUVrzIwKzZnFVqV/V/6izwfQ==
           
           "]]}]}}}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, {{}, {}, {{
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwd1WWgFWUUBdBHSKeUdJd0I43SqISIgJR0SUspIaKkNEh3SKiggEp3d5d0
d4Ok6/PHYu9z5j2YO3FJ36RDzfaRIiIiSkWOiAj5iz8KclAfSE0K4HBEFKLy
Fr/6mUIc0gfxCQWJxm/2hTmsD6YWhdht9wn39Xl0IjpL7IpwRB/CpxRmj10t
Hujz6UwMltoV5ag+lNpcMLcmOqvNRdirf8pD/We6cMf8FYnYbo7J7/p7HNOH
8UzvS2o+M1+UbYjBmvD5XYxh+rvhPMz7ZG0e6W87NlFfoL+W35ORNPZzZVf7
u7IbOewSy+RyhtzhWGx9tJ5X5pUZ5IJwfjKW43/oxchiPm6OL8ebC8gfzf/q
/chlTiNTydnhfsg6jl/S2xKTpHZT5dpw38Lvh3MK/5Z5f/jsPNYX8kb/gUzh
+pnvye4kYWc4b5bpxTmhD6cul83tiMU6czEO6HV4oi+iG3FYbleCk/oI6lGc
g3Z1eaovpjtxWWFXklP6SD6nBPH4074Up/VR1KdkuF4kIGG4VyTilocqsUxC
Uv7ye6X5Rx9Ng/B+kIy/7ctwRh9DQ0pzyK4ez8I7RA/eYaVdWc7qY2lEGQ7b
fc6/4V2iJ8lZZfc+5/RxNOaK+Utis95cliN6fZ6H941e3Df3CPeVXeYUrNY/
4Lw+nuf6t6TlC/NVGb4A4rAhvI+eg+F6znAe5qOyAS/CtXJskr5ED18IA/XM
fG18IHuSjBSOzZS7w33Vx+j5ZL7wLsiF4RmWKR1fo5cjq/lCuDfyJ3PBkOYX
en9ym9OFd1LOCd8Xsonj1/QO4V00xw3/vpwmN4bvCn1EeBdIp88P18L+mGzI
Sz2x/WR9qR5JHxTeLb4xP5S9eIc95lSs1ctzUZ9AU66bOxKPTeZyHNcb8Sp8
v9Cb1Kyzq8AlfSLNKM8Ju8a8Du84fUjDeruKXNYn0ZwKpGWDfSWu6JNpQUXS
kZ4MZOS25zuTzEwWNvqdylzVp9CSSmRlk30VrulTaUVlTobnhTf6MvqSjc12
VbmuT6M1VThl1yRSxP//qSwX/cjOFvOH3NCn04Yb5k7EZ7O5Kqf1pkRiRXjc
3JvB4TkJz6/5UXjuSM5e87ts1T/ipj6Dl/p3pKet+absTIJwT/190+UW+5j6
yPCMhZ/Vfw7naP+PbEZ2u8gyiZwi/3Qsij5EzyOzhfdJzpNFZX/HH4dnKLxH
5hQypZwlC8l9jseVY835ZX6ZSS6SxWUOx7fpH5PNfMucUE4wz9RfyQFkoJ35
luxCQraaY/nZUeHcwvUwn5HNicJf5qiODw2fK1wf8xPZO5wj+8052a5X47Y+
iy/Dc2TuyttsM3/MWb0FUfnbPIBc7DBX544+m/ZU45xdS95ipfl7crPTXIO7
+hw6UJ085CUfuxyvyT19Lh2pwXm7VkRjlfkHnup9SMUBczyfeZxegMz6Ylki
XHvH/gNm6AuM
         "]]}}}, {{
       {Hue[0.906068, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1GW4VFUYBtChG6S7UywQFItGurulW0IFpFFSQbq7u5FUQkC6u0uREKWR
xrV/rOf93r333Dkz95zJ3KRD1fZRIpFI+qiRSEEORYtEGlA0eiQSVeaW62VF
+av95HK2XkqWlh/JnXKIvYh5mDkfecyb5T/WM5uXm6vTQf9bdiMDp/W09heG
92C+Hl+fZC7MU70Qh80NicYmfShRnBuu5+dfvSO3zd3JyBl9AYU5on9BdDbr
P9GJf/QeZOKsvpAiHNUbEYMt+jC+oijHrDUmJlv14XxNMYpTgs8pSSlKc9zZ
JsTiN30E3/Cv3pPMnNMXUYYTelNis00fSWfu6L3Iwnl9MWU5qTcjDtv1UUT1
/YzQP+CO3oW75t5k5YK+hATOTdaL8Ewvxylzc+KyQ0/hzBxzGUbr0fSR5g+5
q2fRV5hr0FW/J/uQjXfs/SIvWk9nXmSuxKfmPXKp9YTmKeYSsmi4ZrldVpbP
7eeUa/Rysq4sJPeH95Pl7Z82t6CYHk++JTeE95G/208p5+qlZVn5sdwlx9iL
bh5lLkBe8xZ5z3pW80pzTb7V78u+ZOeSnt7+4nCNLNMT6VPDNfBCr8AZc0vi
s1MfSwznRodnh/t6Nx6YvyMHl/XlVOSs3ooE7NLH0Z2H+vfk5Iq+gkqc01uT
kN36eHpQmfPW2pCIPfoEelKFqlSjOjWoyY3YkUgtWZs6XPC6trzBXn0ivajL
RWvtSMw+fRK9eaT3IxdX9ZXU45L+JUnYr0+mD4/1/rzJH/oq6nNZb09SDuhT
iOl7HBP+lzzQ+/KfeQC5+VNfzRvOTdOL81JvwBVzB5JxUE/lzLxwfzFVj6WP
NX/C++at8qH1bOZV5lrh/6U/kQPD/ca74TdSXrOewbwkPC+yivxM7pXV5M/2
E8vp+ueyRHiO5A5ZRb6yn0uu1cvLerKwPBDuRdnQ/lVzx/CZ9OTybblRHrKX
2jw/vDZcv3m3nGY9tnlceO7IZ/5NPrKe3bzaXDvcU/pTOSj8Tf7SM9pfaq7K
Gj2JPiNcO6/1L/jD3IkUHNanE8e58eGz81jvxzPz4PCbwHV9LY34U/+KlBzR
Z9Cf5/oP4bvlhr6OxlzTvyYVR/WZDKAJTWlGc1pw033cUraiNX95zTek5pg+
i4G04bq1zqThuD6bQbzQf+Q9burraRueEb0LaTmhz2EwL/Uh5OGWvoF24Vr0
rqTjpD6XuL6nCXpB/tN/4JV5KHn5W99IUudm6iWJhOfH2i35Lek5padxZoG5
AvP0ePpEcyHym7fJJ9ZzhPvQXCd8Lv21/Cnc6+Ez2tskb1vPZF5mLiurhWuU
+2T18JtuP5mcFa5JlpIFwu9tuFdklPAcy3XhemR9WUQeDM+PbO/1/wOl1RB3

         "]]}}}, {{
       {Hue[0.142136, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1WW4VFUYhuGhQzoFpLtDEKQbRQUFRZQGaSWlQWlFuiQVpKS7Q7oEKSkB
6ZTuBu/147me733X2mdmz6w9J2PjtjXaRIlEInmiRiK1o0ciD2NEIr3RKmYk
kpE/5TPclf+xXop3yR24JTfk69yTf7eenZfKbbgmf8mXuDu/wVX5CHfiztyU
7/BPrk1i/sVcGp+bz/MjfUXzfnM7NDHf4m36t81/mBugnvkqp0S18F7Da+IL
+x5xH2TCCbm09d3hHjFbziEvC/eKePhAPspdMNh6UvlXcxk8livJB8ztsV0u
LG8MnwXeDPese8x9kRkn5TnIad9y+TPExxBdMt0Uc1k8kXegDp7I/ZAFp+S5
yGXvCrkWEmCoLrluqrkcnso7URdP5f7Iin/leRiGFPb/piuPZ/Iu1MMzeQCy
4bQ8H8OR0v5pugp4Lu9GfTyXByI7zsgLMAIN8EL3A3LgrLwQI9EQjdAYTfAV
mqIZmqMFXrrmR+TEOXkRRqElXukGIRfOy4sxGm96j9N1FfFC/hOt8DqcK+TG
BXkJxiCV/TN0lfBS3oPWiOgH6/LgorwUuXUrw3lEQozVpdbNNFfGK7myfDA8
E9grF5E3mRshFarLJ7gHvrYeRR5izhvOgvksX9KXMf9pbh2uNd/gZfo85lXm
tlyb6/BlToQPzce4M3flZnyXv+efXZuGZ4XX5Spcmy9wN35tvQofkr/ljvwV
3+bv+C/r7/DmcNa5Mdfna5waH5tPhmcf39gbVR5qzofLcll5T3htLJfzyqvD
M4nEGKd7K/xumN9DBPt0RXVbwrOONGiji6YbZs6PK/IK5NOtCc8bkmC8Lq1u
tvl9RMF+XVtE1w+XC+CqvBITkE4/R1cVUXFA1w4x9CPkgrgmr8JEtEdMayP1
hfCfvBqT0AEd8S06oTO64FJs3w13Q3fEcv0o176N6/IaTEYPxLY2Wl8YN+S1
+AXp9XPDbxOi4aCuJ+Lox8hFcFNeh1+RQT8vnA9ExyFdL8TVj5XfwS15PfLr
1oZzhaSYosuom2/+CDHwt66Ybms4I3grnBHdG+GcmYvitlxO3hvOAzbIBeR1
5rpIhqm6TLoF5mqIGb57+e9wBnHY+rvyNnNTNDD/x2nxifkU90IL8/1wzu2P
Zx4XnhsuxrX4HN+xVj6cY3NHbsON+Wb4G+F/h/WCvF5ux/XC++Qr4Vnl5OH+
+Th34W7cnO9x7/A76vrMvDDcL1cPZ5svcqxwBs2HuROO2Ftc3h6eUaRDDfnf
8DmGv2c9vjze/C7uyhXkfeG5x0a5kLwhPINIgWm6LLpF4VlEbBzVldDtCO8V
6dFHl0A3wVwc9+RNmI6s+sXhs0UcHNP1RUL9RLkE7subMQP9kMjaJH1JPJC3
YCb6YwAG4gdcdu5/5MT2T7a3FB7KWzEL2fRLwueAuDiuK6nbGb5fZEBN+XT4
ntHS/CDcDw+y939P5x9F
         "]]}}}, {{
       {Hue[0.378204, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1XfcTnUYB+DHCmVlizKztyIUIiPZW/Zrb8ose8te2Xvvmb33DpG9laxK
KSLp+v1xfe7v/T3P6e05zzlH+qiO1TpEi0QiUdEjkQGvRSJl4kQi+2JHIkfM
z83VZk4u8Lr9WzMJp1lm32kW5So/OL+3+Vx/whxnbjLf4zIf2xeY6TnHZvv+
0HOdDc5vbt7SHzN7muvNvGSTZ5pvhb/DWvsesxh/OG+EGYfZ+m3mB1SWl5qZ
2SEfNEsx0OfLmvt19Vgj5+INebKZlOXyWZ/rI7+Qx7NZfp+S8kIzA1vk73yu
hXxb/ooNcj6yy7PM1KyT//S5kXJc5tirsEzOwk55kOPl5ANyfeIxxZ6MFfI5
x/vK/8oTKMVGXUvdHflrcjDbnob18hPHR4Xfjrn2qgzWfWo/KDcgPj/q+ule
yhP5JPx2ula6n+Re5OQv3ehwrZhnr8YQXXn7IbkhCTiv66/7T55E6XD9dK11
P8u9ycXfuqF8pj9sb0RCLugG6F6Fe44ybNG10d2V+5Cbp7phVNAfsTcmERd1
W2mr/8Xelzw80w2nov6ovQlvckm3jXb6e/Z+5OUf3TdU0h+zR5GYy7rttNff
t/cnH8/DvUhl/XF7U5JwRbcj/P5UceyErhlJuarbGX4nqjp2UtecZFzT7QrX
nDGMZRzjmcBEJvEtk5lCNf+N753bguRc1+2mg/6BfQD5eaGbSnX9KXtLUnBD
t4eO+of2gRTgX900aoTn396KlNzUDdRFmGwvy15dJ/ujcF/zHi/Dd9DFY769
OtN1Ne1n5NakYqo9OSvlW44PkqMxxV6ORXJGtsr7HO8s/xru6/AsyvnDcyrP
Md8O75Xw/2MWD/djuIZm/PCdWeDYdrMwNeTlZlbOs8t+yPyEm8xwbq3w/tEf
NduYa83cXAzvJvs0M0X4Pqyy7zI/5Fp4Pzh/sBk9/MZMDfe0WZBP5cVmJrbJ
+332C/m38HxRkLn2d/hOfhXuAzkBC+01mamrbT8rtyU1d3RDdDGYZi/PAd2X
9t/loRQiwix9Hf05uR1p+El3kC76x/ZhfEC08J7R19X/KLfnbX7WHWIOn4fr
qOvAO9zVHWYu9Ry7oOtIWn7RHWEe81nAQhaxmNs+v8RcyjLqh2vuvE6k457u
KMtp4NglXWfSc193jK7h3wr7cAoTnRX6hvrL8hdk4IHuON30f9q/oQgxWKlv
pL8if0lGHoZ3mC4m0+2fcULX3f5EHkFRYrJK31h/Ve5CJh6Fd5guVrjH7BU4
qeth/0seyYfMs6dloxyL8XJCFsm1wneRs7FbXu38JuG+k7uyTs7Du+GZM1Oy
Wt5tfhSen/BeNF8L7w5mOrbVLBS+KxXtS8L54fdme7iPzJLcCOc4v6f5t/64
OcrcaBYIv0X4G/b5Zrpwf7IpPLtmifA35QlmIhbLO8wi1A7X28zOHnmNvxEl
X5e7kZkZ9lSskX8L72o5NrPslTil+8r+VB5NMWIzUfdmuKfkOuE59rmm4bvI
3cnC77rTfK1/Zh9DceKE66lvFt4Lcg+y8lh3hl76f+xjKUFcJukSs1SuG+4D
OQd75cNmaW6x3vn/A2oKVpA=
         "]]}}}}}],
  AspectRatio->NCache[1/GoldenRatio, 0.618034],
  Axes->True,
  AxesOrigin->{0, 0},
  Method->{"AxesInFront" -> True},
  PlotRange->{{0, 10}, {-0.346126, 0.581865}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",ExpressionUUID->"7d2ae379-81e8-47b8-9c71-\
0e19c32e81a2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second level section heading", "Subsection",ExpressionUUID->"5eead7ea-a893-4f4f-8bff-38983a07b822"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJyk3Qe0hVdVLmwggYReIoHQQQgohF4DASkB6QIhBoEAoet/UUG4v6JXioB0
MDRFkZJAEkhoIQFF8QqKFURBpXcIKAoICqh4n7vff79jnrVPMhzjX2OcPb7z
7W+vb6053/XOueZqVz/hp+/7qAuc73zne8LBPu77sP95+8c//mE/f79L+ef+
j3vCYx/9uEc+4q6P+7lHPvqRj7/lCQe4+Sf/39//vT7nnHO+9KUvfeELX/j8
Jn1hk1x87nOf++xnP/uZz3zmU5/61Mc+9rG///u//9u//du//uu//su//Mu/
+Iu/+PM///Nc/Omf/ukf//Efv+997/vDP/zD97znPb/7u7/7rne96+yzzz7r
rLPesUlv3aS37KS3b9KZ2+T6rdvk2zPOOOP0vem000479dRTX//617/uda97
9atf/Vu/9VuvfOUrf2OTfv3Xf/3lL3/5S1/60hNPPPHX9qYXb9MLX/jC5z3v
ec95znOe/exn/+qv/uozn/nMZzzjGb/yK7/ytKc97SlPecov//IvP/nJT/6F
Tfr5n/95n/79pV/6pf+1Tb+8SZ586lOf+vSnP90Pn7FNspLhc5/73Be84AUv
etGLvFQxXvayl73iFa9Qwle96lWvfe1rTz75ZOVXC/VSu7dtkpr6VHeyIrR3
v/vdBPgHf/AH/3uTXPj393//9933rWciojdvU0T0pje96Y1vfOO+wlEAxXjJ
S16i+srW6kvP3SR3nv/8579gk164N7njK8/kJz7ntR+msnLOZ6tMHar8mte8
5stf/vIXv/jFAGlJwdUnP/lJuProRz/6d3/3dx/+8Ic/8IEPBFHF1R/90R8F
V0QRIUxckQbpEWakEWFORAVUkXNAVaElvWmbSO+UU06hI5r67d/+beUvuirD
JZ24SXSt+pFtcPWsZz0r0AKS4OoXf/EXC63gyp0FWsVV4JQkqwVX3qsw0P7/
H1e/93u/l6bqmYjxjJEinNM2iWTe8IY3nHTSSXTqpcFV2lrrrpDBVbARXCUV
XS/YpomrQPE521RcBVStcnBFKbAdsgqKkj6zTZ/+9KeR1Sc+8YmPbhLK+shH
PvJXf/VXhRbW+pM/+RO4eu8mkQY5/M7v/M7E1cJFrt1cvp24CqgWXGmS+Uyr
jPQUHroCrVCWqpHky0byb9AVyiKNUlaghXlABWYgB4omtIKrpkBr4upZ2yQ3
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
lHwSNo9OlxyCqDrSTd3Ia+LqzduFe7uTczpsNMs/Hbk6Y2/ZDhnPGs346tl7
V9C/Y7uz074cvvQHd5dPtpO4bJ8yowRRX/cBa3Byjtl174I5w/llm1WHE1fn
FmPfxVWjo5kW2EmDtYxzdsSL906MXyYwz1m+u2GHOcy3LFZdtNC+/JnbVZwz
ktk+V2/OXVzapSpZtV82uS6mELQmtzQadsrOPNjdiToLtJrJnBS0i71dZ+ys
7Y6su47cm8b89hqCOV28867n4E4DmzVhSzdw9vEX4trF1RxJnNNjagQbZp9O
e+YqL9uv5cmG4mscw10x0K/Y7nfXFQqdaLqEHWYwfMHV4q7vTmV5+1i5X5d7
LuVbFoe+c+9Q3a4BnV5Wfr74Nqdtl4fsTujad5nS7ELOiMfsj8wu5HTDdvuD
SY1cvXFsIzPnJi1zSDpLufu1ds7VMtj3krFjYf2xTjQtcc1xxkB0+lSxZfWs
uqy1S3WWafB5pk/u8ligFYNYG93Fnsuq5Dn9b06LOnVMUF9ip7PhT1xNMGCY
9+ykzvMslbXntZvKVx3HmT3TU3Zmn7YWxdVsIIXW6SP81WjYgqvZE1lGtGfc
9YyxC8GyVmVeN5Wy5j51yzjO0q8vZtoXq01ccCUFV8tsq+5F89S9aVlkkcnw
ubm4XkkzEFFoNbBWaLXbMtcvTAY7de8E9Tft3Vpkt0NXh+Sdm61s4mzP3Zg7
Qb1r23dXki6x7hlweOsIilaP03uZo5/Tn5+GfprFJQVX0wfrCGBqd+ZYZrg7
gjOxtO98pFP27i8dB34ZRG4cconJ54GXbvfyXSbbzIHChta7gGJuRDPX13c5
WGHWpYhZel8SC4MFWgmfFlrSy7Y7wM8daTrboWM9J+9dv9Amf9p2Pvxu1HTp
Er5r7xbfXZOV1P24FhIruiaVpT8Y/2pfPe47T74oWhzF2R/ZdRrftDOjfumu
Lh3JWZ5Tx+zcha92Fx28ZuxbXu99TnFJeKFjiMuUhvLYMsu0UfclsLBs0N2t
/AKtrD3sUtbsB9hV0l3Uk5h8WatTTONrzX7r7gDiMn1rGes5dSzhWaYuvHU7
Ae+snd1NISq4WvYL6ujMYh/3dfgDwjePzVtePxay7bv+IvMV52Sw/rv0cxuv
OA9cLQG6GXDoK9qDmACbjmtxpS2TfAJZS1Sz/tUcN5wP7M6lKcvNKGjnwwRU
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
R4+KMAmA/wOAcKqx
        "], {{0, 200}, {200, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      BaseStyle->"ImageGraphics",
      ImageSize->{163.5, Automatic},
      ImageSizeRaw->{200, 200},
      PlotRange->{{0, 200}, {0, 200}}], Cell["\<\
SideCaption duis autem vel eum iriure dolor in hendrerit in vulputate velit \
esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero \
eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zril \
delenit augue duis dolore te feugait nulla facilisi.\
\>", "SideCaption",ExpressionUUID->"97585c71-c623-4387-85dd-2b959bccf2a9"]}
   }],
  "Grid"]], "SideCaptionArray",ExpressionUUID->"d51d4607-6dcb-447c-9488-\
79010163afad"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->Automatic,
TaggingRules->{"SlideShow" -> True},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 16, \
2017)",
StyleDefinitions->FrontEnd`FileName[{"SlideShow"}, "Garnet.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[422, 15, 4399, 98, 
  75, "SlideShowNavigationBar", "ExpressionUUID" -> "8f98c996-c03d-4e8d-
   aa01-53e132033ada",
   CellTags->"SlideShowHeader"],
  Cell[5415, 137, 122, 2, 
  74, "SlideShowNavigationBar", "ExpressionUUID" -> "413dda73-
   f752-497c-9a4d-1bd490dbe1a4",
   CellTags->"SlideShowHeader"],
  Cell[110952, 2165, 122, 2, 
  74, "SlideShowNavigationBar", "ExpressionUUID" -> "0b4a03fc-221a-4d34-bc79-
   b8ad606e8df7",
   CellTags->"SlideShowHeader"],
  Cell[398422, 7455, 122, 2, 
  74, "SlideShowNavigationBar", "ExpressionUUID" -> "2b5f5186-a5bd-4702-
   b7ca-2447af88c268",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 528917, 9524}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 4399, 98, 75, "SlideShowNavigationBar", "ExpressionUUID" -> \
"8f98c996-c03d-4e8d-aa01-53e132033ada",
 CellTags->"SlideShowHeader"],
Cell[4824, 115, 180, 4, 311, "Title", "ExpressionUUID" -> \
"9c5948ab-fba9-451f-b1a5-6dce3e05c424"],
Cell[5007, 121, 154, 3, 115, "Subtitle", "ExpressionUUID" -> \
"31109000-9adc-4f7b-aea0-8c360d3af8e1"],
Cell[5164, 126, 214, 6, 93, "Text", "ExpressionUUID" -> \
"4c0881f0-dc77-4dba-affc-474653cae627"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5415, 137, 122, 2, 74, "SlideShowNavigationBar", "ExpressionUUID" -> \
"413dda73-f752-497c-9a4d-1bd490dbe1a4",
 CellTags->"SlideShowHeader"],
Cell[5540, 141, 198, 4, 123, "Section", "ExpressionUUID" -> \
"cae85696-a3b2-468c-a1bd-a76b17a02932"],
Cell[CellGroupData[{
Cell[5763, 149, 161, 3, 47, "Subchapter", "ExpressionUUID" -> \
"455f56a0-9ea2-4b34-967d-f9a39ad165ea"],
Cell[5927, 154, 5809, 153, 423, "Code", "ExpressionUUID" -> \
"72d2c065-c313-4331-b638-8867867cd2f2"],
Cell[11739, 309, 5358, 141, 487, "Code", "ExpressionUUID" -> \
"9a4c4c7f-711d-4b1e-8152-947585cd93b1"],
Cell[CellGroupData[{
Cell[17122, 454, 346, 7, 70, "Code", "ExpressionUUID" -> \
"da348f9a-0b23-4b15-8948-12dbd2a70f33"],
Cell[17471, 463, 268, 6, 47, "Output", "ExpressionUUID" -> \
"5efa19e4-4909-4dbc-af8e-bc2528f1a10f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17776, 474, 2045, 35, 295, "Code", "ExpressionUUID" -> \
"8e2ba8eb-317b-4391-9b7f-0e01e4e2b00b"],
Cell[19824, 511, 63706, 1098, 385, "Output", "ExpressionUUID" -> \
"7ce1547d-1f31-4745-aa41-fff05d1291d7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[83579, 1615, 166, 3, 63, "Subchapter", "ExpressionUUID" -> \
"2347d23c-e1b6-4fc9-a3ee-39a9ec69176b"],
Cell[83748, 1620, 3109, 69, 199, "Code", "ExpressionUUID" -> \
"549ebc57-78e7-4749-944b-7642fe65feb8"],
Cell[86860, 1691, 4339, 94, 295, "Code", "ExpressionUUID" -> \
"a48a2a06-4b55-4cbd-a00c-a21158127388"],
Cell[CellGroupData[{
Cell[91224, 1789, 2253, 40, 295, "Code", "ExpressionUUID" -> \
"3aad3c34-dbd9-4a54-bcad-0ce616da0e84"],
Cell[93480, 1831, 17411, 327, 455, "Output", "ExpressionUUID" -> \
"afb76fe1-7462-49f1-9940-749666e3f839"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110952, 2165, 122, 2, 74, "SlideShowNavigationBar", "ExpressionUUID" -> \
"0b4a03fc-221a-4d34-bc79-b8ad606e8df7",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[111099, 2171, 162, 3, 123, "Section", "ExpressionUUID" -> \
"d95a58a0-7a32-4190-8bcd-ed383a44f65a"],
Cell[CellGroupData[{
Cell[111286, 2178, 1333, 36, 199, "Code", "ExpressionUUID" -> \
"d8864132-f50b-4850-a22b-1332cd54b466"],
Cell[112622, 2216, 222, 4, 47, "Output", "ExpressionUUID" -> \
"a8d79674-30a4-4105-b529-be677b1e2516"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112881, 2225, 1117, 30, 199, "Code", "ExpressionUUID" -> \
"ad602826-45d8-4ee0-8f07-fd7af1c291e6"],
Cell[114001, 2257, 314, 7, 47, "Output", "ExpressionUUID" -> \
"1792837f-cf99-4ee6-a91a-a4d47232df29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114352, 2269, 2879, 56, 679, "Code", "ExpressionUUID" -> \
"5cf646f5-6dfe-4d55-b21d-a6a5990f6418"],
Cell[117234, 2327, 44607, 940, 354, "Output", "ExpressionUUID" -> \
"b36619a8-7473-4730-9375-04e3f77406ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161878, 3272, 189, 4, 70, "Code", "ExpressionUUID" -> \
"892efb4f-77cb-4af5-97ca-8f5ebba48fdd"],
Cell[162070, 3278, 188, 4, 47, "Output", "ExpressionUUID" -> \
"95edc650-194c-4fbf-9dea-9d1c0154d649"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162295, 3287, 279, 7, 70, "Code", "ExpressionUUID" -> \
"959b815f-055e-44b3-be36-8e9806e02522"],
Cell[162577, 3296, 134, 3, 47, "Output", "ExpressionUUID" -> \
"595ae429-16f0-4cc1-8134-cd92561562c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162748, 3304, 1887, 43, 231, "Code", "ExpressionUUID" -> \
"016a3e58-fa62-4dd5-9ccb-3932bba25613"],
Cell[164638, 3349, 44653, 941, 354, "Output", "ExpressionUUID" -> \
"0886b0de-1945-4f9e-bef5-8fce03cacdcc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209328, 4295, 1340, 33, 135, "Code", "ExpressionUUID" -> \
"d0aae44a-bd45-46c0-afa9-9364d8530135"],
Cell[210671, 4330, 187690, 3118, 237, 70752, 1201, "CachedBoxData", \
"BoxData", "Output", "ExpressionUUID" -> \
"0d8c21c0-590c-49a3-98e3-767df1130b86"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[398422, 7455, 122, 2, 74, "SlideShowNavigationBar", "ExpressionUUID" -> \
"2b5f5186-a5bd-4702-b7ca-2447af88c268",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[398569, 7461, 105, 0, 94, "Subsection", "ExpressionUUID" -> \
"91281155-3829-486b-9ee8-a4b38dc64b2f"],
Cell[CellGroupData[{
Cell[398699, 7465, 107, 0, 74, "Subsubsection", "ExpressionUUID" -> \
"50700d2f-e8d5-43d5-be8f-f89b268eeaff"],
Cell[CellGroupData[{
Cell[398831, 7469, 463, 13, 47, "Input", "ExpressionUUID" -> \
"64419f24-509b-408d-aaba-91942494d3de"],
Cell[399297, 7484, 68769, 1020, 240, "Output", "ExpressionUUID" -> \
"7d2ae379-81e8-47b8-9c71-0e19c32e81a2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[468127, 8511, 105, 0, 94, "Subsection", "ExpressionUUID" -> \
"5eead7ea-a893-4f4f-8bff-38983a07b822"],
Cell[468235, 8513, 60262, 994, 186, "SideCaptionArray", "ExpressionUUID" -> \
"d51d4607-6dcb-447c-9488-79010163afad"]
}, Open  ]]
}, Open  ]]
}
]
*)

